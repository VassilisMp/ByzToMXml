package grammar;// Generated from /home/vassilis/IdeaProjects/ByzToMXml/grammarSrc/Byz.g4 by ANTLR 4.8

import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.ATN;
import org.antlr.v4.runtime.atn.ATNDeserializer;
import org.antlr.v4.runtime.atn.ParserATNSimulator;
import org.antlr.v4.runtime.atn.PredictionContextCache;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.tree.ParseTreeListener;
import org.antlr.v4.runtime.tree.TerminalNode;

import java.util.List;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ByzParser extends Parser {
	static { RuntimeMetaData.checkVersion("4.8", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		MIKRON_ISON=1, VAREIA_NEO=2, PIASMA_NEO=3, PSIFISTON_NEO=4, OMALON=5, 
		ANTIKENOMA=6, LYGISMA=7, PARAKLITIKI_NEO=8, PARAKALESMA_NEO=9, ETERON_PARAKALESMA=10, 
		KYLISMA=11, ANTIKENOKYLISMA=12, TROMIKON_NEO=13, EKSTREPTON=14, SYNAGMA_NEO=15, 
		SYRMA=16, CHOREVMA_NEO=17, EPEGERMA=18, SEISMA_NEO=19, XIRON_KLASMA=20, 
		TROMIKOPSIFISTON=21, PSIFISTOLYGISMA=22, TROMIKOLYGISMA=23, TROMIKOPARAKALESMA=24, 
		PSIFISTOPARAKALESMA=25, TROMIKOSYNAGMA=26, PSIFISTOSYNAGMA=27, GORGOSYNTHETON=28, 
		ARGOSYNTHETON=29, ETERON_ARGOSYNTHETON=30, OYRANISMA_NEO=31, THEMATISMOS_ESO=32, 
		THEMATISMOS_EXO=33, THEMA_APLOUN=34, THES_KAI_APOTHES=35, KATAVASMA=36, 
		ENDOFONON=37, YFEN_KATO=38, YFEN_ANO=39, LEIMMA_ENOS_CHRONOU=40, LEIMMA_DYO_CHRONON=41, 
		LEIMMA_TRION_CHRONON=42, LEIMMA_TESSARON_CHRONON=43, LEIMMA_IMISEOS_CHRONOU=44, 
		AGOGI_POLI_ARGI=45, AGOGI_ARGOTERI=46, AGOGI_ARGI=47, AGOGI_METRIA=48, 
		AGOGI_MESI=49, AGOGI_GORGI=50, AGOGI_GORGOTERI=51, AGOGI_POLI_GORGI=52, 
		MARTYRIA_PROTOS_ICHOS=53, MARTYRIA_ALLI_PROTOS_ICHOS=54, MARTYRIA_DEYTEROS_ICHOS=55, 
		MARTYRIA_ALLI_DEYTEROS_ICHOS=56, MARTYRIA_TRITOS_ICHOS=57, MARTYRIA_TRIFONIAS=58, 
		MARTYRIA_TETARTOS_ICHOS=59, MARTYRIA_TETARTOS_LEGETOS_ICHOS=60, MARTYRIA_LEGETOS_ICHOS=61, 
		MARTYRIA_PLAGIOS_ICHOS=62, ISAKIA_TELOUS_ICHIMATOS=63, APOSTROFOI_TELOUS_ICHIMATOS=64, 
		FANEROSIS_TETRAFONIAS=65, FANEROSIS_MONOFONIAS=66, FANEROSIS_DIFONIAS=67, 
		MARTYRIA_VARYS_ICHOS=68, MARTYRIA_PROTOVARYS_ICHOS=69, MARTYRIA_PLAGIOS_TETARTOS_ICHOS=70, 
		GORTHMIKON_N_APLOUN=71, GORTHMIKON_N_DIPLOUN=72, DIASTOLI_APLI_MIKRI=73, 
		DIASTOLI_APLI_MEGALI=74, DIASTOLI_DIPLI=75, DIASTOLI_THESEOS=76, SIMANSIS_THESEOS=77, 
		SIMANSIS_THESEOS_DISIMOU=78, SIMANSIS_THESEOS_TRISIMOU=79, SIMANSIS_THESEOS_TETRASIMOU=80, 
		SIMANSIS_ARSEOS=81, SIMANSIS_ARSEOS_DISIMOU=82, SIMANSIS_ARSEOS_TRISIMOU=83, 
		SIMANSIS_ARSEOS_TETRASIMOU=84, DIASTOLI_APLI_MIKRI_ON_QCHAR=85, DIASTOLI_DIPLI_ON_QCHAR=86, 
		METER_2_LEFT_ON_QCHAR=87, METER_2_MIDDLE_ON_QCHAR=88, METER_3_LEFT_ON_QCHAR=89, 
		METER_3_MIDDLE_ON_QCHAR=90, METER_4_LEFT_ON_QCHAR=91, METER_4_MIDDLE_ON_QCHAR=92, 
		METER_5_ON_DIASTOLI_DIPLI=93, METER_6_ON_DIASTOLI_DIPLI=94, METER_7_ON_DIASTOLI_DIPLI=95, 
		METER_8_ON_DIASTOLI_DIPLI=96, DIGRAMMA_GG=97, DIFTOGGOS_OU=98, STIGMA=99, 
		ARKTIKO_PA=100, ARKTIKO_VOU=101, ARKTIKO_GA=102, ARKTIKO_DI=103, ARKTIKO_KE=104, 
		ARKTIKO_ZO=105, ARKTIKO_NI=106, PSIFISTON_PALAIO=107, ANTIKENOMA_DEXIA=108, 
		OMALON_ARISTERA=109, OMALON_DEXIA=110, ETERON_PARAKALESMA_DEXIA=111, ETERON_PARAKALESMA_PALAIO=112, 
		ETERON_PARAKALESMA_MEGALO=113, YFEN_KATO_MIKRO=114, YFEN_ANO_MIKRO=115, 
		APLI_USED_NEXT_TO_LEIMMA=116, ENDIXI_NH_ARISTERA=117, ENDIXI_NH_DEXIA=118, 
		ENDIXI_PA_ARISTERA=119, ENDIXI_PA_DEXIA=120, ENDIXI_BOY_ARISTERA=121, 
		ENDIXI_BOY_DEXIA=122, ENDIXI_GA_ARISTERA=123, ENDIXI_GA_DEXIA=124, ENDIXI_DI_ARISTERA=125, 
		ENDIXI_DI_DEXIA=126, ENDIXI_KE_ARISTERA=127, ENDIXI_KE_DEXIA=128, ENDIXI_ZW_ARISTERA=129, 
		ENDIXI_ZW_DEXIA=130, ENDIXI_DI_KATO_ARISTERA=131, ENDIXI_PA_KATO_ARISTERA=132, 
		ISOKRATIMA_NH=133, ISOKRATIMA_PA=134, ISOKRATIMA_BOY=135, ISOKRATIMA_GA=136, 
		ISOKRATIMA_DI=137, ISOKRATIMA_KE=138, ISOKRATIMA_ZW=139, ISOKRATIMA_MAZI=140, 
		ISOKRATIMA_ANW_ZW=141, ISOKRATIMA_KATW_DI=142, ISOKRATIMA_KATW_KE=143, 
		SIGA=144, KANONIKA=145, DINATA=146, ISON_SIGA=147, ISON_KANONIKA=148, 
		ISON_DINATA=149, GRAMMA_MARTYRIAS_TONOS=150, LOW_GA=151, LOW_DI=152, LOW_KE=153, 
		MARTYRIA_NENANO=154, MARTYRIA_ALLI_PROTOS_ICHOS_LOW=155, MARTYRIA_ALLI_DEYTEROS_ICHOS_LOW=156, 
		MARTYRIA_TRIFONIAS_LOW=157, MARTYRIA_TETARTOS_ICHOS_LOW=158, MARTYRIA_NENANO_LOW=159, 
		HXOS_WORD=160, HXOS_A_GRAMMA=161, HXOS_B_GRAMMA=162, HXOS_G_GRAMMA=163, 
		HXOS_D_GRAMMA=164, HXOS_VARYS_WORD=165, FTHOGGOS_NH_WORD=166, FTHOGGOS_PA_WORD=167, 
		FTHOGGOS_BOY_WORD=168, FTHOGGOS_GA_WORD=169, FTHOGGOS_DI_WORD=170, FTHOGGOS_KE_WORD=171, 
		FTHOGGOS_ZW_WORD=172, WORD_TOS_FOR_LEGETOS=173, ARKTIKH_MARTYRIA_TETARTOS_ICHOS=174, 
		ARKTIKH_MARTYRIA_PLAGIOS_A_ICHOS=175, ARKTIKH_MARTYRIA_DEYTEROS_ICHOS=176, 
		ARKTIKH_MARTYRIA_TRITOS_ICHOS=177, ARKTIKH_MARTYRIA_MALAKO_XRWMA_BOY=178, 
		ARKTIKH_MARTYRIA_AGIA=179, ARKTIKH_MARTYRIA_PRWTOS=180, ARKTIKH_MARTYRIA_DEYTEROS_ME_DIFWNH_ANAVASH=181, 
		ARKTIKH_MARTYRIA_VARYS_DIATONIKOS=182, ARKTIKH_MARTYRIA_PA_SKLHRO_CHROMA=183, 
		ARKTIKH_MARTYRIA_DI_MALAKO_CHROMA=184, ARKTIKH_MARTYRIA_SYNEXES_ELAPHRON_SE_FTHOGGO=185, 
		ARKTIKH_MARTYRIA_TETRAFWNH_ANAVASI_SE_FTHOGGO=186, ARKTIKH_MARTYRIA_DIFWNI_KATAVASI_SE_FTHOGGO=187, 
		ARKTIKH_MARTYRIA_TRIFWNH_ANAVASI_SE_FTHOGGO=188, AGOGI_SE_MARTYRIA_POLI_ARGI=189, 
		AGOGI_SE_MARTYRIA_ARGOTERI=190, AGOGI_SE_MARTYRIA_ARGI=191, AGOGI_SE_MARTYRIA_METRIA=192, 
		AGOGI_SE_MARTYRIA_GORGI=193, AGOGI_SE_MARTYRIA_GORGOTERI=194, AGOGI_SE_MARTYRIA_POLI_GORGI=195, 
		ARXIGRAMMA=196, LEFT_PARENTHESIS=197, RIGHT_PARENTHESIS=198, CAP_LETTER=199, 
		SMALL_LETTER=200, LATIN_WORD=201, GREEK_WORD=202, SYMBOLS_NUMBERS=203, 
		WHITESPACE=204, GORGON_NEO_ANO=205, GORGON_PARESTIGMENON_ARISTERA=206, 
		GORGON_PARESTIGMENON_DEXIA=207, DIGORGON=208, DIGORGON_PARESTIGMENON_ARISTERA_KATO=209, 
		DIGORGON_PARESTIGMENON_ARISTERA_ANO=210, DIGORGON_PARESTIGMENON_DEXIA=211, 
		TRIGORGON=212, ARGON=213, IMIDIARGON=214, DIARGON=215, GORGON_NEO_KATO=216, 
		GORGON_USED_ON_KENTIMATA_ABOVE_OLIGON=217, DIGORGON_USED_ON_KENTIMATA_ABOVE_OLIGON=218, 
		GORGON_USED_ON_YPORROI=219, GORGON_LEFT_DOT_USED_ON_YPORROI=220, GORGON_RIGHT_DOT_USED_ON_YPORROI=221, 
		DIGORGON_USED_ON_YPORROI=222, DIGORGON_LEFT_DOT_USED_ON_YPORROI=223, TRIGORGON_USED_ON_YPORROI=224, 
		TRIGORGON_LEFT_DOT_USED_ON_YPORROI=225, GORGON_USED_ON_L116_YPORROI=226, 
		DIGORGON_USED_ON_L116_YPORROI=227, TRIGORGON_USED_ON_L116_YPORROI=228, 
		GORGON_LEFT_DOT_USED_ON_L116_YPORROI=229, GORGON_ANO_STA_DEXIA=230, GORGON_KATO=231, 
		GORGON_KATO_STA_DEXIA=232, GORGON_PARESTIGMENON_ARISTERA_STA_DEXIA=233, 
		GORGON_PARESTIGMENON_DEXIA_STA_DEXIA=234, DIGORGON_STA_DEXIA=235, DIGORGON_PARESTIGMENON_ARISTERA_KATO_STA_DEXIA=236, 
		DIGORGON_PARESTIGMENON_ARISTERA_ANO_STA_DEXIA=237, DIGORGON_PARESTIGMENON_DEXIA_STA_DEXIA=238, 
		TRIGORGON_STA_DEXIA=239, TRIGORGON_PARESTIGMENON_ARISTERA_KATO=240, TRIGORGON_PARESTIGMENON_ARISTERA_KATO_STA_DEXIA=241, 
		TRIGORGON_PARESTIGMENON_ARISTERA_ANO=242, TRIGORGON_PARESTIGMENON_ARISTERA_ANO_STA_DEXIA=243, 
		TRIGORGON_PARESTIGMENON_DEXIA=244, TRIGORGON_PARESTIGMENON_DEXIA_STA_DEXIA=245, 
		KLASMA_ANO=246, DIPLI_ARCHAION=247, KRATIMA_ARCHAION=248, KRATIMA_ALLO=249, 
		KRATIMA_NEO=250, APODERMA_NEO=251, APLI=252, DIPLI=253, TRIPLI=254, TETRAPLI=255, 
		KORONIS=256, KLASMA_KATO=257, KLASMA_ANO_STA_DEXIA=258, KLASMA_ANO_STA_ARISTERA=259, 
		APLI_STA_DEXIA=260, DIPLI_STA_DEXIA=261, TRIPLI_STA_DEXIA=262, STAVROS=263, 
		KORONIS_HAMILA=264, KORONIS_HAMILA_STA_DEXIA=265, KORONIS_STA_DEXIA=266, 
		STAVROS_PSILA=267, BREATH_MARK=268, ENARXIS_KAI_FTHORA_VOU=269, IMIFONON=270, 
		IMIFTHORON=271, FTHORA_ARCHAION_DEYTEROU_ICHOU=272, FTHORA_DIATONIKI_PA=273, 
		FTHORA_DIATONIKI_NANA=274, FTHORA_NAOS_ICHOS=275, FTHORA_DIATONIKI_DI=276, 
		FTHORA_SKLIRON_DIATONON_DI=277, FTHORA_DIATONIKI_KE=278, FTHORA_DIATONIKI_ZO=279, 
		FTHORA_DIATONIKI_NI_KATO=280, FTHORA_DIATONIKI_NI_ANO=281, FTHORA_MALAKON_CHROMA_DIFONIAS=282, 
		FTHORA_MALAKON_CHROMA_MONOFONIAS=283, FHTORA_SKLIRON_CHROMA_VASIS=284, 
		FTHORA_SKLIRON_CHROMA_SYNAFI=285, FTHORA_NENANO=286, CHROA_ZYGOS=287, 
		CHROA_KLITON=288, CHROA_SPATHI=289, FTHORA_I_YFESIS_TETARTIMORION=290, 
		FTHORA_ENARMONIOS_ANTIFONIA=291, YFESIS_TRITIMORION=292, DIESIS_TRITIMORION=293, 
		DIESIS_TETARTIMORION=294, DIESIS_APLI_DYO_DODEKATA=295, DIESIS_MONOGRAMMOS_TESSERA_DODEKATA=296, 
		DIESIS_DIGRAMMOS_EX_DODEKATA=297, DIESIS_TRIGRAMMOS_OKTO_DODEKATA=298, 
		YFESIS_APLI_DYO_DODEKATA=299, YFESIS_MONOGRAMMOS_TESSERA_DODEKATA=300, 
		YFESIS_DIGRAMMOS_EX_DODEKATA=301, YFESIS_TRIGRAMMOS_OKTO_DODEKATA=302, 
		GENIKI_DIESIS=303, GENIKI_YFESIS=304, DIESIS_APLI_DYO_DODEKATA_DEXIA=305, 
		DIESIS_MONOGRAMMOS_TESSERA_DODEKATA_DEXIA=306, DIESIS_DIGRAMMOS_EX_DODEKATA_DEXIA=307, 
		YFESIS_APLI_DYO_DODEKATA_DEXIA=308, YFESIS_MONOGRAMMOS_TESSERA_DODEKATA_DEXIA=309, 
		YFESIS_DIGRAMMOS_EX_DODEKATA_DEXIA=310, ISON_NEO=311, OLIGON_NEO=312, 
		OXEIA_NEO=313, PETASTI=314, KENTIMATA_NEO_ANO=315, KENTIMA_NEO_ANO=316, 
		YPSILI=317, APOSTROFOS_NEO=318, APOSTROFOI_SYNDESMOS_NEO=319, YPORROI=320, 
		KRATIMOYPORROON=321, ELAFRON=322, CHAMILI=323, KENTIMATA_NEO_MESO=324, 
		KENTIMA_NEO_MESO=325, KENTIMATA_NEO_KATO=326, KENTIMA_NEO_KATO=327, OLIGON_OVER_PETASTI=328, 
		KENTIMA_UNDER_OLIGON=329, OLIGON_ABOVE_KENTIMATA=330, KENTIMATA_ABOVE_OLIGON=331, 
		ANTIKENOMA_UNDER_KENTIMA_UNDER_OLIGON=332, APLI_UNDER_ANTIKENOMA_UNDER_KENTIMA_UNDER_OLIGON=333, 
		APLI_UNDER_ANTIKENOMA_UNDER_OLIGON_ABOVE_KENTIMATA=334, KENTIMA_OVER_OLIGON=335, 
		KENTIMA_OVER_PETASTI=336, YPSILI_AT_RIGHT_END_OF_OLIGON=337, YPSILI_AT_RIGHT_END_OF_PETASTI=338, 
		YPSILI_AT_LEFT_END_OF_OLIGON=339, YPSILI_AT_LEFT_END_OF_PETASTI=340, YPSILI_AT_RIGHT_END_OF_OLIGON_AND_KENTIMATA_AT_LEFT=341, 
		YPSILI_AT_LEFT_END_OF_OLIGON_AND_KENTIMATA_AT_RIGHT=342, YPSILI_NEXT_TO_KENTIMA_OVER_OLIGON=343, 
		YPSILI_NEXT_TO_KENTIMA_OVER_PETASTI=344, YPSILI_OVER_KENTIMA_OVER_OLIGON=345, 
		YPSILI_OVER_KENTIMA_OVER_PETASTI=346, TWO_IPSILES_OVER_OLIGON=347, TWO_IPSILES_OVER_PETASTI=348, 
		TWO_IPSILES_OVER_KETNIMATA_OVER_OLIGON=349, TWO_IPSILES_OVER_KETNIMATA_OVER_PETASTI=350, 
		YPSILI_OVER_KENTIMA_OVER_OLIGON_AND_YPSILI_TO_LEFT=351, YPSILI_OVER_KENTIMA_OVER_PETASTI_AND_YPSILI_RIGHT=352, 
		THREE_YPSILES_OVER_OLIGON=353, THREE_YPSILES_OVER_PETASTI=354, THREE_YPSILES_OVER_OLIGON_KENTIMATA_IN_MIDDLE=355, 
		THREE_YPSILES_OVER_PETASTI_KENTIMATA_IN_MIDDLE=356, THREE_YPSILES_OVER_OLIGON_KENTIMA_IN_MIDDLE=357, 
		CONTINUOUS_ELAFRON=358, ELAPHRON_OVER_APOSTROPHOS=359, HAMILI_OVER_APOSTROPHOS=360, 
		HAMILI_OVER_ELAPHRON=361, HAMILI_OVER_ELAPHRON_OVER_APOSTROPHOS=362, APOSTROPHOS_OVER_PETASTI=363, 
		CONTINUOUS_ELAFRON_OVER_PETASTI=364, ELAPHRON_OVER_PETASTI=365, ELAPHRON_OVER_APOSTROPHOS_OVER_PETASTI=366, 
		TWO_APOSTROPHOI_IN_A_ROW=367, APOSTROPHOS_OVER_OLIGON=368, ELAPHRON_OVER_OLIGON=369, 
		ELAPHRON_OVER_APOSTROPHOS_OVER_ISON=370, HAMILI_OVER_OLIGON=371, YPORROI_OVER_OLIGON=372, 
		YPORROI_OVER_PETASTI=373, HAMILI_OVER_HAMILI=374, HAMILI_OVER_PETASTI=375, 
		HAMILI_OVER_APOSTROPHOS_OVER_PETASTI=376, HAMILI_OVER_ELAPHRON_OVER_PETASTI=377, 
		HAMILI_OVER_ELAPHRON_OVER_APOSTROPHOS_OVER_PETASTI=378, HAMILI_OVER_HAMILI_OVER_PETASTI=379, 
		HAMILI_OVER_HAMILI_OVER_APOSTROPHOS=380, HAMILI_OVER_HAMILI_OVER_APOSTROPHOS_OVER_PETASTI=381, 
		HAMILI_OVER_HAMILI_OVER_ELAPHRON=382, HAMILI_OVER_HAMILI_OVER_ELAPHRON_OVER_APOSTROPHOS=383, 
		HAMILI_OVER_HAMILI_OVER_HAMILI=384, ISON_OVER_PETASTI=385, ISON_OVER_OLIGON=386, 
		APOSTROPHOS_UNDER_ISON=387, APOSTROPHOS_AND_KENTIMATA_OVER_OLIGON=388, 
		ISON_AND_KENTIMATA_OVER_OLIGON=389, ELAPHRON_AND_KENTIMATA_OVER_OLIGON=390, 
		CONTINUOUS_ELAFRON_AND_KENTIMATA_OVER_OLIGON=391, ELAPHRON_OVER_APOSTROPHOS_AND_KENTIMATA_OVER_OLIGON=392, 
		HAMILI_AND_KENTIMATA_OVER_OLIGON=393, YPORROI_AND_KENTIMATA_OVER_OLIGON=394, 
		KENTIMA_TO_THE_RIGHT_OF_OLIGON=395;
	public static final int
		RULE_score2 = 0, RULE_clusterType2 = 1, RULE_score = 2, RULE_emptyCluster = 3, 
		RULE_fthoraMeEndeixi = 4, RULE_pause = 5, RULE_cluster = 6, RULE_tChar = 7, 
		RULE_grammaMartyrias = 8, RULE_martyrikoSimio = 9, RULE_martyria = 10, 
		RULE_arktikiMartyria = 11, RULE_plagiosTetartoyArktikiMartyria = 12, RULE_plagiosPrwtouArktikiMartyria = 13, 
		RULE_text = 14, RULE_capWord = 15, RULE_syllable = 16, RULE_gorgotita = 17, 
		RULE_gorgon = 18, RULE_gorgonParestigmenoAristera = 19, RULE_gorgonParestigmenoDexia = 20, 
		RULE_digorgon = 21, RULE_digorgonParestigmenoAristera = 22, RULE_digorgonParestigmenoDexia = 23, 
		RULE_trigorgon = 24, RULE_trigorgonParestigmenoAristeraKato = 25, RULE_trigorgonParestigmenoAristeraPano = 26, 
		RULE_trigorgonParestigmenoDexia = 27, RULE_argia = 28, RULE_klasma = 29, 
		RULE_apli = 30, RULE_dipli = 31, RULE_tripli = 32, RULE_fthora = 33, RULE_yfesi = 34, 
		RULE_yfesiApli = 35, RULE_yfesiMonogrammos = 36, RULE_yfesiDigrammos = 37, 
		RULE_diesi = 38, RULE_diesiApli = 39, RULE_diesiMonogrammos = 40, RULE_diesiDigrammos = 41, 
		RULE_fthoraDiatoniki = 42, RULE_fthoraChromatiki = 43, RULE_geniki = 44, 
		RULE_chroa = 45, RULE_qChar = 46, RULE_kentimaToTheRightOfOligon = 47, 
		RULE_yporroi = 48;
	private static String[] makeRuleNames() {
		return new String[] {
			"score2", "clusterType2", "score", "emptyCluster", "fthoraMeEndeixi", 
			"pause", "cluster", "tChar", "grammaMartyrias", "martyrikoSimio", "martyria", 
			"arktikiMartyria", "plagiosTetartoyArktikiMartyria", "plagiosPrwtouArktikiMartyria", 
			"text", "capWord", "syllable", "gorgotita", "gorgon", "gorgonParestigmenoAristera", 
			"gorgonParestigmenoDexia", "digorgon", "digorgonParestigmenoAristera", 
			"digorgonParestigmenoDexia", "trigorgon", "trigorgonParestigmenoAristeraKato", 
			"trigorgonParestigmenoAristeraPano", "trigorgonParestigmenoDexia", "argia", 
			"klasma", "apli", "dipli", "tripli", "fthora", "yfesi", "yfesiApli", 
			"yfesiMonogrammos", "yfesiDigrammos", "diesi", "diesiApli", "diesiMonogrammos", 
			"diesiDigrammos", "fthoraDiatoniki", "fthoraChromatiki", "geniki", "chroa", 
			"qChar", "kentimaToTheRightOfOligon", "yporroi"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'\uD834\uDC57'", null, "'\uD834\uDC59'", null, null, null, "'\uD834\uDC5D'", 
			"'\uD834\uDC5E'", "'\uD834\uDC5F'", null, "'\uD834\uDC61'", "'\uD834\uDC62'", 
			"'\uD834\uDC63'", "'\uD834\uDC64'", "'\uD834\uDC65'", "'\uD834\uDC66'", 
			"'\uD834\uDC67'", "'\uD834\uDC68'", "'\uD834\uDC69'", "'\uD834\uDC6A'", 
			"'\uD834\uDC6B'", "'\uD834\uDC6C'", "'\uD834\uDC6D'", "'\uD834\uDC6E'", 
			"'\uD834\uDC6F'", "'\uD834\uDC70'", "'\uD834\uDC71'", "'\uD834\uDC72'", 
			"'\uD834\uDC73'", "'\uD834\uDC74'", "'\uD834\uDC75'", "'\uD834\uDC76'", 
			"'\uD834\uDC77'", "'\uD834\uDC78'", "'\uD834\uDC79'", "'\uD834\uDC7A'", 
			"'\uD834\uDC7B'", null, null, null, "'\uD834\uDC8B'", "'\uD834\uDC8C'", 
			"'\uD834\uDC8D'", "'\uD834\uDC8E'", null, null, null, null, "'\uD834\uDC9E'", 
			null, null, null, "'\uD834\uDCA2'", null, "'\uD834\uDCA4'", null, null, 
			null, null, "'\uD834\uDCA9'", null, null, "'\uD834\uDCAC'", null, null, 
			"'\uD834\uDCAF'", null, null, "'\uD834\uDCB2'", "'\uD834\uDCB3'", "'\uD834\uDCB4'", 
			"'\uD834\uDCB5'", null, "'\uD834\uDCDB'", null, null, "'\uD834\uDCDE'", 
			"'\uD834\uDCDF'", "'\uD834\uDCE0'", "'\uD834\uDCE1'", "'\uD834\uDCE2'", 
			"'\uD834\uDCE3'", "'\uD834\uDCE4'", "'\uD834\uDCE5'", "'B080'", "'B123'", 
			"'F037'", "'F053'", "'F054'", "'F094'", "'F055'", "'F038'", "'B093'", 
			"'B125'", "'B124'", "'F089'", "'\uD834\uDCE6'", "'\uD834\uDCE7'", "'\uD834\uDCE8'", 
			null, null, null, null, null, null, null, "'P045'", "'B077'", "'B044'", 
			"'B060 '", "'L125'", "'P095'", "'B250'", "'I120'", "'I088'", "'L124'", 
			"'I099'", "'I067'", "'I118'", "'I086'", "'I098'", "'I066'", "'I110'", 
			"'I078'", "'I109'", "'I077'", "'I044'", "'I060'", "'I046'", "'I062'", 
			"'I047'", "'I063'", null, null, null, null, null, null, null, null, null, 
			null, null, "'I130'", "'I131'", "'I132'", "'I133'", "'I134'", "'I135'", 
			"'B126'", "'F122'", "'F097'", "'F115'", "'B036'", "'F083'", "'F120'", 
			"'F090'", "'F065'", "'F088'", "'I096'", "'I049'", "'I050'", "'I051'", 
			"'I052'", "'I053'", "'I112'", "'I091'", "'I093'", "'I092'", "'I080'", 
			"'I123'", "'I125'", "'I037'", "'I054'", "'I055'", "'I056'", "'I057'", 
			"'I061'", "'I094'", "'I038'", "'I042'", "'I095'", "'I040'", "'I043'", 
			"'I081'", "'I087'", "'I113'", "'I119'", "'X083'", "'X068'", "'X070'", 
			"'X074'", "'X075'", "'X076'", "'X058'", null, "'('", "')'", null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, "'\uD834\uDCF5'", "'B216'", "'B228'", "'B208'", "'L170'", 
			"'L172'", "'L165'", "'L167'", "'L168'", "'L166'", "'L171'", "'L163'", 
			"'L162'", "'L161'", "'B114'", "'B069'", "'B082'", "'L126'", "'L033'", 
			"'L064'", "'L035'", "'L036'", "'L037'", "'L094'", "'L055'", "'L038'", 
			"'L056'", "'L042'", "'L057'", "'L040'", null, "'\uD834\uDC80'", "'\uD834\uDC81'", 
			"'\uD834\uDC82'", "'\uD834\uDC83'", "'\uD834\uDC84'", null, null, null, 
			"'\uD834\uDC88'", null, null, "'B105'", "'B085'", "'B042'", "'B040'", 
			"'B041'", null, "'L060'", "'L062'", "'B169'", "'F034'", "'F169'", null, 
			"'\uD834\uDCB7'", "'\uD834\uDCB8'", "'\uD834\uDCB9'", null, null, null, 
			null, "'\uD834\uDCBE'", null, null, null, null, null, null, null, "'\uD834\uDCC6'", 
			null, null, null, null, null, "'\uD834\uDCCC'", "'\uD834\uDCCD'", "'\uD834\uDCCE'", 
			"'\uD834\uDCCF'", null, null, null, null, null, null, null, null, null, 
			null, "'F110'", "'B110'", "'B078'", "'B121'", "'B089'", "'F121'", null, 
			null, "'\uD834\uDC48'", null, "'\uD834\uDC4E'", "'\uD834\uDC4F'", "'\uD834\uDC50'", 
			null, "'\uD834\uDC52'", null, "'\uD834\uDC54'", null, null, null, null, 
			"'\uD834\uDCF2'", "'\uD834\uDCF3'", "'B068'", "'B100'", null, "'B118'", 
			"'L063'", "'B090'", "'B122'", "'B102'", "'B070'", "'B103'", "'B071'", 
			"'L115'", "'L083'", "'L097'", "'L065'", "'L100'", "'L068'", "'L102'", 
			"'L070'", "'L103'", "'L071'", "'L104'", "'L072'", "'L107'", "'L074'", 
			"'L108'", "'L076'", "'L059'", "'L058'", "'L039'", "'B104'", "'B108'", 
			"'L120'", "'L099'", "'L118'", "'B074'", "'B072'", "'B075'", "'B076'", 
			"'B061'", "'L041'", "'L045'", "'L061'", "'L043'", "'L095'", "'B034'", 
			"'L098'", "'L090'", "'L088'", "'L067'", "'L086'", "'L066'", "'L110'", 
			"'L078'", "'L109'", "'L044'", "'L046'", "'B065'", "'L048'", "'B043'", 
			"'B045'", "'B095'", "'L112'", "'L080'", "'L091'", "'L123'", "'L116'", 
			"'B162'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "MIKRON_ISON", "VAREIA_NEO", "PIASMA_NEO", "PSIFISTON_NEO", "OMALON", 
			"ANTIKENOMA", "LYGISMA", "PARAKLITIKI_NEO", "PARAKALESMA_NEO", "ETERON_PARAKALESMA", 
			"KYLISMA", "ANTIKENOKYLISMA", "TROMIKON_NEO", "EKSTREPTON", "SYNAGMA_NEO", 
			"SYRMA", "CHOREVMA_NEO", "EPEGERMA", "SEISMA_NEO", "XIRON_KLASMA", "TROMIKOPSIFISTON", 
			"PSIFISTOLYGISMA", "TROMIKOLYGISMA", "TROMIKOPARAKALESMA", "PSIFISTOPARAKALESMA", 
			"TROMIKOSYNAGMA", "PSIFISTOSYNAGMA", "GORGOSYNTHETON", "ARGOSYNTHETON", 
			"ETERON_ARGOSYNTHETON", "OYRANISMA_NEO", "THEMATISMOS_ESO", "THEMATISMOS_EXO", 
			"THEMA_APLOUN", "THES_KAI_APOTHES", "KATAVASMA", "ENDOFONON", "YFEN_KATO", 
			"YFEN_ANO", "LEIMMA_ENOS_CHRONOU", "LEIMMA_DYO_CHRONON", "LEIMMA_TRION_CHRONON", 
			"LEIMMA_TESSARON_CHRONON", "LEIMMA_IMISEOS_CHRONOU", "AGOGI_POLI_ARGI", 
			"AGOGI_ARGOTERI", "AGOGI_ARGI", "AGOGI_METRIA", "AGOGI_MESI", "AGOGI_GORGI", 
			"AGOGI_GORGOTERI", "AGOGI_POLI_GORGI", "MARTYRIA_PROTOS_ICHOS", "MARTYRIA_ALLI_PROTOS_ICHOS", 
			"MARTYRIA_DEYTEROS_ICHOS", "MARTYRIA_ALLI_DEYTEROS_ICHOS", "MARTYRIA_TRITOS_ICHOS", 
			"MARTYRIA_TRIFONIAS", "MARTYRIA_TETARTOS_ICHOS", "MARTYRIA_TETARTOS_LEGETOS_ICHOS", 
			"MARTYRIA_LEGETOS_ICHOS", "MARTYRIA_PLAGIOS_ICHOS", "ISAKIA_TELOUS_ICHIMATOS", 
			"APOSTROFOI_TELOUS_ICHIMATOS", "FANEROSIS_TETRAFONIAS", "FANEROSIS_MONOFONIAS", 
			"FANEROSIS_DIFONIAS", "MARTYRIA_VARYS_ICHOS", "MARTYRIA_PROTOVARYS_ICHOS", 
			"MARTYRIA_PLAGIOS_TETARTOS_ICHOS", "GORTHMIKON_N_APLOUN", "GORTHMIKON_N_DIPLOUN", 
			"DIASTOLI_APLI_MIKRI", "DIASTOLI_APLI_MEGALI", "DIASTOLI_DIPLI", "DIASTOLI_THESEOS", 
			"SIMANSIS_THESEOS", "SIMANSIS_THESEOS_DISIMOU", "SIMANSIS_THESEOS_TRISIMOU", 
			"SIMANSIS_THESEOS_TETRASIMOU", "SIMANSIS_ARSEOS", "SIMANSIS_ARSEOS_DISIMOU", 
			"SIMANSIS_ARSEOS_TRISIMOU", "SIMANSIS_ARSEOS_TETRASIMOU", "DIASTOLI_APLI_MIKRI_ON_QCHAR", 
			"DIASTOLI_DIPLI_ON_QCHAR", "METER_2_LEFT_ON_QCHAR", "METER_2_MIDDLE_ON_QCHAR", 
			"METER_3_LEFT_ON_QCHAR", "METER_3_MIDDLE_ON_QCHAR", "METER_4_LEFT_ON_QCHAR", 
			"METER_4_MIDDLE_ON_QCHAR", "METER_5_ON_DIASTOLI_DIPLI", "METER_6_ON_DIASTOLI_DIPLI", 
			"METER_7_ON_DIASTOLI_DIPLI", "METER_8_ON_DIASTOLI_DIPLI", "DIGRAMMA_GG", 
			"DIFTOGGOS_OU", "STIGMA", "ARKTIKO_PA", "ARKTIKO_VOU", "ARKTIKO_GA", 
			"ARKTIKO_DI", "ARKTIKO_KE", "ARKTIKO_ZO", "ARKTIKO_NI", "PSIFISTON_PALAIO", 
			"ANTIKENOMA_DEXIA", "OMALON_ARISTERA", "OMALON_DEXIA", "ETERON_PARAKALESMA_DEXIA", 
			"ETERON_PARAKALESMA_PALAIO", "ETERON_PARAKALESMA_MEGALO", "YFEN_KATO_MIKRO", 
			"YFEN_ANO_MIKRO", "APLI_USED_NEXT_TO_LEIMMA", "ENDIXI_NH_ARISTERA", "ENDIXI_NH_DEXIA", 
			"ENDIXI_PA_ARISTERA", "ENDIXI_PA_DEXIA", "ENDIXI_BOY_ARISTERA", "ENDIXI_BOY_DEXIA", 
			"ENDIXI_GA_ARISTERA", "ENDIXI_GA_DEXIA", "ENDIXI_DI_ARISTERA", "ENDIXI_DI_DEXIA", 
			"ENDIXI_KE_ARISTERA", "ENDIXI_KE_DEXIA", "ENDIXI_ZW_ARISTERA", "ENDIXI_ZW_DEXIA", 
			"ENDIXI_DI_KATO_ARISTERA", "ENDIXI_PA_KATO_ARISTERA", "ISOKRATIMA_NH", 
			"ISOKRATIMA_PA", "ISOKRATIMA_BOY", "ISOKRATIMA_GA", "ISOKRATIMA_DI", 
			"ISOKRATIMA_KE", "ISOKRATIMA_ZW", "ISOKRATIMA_MAZI", "ISOKRATIMA_ANW_ZW", 
			"ISOKRATIMA_KATW_DI", "ISOKRATIMA_KATW_KE", "SIGA", "KANONIKA", "DINATA", 
			"ISON_SIGA", "ISON_KANONIKA", "ISON_DINATA", "GRAMMA_MARTYRIAS_TONOS", 
			"LOW_GA", "LOW_DI", "LOW_KE", "MARTYRIA_NENANO", "MARTYRIA_ALLI_PROTOS_ICHOS_LOW", 
			"MARTYRIA_ALLI_DEYTEROS_ICHOS_LOW", "MARTYRIA_TRIFONIAS_LOW", "MARTYRIA_TETARTOS_ICHOS_LOW", 
			"MARTYRIA_NENANO_LOW", "HXOS_WORD", "HXOS_A_GRAMMA", "HXOS_B_GRAMMA", 
			"HXOS_G_GRAMMA", "HXOS_D_GRAMMA", "HXOS_VARYS_WORD", "FTHOGGOS_NH_WORD", 
			"FTHOGGOS_PA_WORD", "FTHOGGOS_BOY_WORD", "FTHOGGOS_GA_WORD", "FTHOGGOS_DI_WORD", 
			"FTHOGGOS_KE_WORD", "FTHOGGOS_ZW_WORD", "WORD_TOS_FOR_LEGETOS", "ARKTIKH_MARTYRIA_TETARTOS_ICHOS", 
			"ARKTIKH_MARTYRIA_PLAGIOS_A_ICHOS", "ARKTIKH_MARTYRIA_DEYTEROS_ICHOS", 
			"ARKTIKH_MARTYRIA_TRITOS_ICHOS", "ARKTIKH_MARTYRIA_MALAKO_XRWMA_BOY", 
			"ARKTIKH_MARTYRIA_AGIA", "ARKTIKH_MARTYRIA_PRWTOS", "ARKTIKH_MARTYRIA_DEYTEROS_ME_DIFWNH_ANAVASH", 
			"ARKTIKH_MARTYRIA_VARYS_DIATONIKOS", "ARKTIKH_MARTYRIA_PA_SKLHRO_CHROMA", 
			"ARKTIKH_MARTYRIA_DI_MALAKO_CHROMA", "ARKTIKH_MARTYRIA_SYNEXES_ELAPHRON_SE_FTHOGGO", 
			"ARKTIKH_MARTYRIA_TETRAFWNH_ANAVASI_SE_FTHOGGO", "ARKTIKH_MARTYRIA_DIFWNI_KATAVASI_SE_FTHOGGO", 
			"ARKTIKH_MARTYRIA_TRIFWNH_ANAVASI_SE_FTHOGGO", "AGOGI_SE_MARTYRIA_POLI_ARGI", 
			"AGOGI_SE_MARTYRIA_ARGOTERI", "AGOGI_SE_MARTYRIA_ARGI", "AGOGI_SE_MARTYRIA_METRIA", 
			"AGOGI_SE_MARTYRIA_GORGI", "AGOGI_SE_MARTYRIA_GORGOTERI", "AGOGI_SE_MARTYRIA_POLI_GORGI", 
			"ARXIGRAMMA", "LEFT_PARENTHESIS", "RIGHT_PARENTHESIS", "CAP_LETTER", 
			"SMALL_LETTER", "LATIN_WORD", "GREEK_WORD", "SYMBOLS_NUMBERS", "WHITESPACE", 
			"GORGON_NEO_ANO", "GORGON_PARESTIGMENON_ARISTERA", "GORGON_PARESTIGMENON_DEXIA", 
			"DIGORGON", "DIGORGON_PARESTIGMENON_ARISTERA_KATO", "DIGORGON_PARESTIGMENON_ARISTERA_ANO", 
			"DIGORGON_PARESTIGMENON_DEXIA", "TRIGORGON", "ARGON", "IMIDIARGON", "DIARGON", 
			"GORGON_NEO_KATO", "GORGON_USED_ON_KENTIMATA_ABOVE_OLIGON", "DIGORGON_USED_ON_KENTIMATA_ABOVE_OLIGON", 
			"GORGON_USED_ON_YPORROI", "GORGON_LEFT_DOT_USED_ON_YPORROI", "GORGON_RIGHT_DOT_USED_ON_YPORROI", 
			"DIGORGON_USED_ON_YPORROI", "DIGORGON_LEFT_DOT_USED_ON_YPORROI", "TRIGORGON_USED_ON_YPORROI", 
			"TRIGORGON_LEFT_DOT_USED_ON_YPORROI", "GORGON_USED_ON_L116_YPORROI", 
			"DIGORGON_USED_ON_L116_YPORROI", "TRIGORGON_USED_ON_L116_YPORROI", "GORGON_LEFT_DOT_USED_ON_L116_YPORROI", 
			"GORGON_ANO_STA_DEXIA", "GORGON_KATO", "GORGON_KATO_STA_DEXIA", "GORGON_PARESTIGMENON_ARISTERA_STA_DEXIA", 
			"GORGON_PARESTIGMENON_DEXIA_STA_DEXIA", "DIGORGON_STA_DEXIA", "DIGORGON_PARESTIGMENON_ARISTERA_KATO_STA_DEXIA", 
			"DIGORGON_PARESTIGMENON_ARISTERA_ANO_STA_DEXIA", "DIGORGON_PARESTIGMENON_DEXIA_STA_DEXIA", 
			"TRIGORGON_STA_DEXIA", "TRIGORGON_PARESTIGMENON_ARISTERA_KATO", "TRIGORGON_PARESTIGMENON_ARISTERA_KATO_STA_DEXIA", 
			"TRIGORGON_PARESTIGMENON_ARISTERA_ANO", "TRIGORGON_PARESTIGMENON_ARISTERA_ANO_STA_DEXIA", 
			"TRIGORGON_PARESTIGMENON_DEXIA", "TRIGORGON_PARESTIGMENON_DEXIA_STA_DEXIA", 
			"KLASMA_ANO", "DIPLI_ARCHAION", "KRATIMA_ARCHAION", "KRATIMA_ALLO", "KRATIMA_NEO", 
			"APODERMA_NEO", "APLI", "DIPLI", "TRIPLI", "TETRAPLI", "KORONIS", "KLASMA_KATO", 
			"KLASMA_ANO_STA_DEXIA", "KLASMA_ANO_STA_ARISTERA", "APLI_STA_DEXIA", 
			"DIPLI_STA_DEXIA", "TRIPLI_STA_DEXIA", "STAVROS", "KORONIS_HAMILA", "KORONIS_HAMILA_STA_DEXIA", 
			"KORONIS_STA_DEXIA", "STAVROS_PSILA", "BREATH_MARK", "ENARXIS_KAI_FTHORA_VOU", 
			"IMIFONON", "IMIFTHORON", "FTHORA_ARCHAION_DEYTEROU_ICHOU", "FTHORA_DIATONIKI_PA", 
			"FTHORA_DIATONIKI_NANA", "FTHORA_NAOS_ICHOS", "FTHORA_DIATONIKI_DI", 
			"FTHORA_SKLIRON_DIATONON_DI", "FTHORA_DIATONIKI_KE", "FTHORA_DIATONIKI_ZO", 
			"FTHORA_DIATONIKI_NI_KATO", "FTHORA_DIATONIKI_NI_ANO", "FTHORA_MALAKON_CHROMA_DIFONIAS", 
			"FTHORA_MALAKON_CHROMA_MONOFONIAS", "FHTORA_SKLIRON_CHROMA_VASIS", "FTHORA_SKLIRON_CHROMA_SYNAFI", 
			"FTHORA_NENANO", "CHROA_ZYGOS", "CHROA_KLITON", "CHROA_SPATHI", "FTHORA_I_YFESIS_TETARTIMORION", 
			"FTHORA_ENARMONIOS_ANTIFONIA", "YFESIS_TRITIMORION", "DIESIS_TRITIMORION", 
			"DIESIS_TETARTIMORION", "DIESIS_APLI_DYO_DODEKATA", "DIESIS_MONOGRAMMOS_TESSERA_DODEKATA", 
			"DIESIS_DIGRAMMOS_EX_DODEKATA", "DIESIS_TRIGRAMMOS_OKTO_DODEKATA", "YFESIS_APLI_DYO_DODEKATA", 
			"YFESIS_MONOGRAMMOS_TESSERA_DODEKATA", "YFESIS_DIGRAMMOS_EX_DODEKATA", 
			"YFESIS_TRIGRAMMOS_OKTO_DODEKATA", "GENIKI_DIESIS", "GENIKI_YFESIS", 
			"DIESIS_APLI_DYO_DODEKATA_DEXIA", "DIESIS_MONOGRAMMOS_TESSERA_DODEKATA_DEXIA", 
			"DIESIS_DIGRAMMOS_EX_DODEKATA_DEXIA", "YFESIS_APLI_DYO_DODEKATA_DEXIA", 
			"YFESIS_MONOGRAMMOS_TESSERA_DODEKATA_DEXIA", "YFESIS_DIGRAMMOS_EX_DODEKATA_DEXIA", 
			"ISON_NEO", "OLIGON_NEO", "OXEIA_NEO", "PETASTI", "KENTIMATA_NEO_ANO", 
			"KENTIMA_NEO_ANO", "YPSILI", "APOSTROFOS_NEO", "APOSTROFOI_SYNDESMOS_NEO", 
			"YPORROI", "KRATIMOYPORROON", "ELAFRON", "CHAMILI", "KENTIMATA_NEO_MESO", 
			"KENTIMA_NEO_MESO", "KENTIMATA_NEO_KATO", "KENTIMA_NEO_KATO", "OLIGON_OVER_PETASTI", 
			"KENTIMA_UNDER_OLIGON", "OLIGON_ABOVE_KENTIMATA", "KENTIMATA_ABOVE_OLIGON", 
			"ANTIKENOMA_UNDER_KENTIMA_UNDER_OLIGON", "APLI_UNDER_ANTIKENOMA_UNDER_KENTIMA_UNDER_OLIGON", 
			"APLI_UNDER_ANTIKENOMA_UNDER_OLIGON_ABOVE_KENTIMATA", "KENTIMA_OVER_OLIGON", 
			"KENTIMA_OVER_PETASTI", "YPSILI_AT_RIGHT_END_OF_OLIGON", "YPSILI_AT_RIGHT_END_OF_PETASTI", 
			"YPSILI_AT_LEFT_END_OF_OLIGON", "YPSILI_AT_LEFT_END_OF_PETASTI", "YPSILI_AT_RIGHT_END_OF_OLIGON_AND_KENTIMATA_AT_LEFT", 
			"YPSILI_AT_LEFT_END_OF_OLIGON_AND_KENTIMATA_AT_RIGHT", "YPSILI_NEXT_TO_KENTIMA_OVER_OLIGON", 
			"YPSILI_NEXT_TO_KENTIMA_OVER_PETASTI", "YPSILI_OVER_KENTIMA_OVER_OLIGON", 
			"YPSILI_OVER_KENTIMA_OVER_PETASTI", "TWO_IPSILES_OVER_OLIGON", "TWO_IPSILES_OVER_PETASTI", 
			"TWO_IPSILES_OVER_KETNIMATA_OVER_OLIGON", "TWO_IPSILES_OVER_KETNIMATA_OVER_PETASTI", 
			"YPSILI_OVER_KENTIMA_OVER_OLIGON_AND_YPSILI_TO_LEFT", "YPSILI_OVER_KENTIMA_OVER_PETASTI_AND_YPSILI_RIGHT", 
			"THREE_YPSILES_OVER_OLIGON", "THREE_YPSILES_OVER_PETASTI", "THREE_YPSILES_OVER_OLIGON_KENTIMATA_IN_MIDDLE", 
			"THREE_YPSILES_OVER_PETASTI_KENTIMATA_IN_MIDDLE", "THREE_YPSILES_OVER_OLIGON_KENTIMA_IN_MIDDLE", 
			"CONTINUOUS_ELAFRON", "ELAPHRON_OVER_APOSTROPHOS", "HAMILI_OVER_APOSTROPHOS", 
			"HAMILI_OVER_ELAPHRON", "HAMILI_OVER_ELAPHRON_OVER_APOSTROPHOS", "APOSTROPHOS_OVER_PETASTI", 
			"CONTINUOUS_ELAFRON_OVER_PETASTI", "ELAPHRON_OVER_PETASTI", "ELAPHRON_OVER_APOSTROPHOS_OVER_PETASTI", 
			"TWO_APOSTROPHOI_IN_A_ROW", "APOSTROPHOS_OVER_OLIGON", "ELAPHRON_OVER_OLIGON", 
			"ELAPHRON_OVER_APOSTROPHOS_OVER_ISON", "HAMILI_OVER_OLIGON", "YPORROI_OVER_OLIGON", 
			"YPORROI_OVER_PETASTI", "HAMILI_OVER_HAMILI", "HAMILI_OVER_PETASTI", 
			"HAMILI_OVER_APOSTROPHOS_OVER_PETASTI", "HAMILI_OVER_ELAPHRON_OVER_PETASTI", 
			"HAMILI_OVER_ELAPHRON_OVER_APOSTROPHOS_OVER_PETASTI", "HAMILI_OVER_HAMILI_OVER_PETASTI", 
			"HAMILI_OVER_HAMILI_OVER_APOSTROPHOS", "HAMILI_OVER_HAMILI_OVER_APOSTROPHOS_OVER_PETASTI", 
			"HAMILI_OVER_HAMILI_OVER_ELAPHRON", "HAMILI_OVER_HAMILI_OVER_ELAPHRON_OVER_APOSTROPHOS", 
			"HAMILI_OVER_HAMILI_OVER_HAMILI", "ISON_OVER_PETASTI", "ISON_OVER_OLIGON", 
			"APOSTROPHOS_UNDER_ISON", "APOSTROPHOS_AND_KENTIMATA_OVER_OLIGON", "ISON_AND_KENTIMATA_OVER_OLIGON", 
			"ELAPHRON_AND_KENTIMATA_OVER_OLIGON", "CONTINUOUS_ELAFRON_AND_KENTIMATA_OVER_OLIGON", 
			"ELAPHRON_OVER_APOSTROPHOS_AND_KENTIMATA_OVER_OLIGON", "HAMILI_AND_KENTIMATA_OVER_OLIGON", 
			"YPORROI_AND_KENTIMATA_OVER_OLIGON", "KENTIMA_TO_THE_RIGHT_OF_OLIGON"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}

	@Override
	public String getGrammarFileName() { return "Byz.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public ATN getATN() { return _ATN; }

	public ByzParser(TokenStream input) {
		super(input);
		_interp = new ParserATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	public static class Score2Context extends ParserRuleContext {
		public ArktikiMartyriaContext arktikiMartyria() {
			return getRuleContext(ArktikiMartyriaContext.class,0);
		}
		public List<ClusterType2Context> clusterType2() {
			return getRuleContexts(ClusterType2Context.class);
		}
		public ClusterType2Context clusterType2(int i) {
			return getRuleContext(ClusterType2Context.class,i);
		}
		public Score2Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_score2; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterScore2(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitScore2(this);
		}
	}

	public final Score2Context score2() throws RecognitionException {
		Score2Context _localctx = new Score2Context(_ctx, getState());
		enterRule(_localctx, 0, RULE_score2);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(99);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (((((_la - 160)) & ~0x3f) == 0 && ((1L << (_la - 160)) & ((1L << (HXOS_WORD - 160)) | (1L << (LEFT_PARENTHESIS - 160)) | (1L << (CAP_LETTER - 160)) | (1L << (SMALL_LETTER - 160)) | (1L << (LATIN_WORD - 160)) | (1L << (GREEK_WORD - 160)) | (1L << (SYMBOLS_NUMBERS - 160)))) != 0)) {
				{
				setState(98);
				arktikiMartyria();
				}
			}

			setState(102); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(101);
				clusterType2();
				}
				}
				setState(104); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 311)) & ~0x3f) == 0 && ((1L << (_la - 311)) & ((1L << (ISON_NEO - 311)) | (1L << (OLIGON_NEO - 311)) | (1L << (PETASTI - 311)) | (1L << (APOSTROFOS_NEO - 311)) | (1L << (YPORROI - 311)) | (1L << (ELAFRON - 311)) | (1L << (CHAMILI - 311)) | (1L << (KENTIMATA_NEO_MESO - 311)) | (1L << (KENTIMA_NEO_MESO - 311)) | (1L << (OLIGON_OVER_PETASTI - 311)) | (1L << (KENTIMA_UNDER_OLIGON - 311)) | (1L << (OLIGON_ABOVE_KENTIMATA - 311)) | (1L << (KENTIMATA_ABOVE_OLIGON - 311)) | (1L << (ANTIKENOMA_UNDER_KENTIMA_UNDER_OLIGON - 311)) | (1L << (KENTIMA_OVER_OLIGON - 311)) | (1L << (KENTIMA_OVER_PETASTI - 311)) | (1L << (YPSILI_AT_RIGHT_END_OF_OLIGON - 311)) | (1L << (YPSILI_AT_RIGHT_END_OF_PETASTI - 311)) | (1L << (YPSILI_AT_LEFT_END_OF_OLIGON - 311)) | (1L << (YPSILI_AT_LEFT_END_OF_PETASTI - 311)) | (1L << (YPSILI_AT_RIGHT_END_OF_OLIGON_AND_KENTIMATA_AT_LEFT - 311)) | (1L << (YPSILI_AT_LEFT_END_OF_OLIGON_AND_KENTIMATA_AT_RIGHT - 311)) | (1L << (YPSILI_NEXT_TO_KENTIMA_OVER_OLIGON - 311)) | (1L << (YPSILI_NEXT_TO_KENTIMA_OVER_PETASTI - 311)) | (1L << (YPSILI_OVER_KENTIMA_OVER_OLIGON - 311)) | (1L << (YPSILI_OVER_KENTIMA_OVER_PETASTI - 311)) | (1L << (TWO_IPSILES_OVER_OLIGON - 311)) | (1L << (TWO_IPSILES_OVER_PETASTI - 311)) | (1L << (TWO_IPSILES_OVER_KETNIMATA_OVER_OLIGON - 311)) | (1L << (TWO_IPSILES_OVER_KETNIMATA_OVER_PETASTI - 311)) | (1L << (YPSILI_OVER_KENTIMA_OVER_OLIGON_AND_YPSILI_TO_LEFT - 311)) | (1L << (YPSILI_OVER_KENTIMA_OVER_PETASTI_AND_YPSILI_RIGHT - 311)) | (1L << (THREE_YPSILES_OVER_OLIGON - 311)) | (1L << (THREE_YPSILES_OVER_PETASTI - 311)) | (1L << (THREE_YPSILES_OVER_OLIGON_KENTIMATA_IN_MIDDLE - 311)) | (1L << (THREE_YPSILES_OVER_PETASTI_KENTIMATA_IN_MIDDLE - 311)) | (1L << (THREE_YPSILES_OVER_OLIGON_KENTIMA_IN_MIDDLE - 311)) | (1L << (CONTINUOUS_ELAFRON - 311)) | (1L << (ELAPHRON_OVER_APOSTROPHOS - 311)) | (1L << (HAMILI_OVER_APOSTROPHOS - 311)) | (1L << (HAMILI_OVER_ELAPHRON - 311)) | (1L << (HAMILI_OVER_ELAPHRON_OVER_APOSTROPHOS - 311)) | (1L << (APOSTROPHOS_OVER_PETASTI - 311)) | (1L << (CONTINUOUS_ELAFRON_OVER_PETASTI - 311)) | (1L << (ELAPHRON_OVER_PETASTI - 311)) | (1L << (ELAPHRON_OVER_APOSTROPHOS_OVER_PETASTI - 311)) | (1L << (TWO_APOSTROPHOI_IN_A_ROW - 311)) | (1L << (APOSTROPHOS_OVER_OLIGON - 311)) | (1L << (ELAPHRON_OVER_OLIGON - 311)) | (1L << (ELAPHRON_OVER_APOSTROPHOS_OVER_ISON - 311)) | (1L << (HAMILI_OVER_OLIGON - 311)) | (1L << (YPORROI_OVER_OLIGON - 311)) | (1L << (YPORROI_OVER_PETASTI - 311)) | (1L << (HAMILI_OVER_HAMILI - 311)))) != 0) || ((((_la - 375)) & ~0x3f) == 0 && ((1L << (_la - 375)) & ((1L << (HAMILI_OVER_PETASTI - 375)) | (1L << (HAMILI_OVER_APOSTROPHOS_OVER_PETASTI - 375)) | (1L << (HAMILI_OVER_ELAPHRON_OVER_PETASTI - 375)) | (1L << (HAMILI_OVER_ELAPHRON_OVER_APOSTROPHOS_OVER_PETASTI - 375)) | (1L << (HAMILI_OVER_HAMILI_OVER_PETASTI - 375)) | (1L << (HAMILI_OVER_HAMILI_OVER_APOSTROPHOS - 375)) | (1L << (HAMILI_OVER_HAMILI_OVER_APOSTROPHOS_OVER_PETASTI - 375)) | (1L << (HAMILI_OVER_HAMILI_OVER_ELAPHRON - 375)) | (1L << (HAMILI_OVER_HAMILI_OVER_ELAPHRON_OVER_APOSTROPHOS - 375)) | (1L << (HAMILI_OVER_HAMILI_OVER_HAMILI - 375)) | (1L << (ISON_OVER_PETASTI - 375)) | (1L << (ISON_OVER_OLIGON - 375)) | (1L << (APOSTROPHOS_UNDER_ISON - 375)) | (1L << (APOSTROPHOS_AND_KENTIMATA_OVER_OLIGON - 375)) | (1L << (ISON_AND_KENTIMATA_OVER_OLIGON - 375)) | (1L << (ELAPHRON_AND_KENTIMATA_OVER_OLIGON - 375)) | (1L << (CONTINUOUS_ELAFRON_AND_KENTIMATA_OVER_OLIGON - 375)) | (1L << (ELAPHRON_OVER_APOSTROPHOS_AND_KENTIMATA_OVER_OLIGON - 375)) | (1L << (HAMILI_AND_KENTIMATA_OVER_OLIGON - 375)) | (1L << (YPORROI_AND_KENTIMATA_OVER_OLIGON - 375)) | (1L << (KENTIMA_TO_THE_RIGHT_OF_OLIGON - 375)))) != 0) );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ClusterType2Context extends ParserRuleContext {
		public QCharContext qChar() {
			return getRuleContext(QCharContext.class,0);
		}
		public SyllableContext syllable() {
			return getRuleContext(SyllableContext.class,0);
		}
		public List<TCharContext> tChar() {
			return getRuleContexts(TCharContext.class);
		}
		public TCharContext tChar(int i) {
			return getRuleContext(TCharContext.class,i);
		}
		public FthoraMeEndeixiContext fthoraMeEndeixi() {
			return getRuleContext(FthoraMeEndeixiContext.class,0);
		}
		public ClusterType2Context(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_clusterType2; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterClusterType2(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitClusterType2(this);
		}
	}

	public final ClusterType2Context clusterType2() throws RecognitionException {
		ClusterType2Context _localctx = new ClusterType2Context(_ctx, getState());
		enterRule(_localctx, 2, RULE_clusterType2);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(106);
			qChar();
			setState(108);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==CAP_LETTER || _la==SMALL_LETTER) {
				{
				setState(107);
				syllable();
				}
			}

			setState(113);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (((((_la - 205)) & ~0x3f) == 0 && ((1L << (_la - 205)) & ((1L << (GORGON_NEO_ANO - 205)) | (1L << (GORGON_PARESTIGMENON_ARISTERA - 205)) | (1L << (GORGON_PARESTIGMENON_DEXIA - 205)) | (1L << (DIGORGON - 205)) | (1L << (DIGORGON_PARESTIGMENON_ARISTERA_KATO - 205)) | (1L << (DIGORGON_PARESTIGMENON_ARISTERA_ANO - 205)) | (1L << (DIGORGON_PARESTIGMENON_DEXIA - 205)) | (1L << (TRIGORGON - 205)) | (1L << (ARGON - 205)) | (1L << (IMIDIARGON - 205)) | (1L << (DIARGON - 205)) | (1L << (GORGON_NEO_KATO - 205)) | (1L << (GORGON_USED_ON_KENTIMATA_ABOVE_OLIGON - 205)) | (1L << (DIGORGON_USED_ON_KENTIMATA_ABOVE_OLIGON - 205)) | (1L << (GORGON_USED_ON_YPORROI - 205)) | (1L << (GORGON_LEFT_DOT_USED_ON_YPORROI - 205)) | (1L << (GORGON_RIGHT_DOT_USED_ON_YPORROI - 205)) | (1L << (DIGORGON_USED_ON_YPORROI - 205)) | (1L << (DIGORGON_LEFT_DOT_USED_ON_YPORROI - 205)) | (1L << (TRIGORGON_USED_ON_YPORROI - 205)) | (1L << (TRIGORGON_LEFT_DOT_USED_ON_YPORROI - 205)) | (1L << (GORGON_USED_ON_L116_YPORROI - 205)) | (1L << (DIGORGON_USED_ON_L116_YPORROI - 205)) | (1L << (TRIGORGON_USED_ON_L116_YPORROI - 205)) | (1L << (GORGON_LEFT_DOT_USED_ON_L116_YPORROI - 205)) | (1L << (GORGON_ANO_STA_DEXIA - 205)) | (1L << (GORGON_KATO - 205)) | (1L << (GORGON_KATO_STA_DEXIA - 205)) | (1L << (GORGON_PARESTIGMENON_ARISTERA_STA_DEXIA - 205)) | (1L << (GORGON_PARESTIGMENON_DEXIA_STA_DEXIA - 205)) | (1L << (DIGORGON_STA_DEXIA - 205)) | (1L << (DIGORGON_PARESTIGMENON_ARISTERA_KATO_STA_DEXIA - 205)) | (1L << (DIGORGON_PARESTIGMENON_ARISTERA_ANO_STA_DEXIA - 205)) | (1L << (DIGORGON_PARESTIGMENON_DEXIA_STA_DEXIA - 205)) | (1L << (TRIGORGON_STA_DEXIA - 205)) | (1L << (TRIGORGON_PARESTIGMENON_ARISTERA_KATO - 205)) | (1L << (TRIGORGON_PARESTIGMENON_ARISTERA_KATO_STA_DEXIA - 205)) | (1L << (TRIGORGON_PARESTIGMENON_ARISTERA_ANO - 205)) | (1L << (TRIGORGON_PARESTIGMENON_ARISTERA_ANO_STA_DEXIA - 205)) | (1L << (TRIGORGON_PARESTIGMENON_DEXIA - 205)) | (1L << (TRIGORGON_PARESTIGMENON_DEXIA_STA_DEXIA - 205)) | (1L << (KLASMA_ANO - 205)) | (1L << (APLI - 205)) | (1L << (DIPLI - 205)) | (1L << (TRIPLI - 205)) | (1L << (KLASMA_KATO - 205)) | (1L << (KLASMA_ANO_STA_DEXIA - 205)) | (1L << (KLASMA_ANO_STA_ARISTERA - 205)) | (1L << (APLI_STA_DEXIA - 205)) | (1L << (DIPLI_STA_DEXIA - 205)) | (1L << (TRIPLI_STA_DEXIA - 205)))) != 0)) {
				{
				{
				setState(110);
				tChar();
				}
				}
				setState(115);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(117);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (((((_la - 269)) & ~0x3f) == 0 && ((1L << (_la - 269)) & ((1L << (ENARXIS_KAI_FTHORA_VOU - 269)) | (1L << (FTHORA_DIATONIKI_PA - 269)) | (1L << (FTHORA_DIATONIKI_NANA - 269)) | (1L << (FTHORA_NAOS_ICHOS - 269)) | (1L << (FTHORA_DIATONIKI_DI - 269)) | (1L << (FTHORA_DIATONIKI_KE - 269)) | (1L << (FTHORA_DIATONIKI_ZO - 269)) | (1L << (FTHORA_DIATONIKI_NI_KATO - 269)) | (1L << (FTHORA_DIATONIKI_NI_ANO - 269)) | (1L << (FTHORA_MALAKON_CHROMA_DIFONIAS - 269)) | (1L << (FTHORA_MALAKON_CHROMA_MONOFONIAS - 269)) | (1L << (FHTORA_SKLIRON_CHROMA_VASIS - 269)) | (1L << (FTHORA_NENANO - 269)) | (1L << (CHROA_ZYGOS - 269)) | (1L << (CHROA_KLITON - 269)) | (1L << (CHROA_SPATHI - 269)) | (1L << (FTHORA_I_YFESIS_TETARTIMORION - 269)) | (1L << (DIESIS_APLI_DYO_DODEKATA - 269)) | (1L << (DIESIS_MONOGRAMMOS_TESSERA_DODEKATA - 269)) | (1L << (DIESIS_DIGRAMMOS_EX_DODEKATA - 269)) | (1L << (DIESIS_TRIGRAMMOS_OKTO_DODEKATA - 269)) | (1L << (YFESIS_APLI_DYO_DODEKATA - 269)) | (1L << (YFESIS_MONOGRAMMOS_TESSERA_DODEKATA - 269)) | (1L << (YFESIS_DIGRAMMOS_EX_DODEKATA - 269)) | (1L << (YFESIS_TRIGRAMMOS_OKTO_DODEKATA - 269)) | (1L << (GENIKI_DIESIS - 269)) | (1L << (GENIKI_YFESIS - 269)) | (1L << (DIESIS_APLI_DYO_DODEKATA_DEXIA - 269)) | (1L << (DIESIS_MONOGRAMMOS_TESSERA_DODEKATA_DEXIA - 269)) | (1L << (DIESIS_DIGRAMMOS_EX_DODEKATA_DEXIA - 269)) | (1L << (YFESIS_APLI_DYO_DODEKATA_DEXIA - 269)) | (1L << (YFESIS_MONOGRAMMOS_TESSERA_DODEKATA_DEXIA - 269)) | (1L << (YFESIS_DIGRAMMOS_EX_DODEKATA_DEXIA - 269)))) != 0)) {
				{
				setState(116);
				fthoraMeEndeixi();
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ScoreContext extends ParserRuleContext {
		public List<TextContext> text() {
			return getRuleContexts(TextContext.class);
		}
		public TextContext text(int i) {
			return getRuleContext(TextContext.class,i);
		}
		public List<EmptyClusterContext> emptyCluster() {
			return getRuleContexts(EmptyClusterContext.class);
		}
		public EmptyClusterContext emptyCluster(int i) {
			return getRuleContext(EmptyClusterContext.class,i);
		}
		public ArktikiMartyriaContext arktikiMartyria() {
			return getRuleContext(ArktikiMartyriaContext.class,0);
		}
		public List<ClusterContext> cluster() {
			return getRuleContexts(ClusterContext.class);
		}
		public ClusterContext cluster(int i) {
			return getRuleContext(ClusterContext.class,i);
		}
		public ScoreContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_score; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterScore(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitScore(this);
		}
	}

	public final ScoreContext score() throws RecognitionException {
		ScoreContext _localctx = new ScoreContext(_ctx, getState());
		enterRule(_localctx, 4, RULE_score);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(122);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,5,_ctx);
			while ( _alt!=2 && _alt!= ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(119);
					text();
					}
					} 
				}
				setState(124);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,5,_ctx);
			}
			setState(128);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,6,_ctx);
			while ( _alt!=2 && _alt!= ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(125);
					emptyCluster();
					}
					} 
				}
				setState(130);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,6,_ctx);
			}
			setState(132);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,7,_ctx) ) {
			case 1:
				{
				setState(131);
				arktikiMartyria();
				}
				break;
			}
			setState(136); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				setState(136);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,8,_ctx) ) {
				case 1:
					{
					setState(134);
					text();
					}
					break;
				case 2:
					{
					setState(135);
					cluster();
					}
					break;
				}
				}
				setState(138); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( ((((_la - 197)) & ~0x3f) == 0 && ((1L << (_la - 197)) & ((1L << (LEFT_PARENTHESIS - 197)) | (1L << (CAP_LETTER - 197)) | (1L << (SMALL_LETTER - 197)) | (1L << (LATIN_WORD - 197)) | (1L << (GREEK_WORD - 197)) | (1L << (SYMBOLS_NUMBERS - 197)))) != 0) );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class EmptyClusterContext extends ParserRuleContext {
		public TerminalNode LEFT_PARENTHESIS() { return getToken(ByzParser.LEFT_PARENTHESIS, 0); }
		public TerminalNode RIGHT_PARENTHESIS() { return getToken(ByzParser.RIGHT_PARENTHESIS, 0); }
		public EmptyClusterContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_emptyCluster; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterEmptyCluster(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitEmptyCluster(this);
		}
	}

	public final EmptyClusterContext emptyCluster() throws RecognitionException {
		EmptyClusterContext _localctx = new EmptyClusterContext(_ctx, getState());
		enterRule(_localctx, 6, RULE_emptyCluster);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(140);
			match(LEFT_PARENTHESIS);
			setState(141);
			match(RIGHT_PARENTHESIS);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class FthoraMeEndeixiContext extends ParserRuleContext {
		public FthoraContext fthora() {
			return getRuleContext(FthoraContext.class,0);
		}
		public FthoraMeEndeixiContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_fthoraMeEndeixi; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterFthoraMeEndeixi(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitFthoraMeEndeixi(this);
		}
	}

	public final FthoraMeEndeixiContext fthoraMeEndeixi() throws RecognitionException {
		FthoraMeEndeixiContext _localctx = new FthoraMeEndeixiContext(_ctx, getState());
		enterRule(_localctx, 8, RULE_fthoraMeEndeixi);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(143);
			fthora();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class PauseContext extends ParserRuleContext {
		public TerminalNode LEIMMA_ENOS_CHRONOU() { return getToken(ByzParser.LEIMMA_ENOS_CHRONOU, 0); }
		public GorgotitaContext gorgotita() {
			return getRuleContext(GorgotitaContext.class,0);
		}
		public List<TerminalNode> APLI() { return getTokens(ByzParser.APLI); }
		public TerminalNode APLI(int i) {
			return getToken(ByzParser.APLI, i);
		}
		public List<TerminalNode> DIPLI() { return getTokens(ByzParser.DIPLI); }
		public TerminalNode DIPLI(int i) {
			return getToken(ByzParser.DIPLI, i);
		}
		public List<TerminalNode> TRIPLI() { return getTokens(ByzParser.TRIPLI); }
		public TerminalNode TRIPLI(int i) {
			return getToken(ByzParser.TRIPLI, i);
		}
		public PauseContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_pause; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterPause(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitPause(this);
		}
	}

	public final PauseContext pause() throws RecognitionException {
		PauseContext _localctx = new PauseContext(_ctx, getState());
		enterRule(_localctx, 10, RULE_pause);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(145);
			match(LEIMMA_ENOS_CHRONOU);
			setState(149);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,10,_ctx);
			while ( _alt!=2 && _alt!= ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(146);
					_la = _input.LA(1);
					if ( !(((((_la - 252)) & ~0x3f) == 0 && ((1L << (_la - 252)) & ((1L << (APLI - 252)) | (1L << (DIPLI - 252)) | (1L << (TRIPLI - 252)))) != 0)) ) {
					_errHandler.recoverInline(this);
					}
					else {
						if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
						_errHandler.reportMatch(this);
						consume();
					}
					}
					} 
				}
				setState(151);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,10,_ctx);
			}
			setState(153);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,11,_ctx) ) {
			case 1:
				{
				setState(152);
				gorgotita();
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ClusterContext extends ParserRuleContext {
		public TerminalNode LEFT_PARENTHESIS() { return getToken(ByzParser.LEFT_PARENTHESIS, 0); }
		public TerminalNode RIGHT_PARENTHESIS() { return getToken(ByzParser.RIGHT_PARENTHESIS, 0); }
		public List<CapWordContext> capWord() {
			return getRuleContexts(CapWordContext.class);
		}
		public CapWordContext capWord(int i) {
			return getRuleContext(CapWordContext.class,i);
		}
		public List<SyllableContext> syllable() {
			return getRuleContexts(SyllableContext.class);
		}
		public SyllableContext syllable(int i) {
			return getRuleContext(SyllableContext.class,i);
		}
		public List<TCharContext> tChar() {
			return getRuleContexts(TCharContext.class);
		}
		public TCharContext tChar(int i) {
			return getRuleContext(TCharContext.class,i);
		}
		public List<QCharContext> qChar() {
			return getRuleContexts(QCharContext.class);
		}
		public QCharContext qChar(int i) {
			return getRuleContext(QCharContext.class,i);
		}
		public List<FthoraMeEndeixiContext> fthoraMeEndeixi() {
			return getRuleContexts(FthoraMeEndeixiContext.class);
		}
		public FthoraMeEndeixiContext fthoraMeEndeixi(int i) {
			return getRuleContext(FthoraMeEndeixiContext.class,i);
		}
		public List<MartyriaContext> martyria() {
			return getRuleContexts(MartyriaContext.class);
		}
		public MartyriaContext martyria(int i) {
			return getRuleContext(MartyriaContext.class,i);
		}
		public List<TerminalNode> ARXIGRAMMA() { return getTokens(ByzParser.ARXIGRAMMA); }
		public TerminalNode ARXIGRAMMA(int i) {
			return getToken(ByzParser.ARXIGRAMMA, i);
		}
		public List<PauseContext> pause() {
			return getRuleContexts(PauseContext.class);
		}
		public PauseContext pause(int i) {
			return getRuleContext(PauseContext.class,i);
		}
		public ClusterContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_cluster; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterCluster(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitCluster(this);
		}
	}

	public final ClusterContext cluster() throws RecognitionException {
		ClusterContext _localctx = new ClusterContext(_ctx, getState());
		enterRule(_localctx, 12, RULE_cluster);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(155);
			match(LEFT_PARENTHESIS);
			setState(166);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << LEIMMA_ENOS_CHRONOU) | (1L << MARTYRIA_ALLI_PROTOS_ICHOS) | (1L << MARTYRIA_ALLI_DEYTEROS_ICHOS) | (1L << MARTYRIA_TRIFONIAS) | (1L << MARTYRIA_TETARTOS_ICHOS) | (1L << MARTYRIA_LEGETOS_ICHOS))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (APOSTROFOI_TELOUS_ICHIMATOS - 64)) | (1L << (MARTYRIA_VARYS_ICHOS - 64)) | (1L << (ARKTIKO_PA - 64)) | (1L << (ARKTIKO_VOU - 64)) | (1L << (ARKTIKO_GA - 64)) | (1L << (ARKTIKO_DI - 64)) | (1L << (ARKTIKO_KE - 64)) | (1L << (ARKTIKO_ZO - 64)) | (1L << (ARKTIKO_NI - 64)))) != 0) || ((((_la - 150)) & ~0x3f) == 0 && ((1L << (_la - 150)) & ((1L << (GRAMMA_MARTYRIAS_TONOS - 150)) | (1L << (LOW_GA - 150)) | (1L << (LOW_DI - 150)) | (1L << (LOW_KE - 150)) | (1L << (MARTYRIA_NENANO - 150)) | (1L << (MARTYRIA_ALLI_PROTOS_ICHOS_LOW - 150)) | (1L << (MARTYRIA_ALLI_DEYTEROS_ICHOS_LOW - 150)) | (1L << (MARTYRIA_TRIFONIAS_LOW - 150)) | (1L << (MARTYRIA_TETARTOS_ICHOS_LOW - 150)) | (1L << (MARTYRIA_NENANO_LOW - 150)) | (1L << (ARXIGRAMMA - 150)) | (1L << (CAP_LETTER - 150)) | (1L << (SMALL_LETTER - 150)) | (1L << (GORGON_NEO_ANO - 150)) | (1L << (GORGON_PARESTIGMENON_ARISTERA - 150)) | (1L << (GORGON_PARESTIGMENON_DEXIA - 150)) | (1L << (DIGORGON - 150)) | (1L << (DIGORGON_PARESTIGMENON_ARISTERA_KATO - 150)) | (1L << (DIGORGON_PARESTIGMENON_ARISTERA_ANO - 150)) | (1L << (DIGORGON_PARESTIGMENON_DEXIA - 150)) | (1L << (TRIGORGON - 150)) | (1L << (ARGON - 150)))) != 0) || ((((_la - 214)) & ~0x3f) == 0 && ((1L << (_la - 214)) & ((1L << (IMIDIARGON - 214)) | (1L << (DIARGON - 214)) | (1L << (GORGON_NEO_KATO - 214)) | (1L << (GORGON_USED_ON_KENTIMATA_ABOVE_OLIGON - 214)) | (1L << (DIGORGON_USED_ON_KENTIMATA_ABOVE_OLIGON - 214)) | (1L << (GORGON_USED_ON_YPORROI - 214)) | (1L << (GORGON_LEFT_DOT_USED_ON_YPORROI - 214)) | (1L << (GORGON_RIGHT_DOT_USED_ON_YPORROI - 214)) | (1L << (DIGORGON_USED_ON_YPORROI - 214)) | (1L << (DIGORGON_LEFT_DOT_USED_ON_YPORROI - 214)) | (1L << (TRIGORGON_USED_ON_YPORROI - 214)) | (1L << (TRIGORGON_LEFT_DOT_USED_ON_YPORROI - 214)) | (1L << (GORGON_USED_ON_L116_YPORROI - 214)) | (1L << (DIGORGON_USED_ON_L116_YPORROI - 214)) | (1L << (TRIGORGON_USED_ON_L116_YPORROI - 214)) | (1L << (GORGON_LEFT_DOT_USED_ON_L116_YPORROI - 214)) | (1L << (GORGON_ANO_STA_DEXIA - 214)) | (1L << (GORGON_KATO - 214)) | (1L << (GORGON_KATO_STA_DEXIA - 214)) | (1L << (GORGON_PARESTIGMENON_ARISTERA_STA_DEXIA - 214)) | (1L << (GORGON_PARESTIGMENON_DEXIA_STA_DEXIA - 214)) | (1L << (DIGORGON_STA_DEXIA - 214)) | (1L << (DIGORGON_PARESTIGMENON_ARISTERA_KATO_STA_DEXIA - 214)) | (1L << (DIGORGON_PARESTIGMENON_ARISTERA_ANO_STA_DEXIA - 214)) | (1L << (DIGORGON_PARESTIGMENON_DEXIA_STA_DEXIA - 214)) | (1L << (TRIGORGON_STA_DEXIA - 214)) | (1L << (TRIGORGON_PARESTIGMENON_ARISTERA_KATO - 214)) | (1L << (TRIGORGON_PARESTIGMENON_ARISTERA_KATO_STA_DEXIA - 214)) | (1L << (TRIGORGON_PARESTIGMENON_ARISTERA_ANO - 214)) | (1L << (TRIGORGON_PARESTIGMENON_ARISTERA_ANO_STA_DEXIA - 214)) | (1L << (TRIGORGON_PARESTIGMENON_DEXIA - 214)) | (1L << (TRIGORGON_PARESTIGMENON_DEXIA_STA_DEXIA - 214)) | (1L << (KLASMA_ANO - 214)) | (1L << (APLI - 214)) | (1L << (DIPLI - 214)) | (1L << (TRIPLI - 214)) | (1L << (KLASMA_KATO - 214)) | (1L << (KLASMA_ANO_STA_DEXIA - 214)) | (1L << (KLASMA_ANO_STA_ARISTERA - 214)) | (1L << (APLI_STA_DEXIA - 214)) | (1L << (DIPLI_STA_DEXIA - 214)) | (1L << (TRIPLI_STA_DEXIA - 214)) | (1L << (ENARXIS_KAI_FTHORA_VOU - 214)) | (1L << (FTHORA_DIATONIKI_PA - 214)) | (1L << (FTHORA_DIATONIKI_NANA - 214)) | (1L << (FTHORA_NAOS_ICHOS - 214)) | (1L << (FTHORA_DIATONIKI_DI - 214)))) != 0) || ((((_la - 278)) & ~0x3f) == 0 && ((1L << (_la - 278)) & ((1L << (FTHORA_DIATONIKI_KE - 278)) | (1L << (FTHORA_DIATONIKI_ZO - 278)) | (1L << (FTHORA_DIATONIKI_NI_KATO - 278)) | (1L << (FTHORA_DIATONIKI_NI_ANO - 278)) | (1L << (FTHORA_MALAKON_CHROMA_DIFONIAS - 278)) | (1L << (FTHORA_MALAKON_CHROMA_MONOFONIAS - 278)) | (1L << (FHTORA_SKLIRON_CHROMA_VASIS - 278)) | (1L << (FTHORA_NENANO - 278)) | (1L << (CHROA_ZYGOS - 278)) | (1L << (CHROA_KLITON - 278)) | (1L << (CHROA_SPATHI - 278)) | (1L << (FTHORA_I_YFESIS_TETARTIMORION - 278)) | (1L << (DIESIS_APLI_DYO_DODEKATA - 278)) | (1L << (DIESIS_MONOGRAMMOS_TESSERA_DODEKATA - 278)) | (1L << (DIESIS_DIGRAMMOS_EX_DODEKATA - 278)) | (1L << (DIESIS_TRIGRAMMOS_OKTO_DODEKATA - 278)) | (1L << (YFESIS_APLI_DYO_DODEKATA - 278)) | (1L << (YFESIS_MONOGRAMMOS_TESSERA_DODEKATA - 278)) | (1L << (YFESIS_DIGRAMMOS_EX_DODEKATA - 278)) | (1L << (YFESIS_TRIGRAMMOS_OKTO_DODEKATA - 278)) | (1L << (GENIKI_DIESIS - 278)) | (1L << (GENIKI_YFESIS - 278)) | (1L << (DIESIS_APLI_DYO_DODEKATA_DEXIA - 278)) | (1L << (DIESIS_MONOGRAMMOS_TESSERA_DODEKATA_DEXIA - 278)) | (1L << (DIESIS_DIGRAMMOS_EX_DODEKATA_DEXIA - 278)) | (1L << (YFESIS_APLI_DYO_DODEKATA_DEXIA - 278)) | (1L << (YFESIS_MONOGRAMMOS_TESSERA_DODEKATA_DEXIA - 278)) | (1L << (YFESIS_DIGRAMMOS_EX_DODEKATA_DEXIA - 278)) | (1L << (ISON_NEO - 278)) | (1L << (OLIGON_NEO - 278)) | (1L << (PETASTI - 278)) | (1L << (APOSTROFOS_NEO - 278)) | (1L << (YPORROI - 278)) | (1L << (ELAFRON - 278)) | (1L << (CHAMILI - 278)) | (1L << (KENTIMATA_NEO_MESO - 278)) | (1L << (KENTIMA_NEO_MESO - 278)) | (1L << (OLIGON_OVER_PETASTI - 278)) | (1L << (KENTIMA_UNDER_OLIGON - 278)) | (1L << (OLIGON_ABOVE_KENTIMATA - 278)) | (1L << (KENTIMATA_ABOVE_OLIGON - 278)) | (1L << (ANTIKENOMA_UNDER_KENTIMA_UNDER_OLIGON - 278)) | (1L << (KENTIMA_OVER_OLIGON - 278)) | (1L << (KENTIMA_OVER_PETASTI - 278)) | (1L << (YPSILI_AT_RIGHT_END_OF_OLIGON - 278)) | (1L << (YPSILI_AT_RIGHT_END_OF_PETASTI - 278)) | (1L << (YPSILI_AT_LEFT_END_OF_OLIGON - 278)) | (1L << (YPSILI_AT_LEFT_END_OF_PETASTI - 278)) | (1L << (YPSILI_AT_RIGHT_END_OF_OLIGON_AND_KENTIMATA_AT_LEFT - 278)))) != 0) || ((((_la - 342)) & ~0x3f) == 0 && ((1L << (_la - 342)) & ((1L << (YPSILI_AT_LEFT_END_OF_OLIGON_AND_KENTIMATA_AT_RIGHT - 342)) | (1L << (YPSILI_NEXT_TO_KENTIMA_OVER_OLIGON - 342)) | (1L << (YPSILI_NEXT_TO_KENTIMA_OVER_PETASTI - 342)) | (1L << (YPSILI_OVER_KENTIMA_OVER_OLIGON - 342)) | (1L << (YPSILI_OVER_KENTIMA_OVER_PETASTI - 342)) | (1L << (TWO_IPSILES_OVER_OLIGON - 342)) | (1L << (TWO_IPSILES_OVER_PETASTI - 342)) | (1L << (TWO_IPSILES_OVER_KETNIMATA_OVER_OLIGON - 342)) | (1L << (TWO_IPSILES_OVER_KETNIMATA_OVER_PETASTI - 342)) | (1L << (YPSILI_OVER_KENTIMA_OVER_OLIGON_AND_YPSILI_TO_LEFT - 342)) | (1L << (YPSILI_OVER_KENTIMA_OVER_PETASTI_AND_YPSILI_RIGHT - 342)) | (1L << (THREE_YPSILES_OVER_OLIGON - 342)) | (1L << (THREE_YPSILES_OVER_PETASTI - 342)) | (1L << (THREE_YPSILES_OVER_OLIGON_KENTIMATA_IN_MIDDLE - 342)) | (1L << (THREE_YPSILES_OVER_PETASTI_KENTIMATA_IN_MIDDLE - 342)) | (1L << (THREE_YPSILES_OVER_OLIGON_KENTIMA_IN_MIDDLE - 342)) | (1L << (CONTINUOUS_ELAFRON - 342)) | (1L << (ELAPHRON_OVER_APOSTROPHOS - 342)) | (1L << (HAMILI_OVER_APOSTROPHOS - 342)) | (1L << (HAMILI_OVER_ELAPHRON - 342)) | (1L << (HAMILI_OVER_ELAPHRON_OVER_APOSTROPHOS - 342)) | (1L << (APOSTROPHOS_OVER_PETASTI - 342)) | (1L << (CONTINUOUS_ELAFRON_OVER_PETASTI - 342)) | (1L << (ELAPHRON_OVER_PETASTI - 342)) | (1L << (ELAPHRON_OVER_APOSTROPHOS_OVER_PETASTI - 342)) | (1L << (TWO_APOSTROPHOI_IN_A_ROW - 342)) | (1L << (APOSTROPHOS_OVER_OLIGON - 342)) | (1L << (ELAPHRON_OVER_OLIGON - 342)) | (1L << (ELAPHRON_OVER_APOSTROPHOS_OVER_ISON - 342)) | (1L << (HAMILI_OVER_OLIGON - 342)) | (1L << (YPORROI_OVER_OLIGON - 342)) | (1L << (YPORROI_OVER_PETASTI - 342)) | (1L << (HAMILI_OVER_HAMILI - 342)) | (1L << (HAMILI_OVER_PETASTI - 342)) | (1L << (HAMILI_OVER_APOSTROPHOS_OVER_PETASTI - 342)) | (1L << (HAMILI_OVER_ELAPHRON_OVER_PETASTI - 342)) | (1L << (HAMILI_OVER_ELAPHRON_OVER_APOSTROPHOS_OVER_PETASTI - 342)) | (1L << (HAMILI_OVER_HAMILI_OVER_PETASTI - 342)) | (1L << (HAMILI_OVER_HAMILI_OVER_APOSTROPHOS - 342)) | (1L << (HAMILI_OVER_HAMILI_OVER_APOSTROPHOS_OVER_PETASTI - 342)) | (1L << (HAMILI_OVER_HAMILI_OVER_ELAPHRON - 342)) | (1L << (HAMILI_OVER_HAMILI_OVER_ELAPHRON_OVER_APOSTROPHOS - 342)) | (1L << (HAMILI_OVER_HAMILI_OVER_HAMILI - 342)) | (1L << (ISON_OVER_PETASTI - 342)) | (1L << (ISON_OVER_OLIGON - 342)) | (1L << (APOSTROPHOS_UNDER_ISON - 342)) | (1L << (APOSTROPHOS_AND_KENTIMATA_OVER_OLIGON - 342)) | (1L << (ISON_AND_KENTIMATA_OVER_OLIGON - 342)) | (1L << (ELAPHRON_AND_KENTIMATA_OVER_OLIGON - 342)) | (1L << (CONTINUOUS_ELAFRON_AND_KENTIMATA_OVER_OLIGON - 342)) | (1L << (ELAPHRON_OVER_APOSTROPHOS_AND_KENTIMATA_OVER_OLIGON - 342)) | (1L << (HAMILI_AND_KENTIMATA_OVER_OLIGON - 342)) | (1L << (YPORROI_AND_KENTIMATA_OVER_OLIGON - 342)) | (1L << (KENTIMA_TO_THE_RIGHT_OF_OLIGON - 342)))) != 0)) {
				{
				setState(164);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,12,_ctx) ) {
				case 1:
					{
					setState(156);
					capWord();
					}
					break;
				case 2:
					{
					setState(157);
					syllable();
					}
					break;
				case 3:
					{
					setState(158);
					tChar();
					}
					break;
				case 4:
					{
					setState(159);
					qChar();
					}
					break;
				case 5:
					{
					setState(160);
					fthoraMeEndeixi();
					}
					break;
				case 6:
					{
					setState(161);
					martyria();
					}
					break;
				case 7:
					{
					setState(162);
					match(ARXIGRAMMA);
					}
					break;
				case 8:
					{
					setState(163);
					pause();
					}
					break;
				}
				}
				setState(168);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(169);
			match(RIGHT_PARENTHESIS);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class TCharContext extends ParserRuleContext {
		public GorgotitaContext gorgotita() {
			return getRuleContext(GorgotitaContext.class,0);
		}
		public ArgiaContext argia() {
			return getRuleContext(ArgiaContext.class,0);
		}
		public TCharContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_tChar; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterTChar(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitTChar(this);
		}
	}

	public final TCharContext tChar() throws RecognitionException {
		TCharContext _localctx = new TCharContext(_ctx, getState());
		enterRule(_localctx, 14, RULE_tChar);
		try {
			setState(173);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case GORGON_NEO_ANO:
			case GORGON_PARESTIGMENON_ARISTERA:
			case GORGON_PARESTIGMENON_DEXIA:
			case DIGORGON:
			case DIGORGON_PARESTIGMENON_ARISTERA_KATO:
			case DIGORGON_PARESTIGMENON_ARISTERA_ANO:
			case DIGORGON_PARESTIGMENON_DEXIA:
			case TRIGORGON:
			case ARGON:
			case IMIDIARGON:
			case DIARGON:
			case GORGON_NEO_KATO:
			case GORGON_USED_ON_KENTIMATA_ABOVE_OLIGON:
			case DIGORGON_USED_ON_KENTIMATA_ABOVE_OLIGON:
			case GORGON_USED_ON_YPORROI:
			case GORGON_LEFT_DOT_USED_ON_YPORROI:
			case GORGON_RIGHT_DOT_USED_ON_YPORROI:
			case DIGORGON_USED_ON_YPORROI:
			case DIGORGON_LEFT_DOT_USED_ON_YPORROI:
			case TRIGORGON_USED_ON_YPORROI:
			case TRIGORGON_LEFT_DOT_USED_ON_YPORROI:
			case GORGON_USED_ON_L116_YPORROI:
			case DIGORGON_USED_ON_L116_YPORROI:
			case TRIGORGON_USED_ON_L116_YPORROI:
			case GORGON_LEFT_DOT_USED_ON_L116_YPORROI:
			case GORGON_ANO_STA_DEXIA:
			case GORGON_KATO:
			case GORGON_KATO_STA_DEXIA:
			case GORGON_PARESTIGMENON_ARISTERA_STA_DEXIA:
			case GORGON_PARESTIGMENON_DEXIA_STA_DEXIA:
			case DIGORGON_STA_DEXIA:
			case DIGORGON_PARESTIGMENON_ARISTERA_KATO_STA_DEXIA:
			case DIGORGON_PARESTIGMENON_ARISTERA_ANO_STA_DEXIA:
			case DIGORGON_PARESTIGMENON_DEXIA_STA_DEXIA:
			case TRIGORGON_STA_DEXIA:
			case TRIGORGON_PARESTIGMENON_ARISTERA_KATO:
			case TRIGORGON_PARESTIGMENON_ARISTERA_KATO_STA_DEXIA:
			case TRIGORGON_PARESTIGMENON_ARISTERA_ANO:
			case TRIGORGON_PARESTIGMENON_ARISTERA_ANO_STA_DEXIA:
			case TRIGORGON_PARESTIGMENON_DEXIA:
			case TRIGORGON_PARESTIGMENON_DEXIA_STA_DEXIA:
				enterOuterAlt(_localctx, 1);
				{
				setState(171);
				gorgotita();
				}
				break;
			case KLASMA_ANO:
			case APLI:
			case DIPLI:
			case TRIPLI:
			case KLASMA_KATO:
			case KLASMA_ANO_STA_DEXIA:
			case KLASMA_ANO_STA_ARISTERA:
			case APLI_STA_DEXIA:
			case DIPLI_STA_DEXIA:
			case TRIPLI_STA_DEXIA:
				enterOuterAlt(_localctx, 2);
				{
				setState(172);
				argia();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class GrammaMartyriasContext extends ParserRuleContext {
		public TerminalNode ARKTIKO_NI() { return getToken(ByzParser.ARKTIKO_NI, 0); }
		public TerminalNode ARKTIKO_PA() { return getToken(ByzParser.ARKTIKO_PA, 0); }
		public TerminalNode ARKTIKO_VOU() { return getToken(ByzParser.ARKTIKO_VOU, 0); }
		public TerminalNode ARKTIKO_GA() { return getToken(ByzParser.ARKTIKO_GA, 0); }
		public TerminalNode ARKTIKO_DI() { return getToken(ByzParser.ARKTIKO_DI, 0); }
		public TerminalNode ARKTIKO_KE() { return getToken(ByzParser.ARKTIKO_KE, 0); }
		public TerminalNode ARKTIKO_ZO() { return getToken(ByzParser.ARKTIKO_ZO, 0); }
		public TerminalNode LOW_GA() { return getToken(ByzParser.LOW_GA, 0); }
		public TerminalNode LOW_DI() { return getToken(ByzParser.LOW_DI, 0); }
		public TerminalNode LOW_KE() { return getToken(ByzParser.LOW_KE, 0); }
		public GrammaMartyriasContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_grammaMartyrias; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterGrammaMartyrias(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitGrammaMartyrias(this);
		}
	}

	public final GrammaMartyriasContext grammaMartyrias() throws RecognitionException {
		GrammaMartyriasContext _localctx = new GrammaMartyriasContext(_ctx, getState());
		enterRule(_localctx, 16, RULE_grammaMartyrias);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(175);
			_la = _input.LA(1);
			if ( !(((((_la - 100)) & ~0x3f) == 0 && ((1L << (_la - 100)) & ((1L << (ARKTIKO_PA - 100)) | (1L << (ARKTIKO_VOU - 100)) | (1L << (ARKTIKO_GA - 100)) | (1L << (ARKTIKO_DI - 100)) | (1L << (ARKTIKO_KE - 100)) | (1L << (ARKTIKO_ZO - 100)) | (1L << (ARKTIKO_NI - 100)) | (1L << (LOW_GA - 100)) | (1L << (LOW_DI - 100)) | (1L << (LOW_KE - 100)))) != 0)) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class MartyrikoSimioContext extends ParserRuleContext {
		public TerminalNode MARTYRIA_TETARTOS_ICHOS() { return getToken(ByzParser.MARTYRIA_TETARTOS_ICHOS, 0); }
		public TerminalNode MARTYRIA_ALLI_PROTOS_ICHOS() { return getToken(ByzParser.MARTYRIA_ALLI_PROTOS_ICHOS, 0); }
		public TerminalNode MARTYRIA_ALLI_DEYTEROS_ICHOS() { return getToken(ByzParser.MARTYRIA_ALLI_DEYTEROS_ICHOS, 0); }
		public TerminalNode APOSTROFOI_TELOUS_ICHIMATOS() { return getToken(ByzParser.APOSTROFOI_TELOUS_ICHIMATOS, 0); }
		public TerminalNode MARTYRIA_ALLI_PROTOS_ICHOS_LOW() { return getToken(ByzParser.MARTYRIA_ALLI_PROTOS_ICHOS_LOW, 0); }
		public TerminalNode MARTYRIA_ALLI_DEYTEROS_ICHOS_LOW() { return getToken(ByzParser.MARTYRIA_ALLI_DEYTEROS_ICHOS_LOW, 0); }
		public TerminalNode MARTYRIA_TETARTOS_ICHOS_LOW() { return getToken(ByzParser.MARTYRIA_TETARTOS_ICHOS_LOW, 0); }
		public TerminalNode MARTYRIA_LEGETOS_ICHOS() { return getToken(ByzParser.MARTYRIA_LEGETOS_ICHOS, 0); }
		public TerminalNode MARTYRIA_TRIFONIAS() { return getToken(ByzParser.MARTYRIA_TRIFONIAS, 0); }
		public TerminalNode MARTYRIA_VARYS_ICHOS() { return getToken(ByzParser.MARTYRIA_VARYS_ICHOS, 0); }
		public TerminalNode MARTYRIA_NENANO() { return getToken(ByzParser.MARTYRIA_NENANO, 0); }
		public TerminalNode MARTYRIA_TRIFONIAS_LOW() { return getToken(ByzParser.MARTYRIA_TRIFONIAS_LOW, 0); }
		public TerminalNode MARTYRIA_NENANO_LOW() { return getToken(ByzParser.MARTYRIA_NENANO_LOW, 0); }
		public MartyrikoSimioContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_martyrikoSimio; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterMartyrikoSimio(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitMartyrikoSimio(this);
		}
	}

	public final MartyrikoSimioContext martyrikoSimio() throws RecognitionException {
		MartyrikoSimioContext _localctx = new MartyrikoSimioContext(_ctx, getState());
		enterRule(_localctx, 18, RULE_martyrikoSimio);
		int _la;
		try {
			setState(191);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,17,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(178);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==APOSTROFOI_TELOUS_ICHIMATOS) {
					{
					setState(177);
					match(APOSTROFOI_TELOUS_ICHIMATOS);
					}
				}

				setState(180);
				_la = _input.LA(1);
				if ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << MARTYRIA_ALLI_PROTOS_ICHOS) | (1L << MARTYRIA_ALLI_DEYTEROS_ICHOS) | (1L << MARTYRIA_TETARTOS_ICHOS))) != 0)) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(182);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==APOSTROFOI_TELOUS_ICHIMATOS) {
					{
					setState(181);
					match(APOSTROFOI_TELOUS_ICHIMATOS);
					}
				}

				setState(184);
				_la = _input.LA(1);
				if ( !(((((_la - 155)) & ~0x3f) == 0 && ((1L << (_la - 155)) & ((1L << (MARTYRIA_ALLI_PROTOS_ICHOS_LOW - 155)) | (1L << (MARTYRIA_ALLI_DEYTEROS_ICHOS_LOW - 155)) | (1L << (MARTYRIA_TETARTOS_ICHOS_LOW - 155)))) != 0)) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(185);
				match(MARTYRIA_LEGETOS_ICHOS);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(186);
				match(MARTYRIA_TRIFONIAS);
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(187);
				match(MARTYRIA_VARYS_ICHOS);
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(188);
				match(MARTYRIA_NENANO);
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(189);
				match(MARTYRIA_TRIFONIAS_LOW);
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(190);
				match(MARTYRIA_NENANO_LOW);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class MartyriaContext extends ParserRuleContext {
		public GrammaMartyriasContext grammaMartyrias() {
			return getRuleContext(GrammaMartyriasContext.class,0);
		}
		public MartyrikoSimioContext martyrikoSimio() {
			return getRuleContext(MartyrikoSimioContext.class,0);
		}
		public TerminalNode GRAMMA_MARTYRIAS_TONOS() { return getToken(ByzParser.GRAMMA_MARTYRIAS_TONOS, 0); }
		public MartyriaContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_martyria; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterMartyria(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitMartyria(this);
		}
	}

	public final MartyriaContext martyria() throws RecognitionException {
		MartyriaContext _localctx = new MartyriaContext(_ctx, getState());
		enterRule(_localctx, 20, RULE_martyria);
		int _la;
		try {
			setState(227);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,24,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(193);
				grammaMartyrias();
				setState(194);
				martyrikoSimio();
				setState(196);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,18,_ctx) ) {
				case 1:
					{
					setState(195);
					match(GRAMMA_MARTYRIAS_TONOS);
					}
					break;
				}
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(198);
				grammaMartyrias();
				setState(200);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==GRAMMA_MARTYRIAS_TONOS) {
					{
					setState(199);
					match(GRAMMA_MARTYRIAS_TONOS);
					}
				}

				setState(202);
				martyrikoSimio();
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(204);
				martyrikoSimio();
				setState(205);
				grammaMartyrias();
				setState(207);
				_errHandler.sync(this);
				switch ( getInterpreter().adaptivePredict(_input,20,_ctx) ) {
				case 1:
					{
					setState(206);
					match(GRAMMA_MARTYRIAS_TONOS);
					}
					break;
				}
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(209);
				martyrikoSimio();
				setState(211);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==GRAMMA_MARTYRIAS_TONOS) {
					{
					setState(210);
					match(GRAMMA_MARTYRIAS_TONOS);
					}
				}

				setState(213);
				grammaMartyrias();
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(216);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==GRAMMA_MARTYRIAS_TONOS) {
					{
					setState(215);
					match(GRAMMA_MARTYRIAS_TONOS);
					}
				}

				setState(218);
				grammaMartyrias();
				setState(219);
				martyrikoSimio();
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(222);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==GRAMMA_MARTYRIAS_TONOS) {
					{
					setState(221);
					match(GRAMMA_MARTYRIAS_TONOS);
					}
				}

				setState(224);
				martyrikoSimio();
				setState(225);
				grammaMartyrias();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ArktikiMartyriaContext extends ParserRuleContext {
		public PlagiosTetartoyArktikiMartyriaContext plagiosTetartoyArktikiMartyria() {
			return getRuleContext(PlagiosTetartoyArktikiMartyriaContext.class,0);
		}
		public PlagiosPrwtouArktikiMartyriaContext plagiosPrwtouArktikiMartyria() {
			return getRuleContext(PlagiosPrwtouArktikiMartyriaContext.class,0);
		}
		public TerminalNode LEFT_PARENTHESIS() { return getToken(ByzParser.LEFT_PARENTHESIS, 0); }
		public TextContext text() {
			return getRuleContext(TextContext.class,0);
		}
		public List<SyllableContext> syllable() {
			return getRuleContexts(SyllableContext.class);
		}
		public SyllableContext syllable(int i) {
			return getRuleContext(SyllableContext.class,i);
		}
		public List<TerminalNode> ARXIGRAMMA() { return getTokens(ByzParser.ARXIGRAMMA); }
		public TerminalNode ARXIGRAMMA(int i) {
			return getToken(ByzParser.ARXIGRAMMA, i);
		}
		public TerminalNode RIGHT_PARENTHESIS() { return getToken(ByzParser.RIGHT_PARENTHESIS, 0); }
		public ArktikiMartyriaContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_arktikiMartyria; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterArktikiMartyria(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitArktikiMartyria(this);
		}
	}

	public final ArktikiMartyriaContext arktikiMartyria() throws RecognitionException {
		ArktikiMartyriaContext _localctx = new ArktikiMartyriaContext(_ctx, getState());
		enterRule(_localctx, 22, RULE_arktikiMartyria);
		int _la;
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(230);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,25,_ctx) ) {
			case 1:
				{
				setState(229);
				match(LEFT_PARENTHESIS);
				}
				break;
			}
			setState(233);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (((((_la - 197)) & ~0x3f) == 0 && ((1L << (_la - 197)) & ((1L << (LEFT_PARENTHESIS - 197)) | (1L << (CAP_LETTER - 197)) | (1L << (SMALL_LETTER - 197)) | (1L << (LATIN_WORD - 197)) | (1L << (GREEK_WORD - 197)) | (1L << (SYMBOLS_NUMBERS - 197)))) != 0)) {
				{
				setState(232);
				text();
				}
			}

			setState(237);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,27,_ctx) ) {
			case 1:
				{
				setState(235);
				plagiosTetartoyArktikiMartyria();
				}
				break;
			case 2:
				{
				setState(236);
				plagiosPrwtouArktikiMartyria();
				}
				break;
			}
			setState(242);
			_errHandler.sync(this);
			_alt = getInterpreter().adaptivePredict(_input,28,_ctx);
			while ( _alt!=2 && _alt!= ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					{
					{
					setState(239);
					syllable();
					}
					} 
				}
				setState(244);
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,28,_ctx);
			}
			setState(248);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==ARXIGRAMMA) {
				{
				{
				setState(245);
				match(ARXIGRAMMA);
				}
				}
				setState(250);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			setState(252);
			_errHandler.sync(this);
			_la = _input.LA(1);
			if (_la==RIGHT_PARENTHESIS) {
				{
				setState(251);
				match(RIGHT_PARENTHESIS);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class PlagiosTetartoyArktikiMartyriaContext extends ParserRuleContext {
		public TerminalNode HXOS_WORD() { return getToken(ByzParser.HXOS_WORD, 0); }
		public TerminalNode MARTYRIA_PLAGIOS_ICHOS() { return getToken(ByzParser.MARTYRIA_PLAGIOS_ICHOS, 0); }
		public TerminalNode ARKTIKH_MARTYRIA_TETARTOS_ICHOS() { return getToken(ByzParser.ARKTIKH_MARTYRIA_TETARTOS_ICHOS, 0); }
		public TerminalNode FTHOGGOS_NH_WORD() { return getToken(ByzParser.FTHOGGOS_NH_WORD, 0); }
		public PlagiosTetartoyArktikiMartyriaContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_plagiosTetartoyArktikiMartyria; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterPlagiosTetartoyArktikiMartyria(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitPlagiosTetartoyArktikiMartyria(this);
		}
	}

	public final PlagiosTetartoyArktikiMartyriaContext plagiosTetartoyArktikiMartyria() throws RecognitionException {
		PlagiosTetartoyArktikiMartyriaContext _localctx = new PlagiosTetartoyArktikiMartyriaContext(_ctx, getState());
		enterRule(_localctx, 24, RULE_plagiosTetartoyArktikiMartyria);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(254);
			match(HXOS_WORD);
			setState(255);
			match(MARTYRIA_PLAGIOS_ICHOS);
			setState(256);
			match(ARKTIKH_MARTYRIA_TETARTOS_ICHOS);
			setState(257);
			match(FTHOGGOS_NH_WORD);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class PlagiosPrwtouArktikiMartyriaContext extends ParserRuleContext {
		public TerminalNode HXOS_WORD() { return getToken(ByzParser.HXOS_WORD, 0); }
		public TerminalNode ARKTIKH_MARTYRIA_PLAGIOS_A_ICHOS() { return getToken(ByzParser.ARKTIKH_MARTYRIA_PLAGIOS_A_ICHOS, 0); }
		public TerminalNode FANEROSIS_TETRAFONIAS() { return getToken(ByzParser.FANEROSIS_TETRAFONIAS, 0); }
		public TerminalNode FTHOGGOS_PA_WORD() { return getToken(ByzParser.FTHOGGOS_PA_WORD, 0); }
		public TerminalNode FTHORA_DIATONIKI_PA() { return getToken(ByzParser.FTHORA_DIATONIKI_PA, 0); }
		public PlagiosPrwtouArktikiMartyriaContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_plagiosPrwtouArktikiMartyria; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterPlagiosPrwtouArktikiMartyria(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitPlagiosPrwtouArktikiMartyria(this);
		}
	}

	public final PlagiosPrwtouArktikiMartyriaContext plagiosPrwtouArktikiMartyria() throws RecognitionException {
		PlagiosPrwtouArktikiMartyriaContext _localctx = new PlagiosPrwtouArktikiMartyriaContext(_ctx, getState());
		enterRule(_localctx, 26, RULE_plagiosPrwtouArktikiMartyria);
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(259);
			match(HXOS_WORD);
			setState(260);
			match(ARKTIKH_MARTYRIA_PLAGIOS_A_ICHOS);
			setState(261);
			match(FANEROSIS_TETRAFONIAS);
			setState(262);
			match(FTHOGGOS_PA_WORD);
			setState(263);
			match(FTHORA_DIATONIKI_PA);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class TextContext extends ParserRuleContext {
		public List<SyllableContext> syllable() {
			return getRuleContexts(SyllableContext.class);
		}
		public SyllableContext syllable(int i) {
			return getRuleContext(SyllableContext.class,i);
		}
		public List<TerminalNode> LATIN_WORD() { return getTokens(ByzParser.LATIN_WORD); }
		public TerminalNode LATIN_WORD(int i) {
			return getToken(ByzParser.LATIN_WORD, i);
		}
		public List<TerminalNode> GREEK_WORD() { return getTokens(ByzParser.GREEK_WORD); }
		public TerminalNode GREEK_WORD(int i) {
			return getToken(ByzParser.GREEK_WORD, i);
		}
		public List<TerminalNode> SYMBOLS_NUMBERS() { return getTokens(ByzParser.SYMBOLS_NUMBERS); }
		public TerminalNode SYMBOLS_NUMBERS(int i) {
			return getToken(ByzParser.SYMBOLS_NUMBERS, i);
		}
		public List<CapWordContext> capWord() {
			return getRuleContexts(CapWordContext.class);
		}
		public CapWordContext capWord(int i) {
			return getRuleContext(CapWordContext.class,i);
		}
		public TerminalNode LEFT_PARENTHESIS() { return getToken(ByzParser.LEFT_PARENTHESIS, 0); }
		public TerminalNode RIGHT_PARENTHESIS() { return getToken(ByzParser.RIGHT_PARENTHESIS, 0); }
		public List<TextContext> text() {
			return getRuleContexts(TextContext.class);
		}
		public TextContext text(int i) {
			return getRuleContext(TextContext.class,i);
		}
		public TextContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_text; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterText(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitText(this);
		}
	}

	public final TextContext text() throws RecognitionException {
		TextContext _localctx = new TextContext(_ctx, getState());
		enterRule(_localctx, 28, RULE_text);
		int _la;
		try {
			int _alt;
			setState(286);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case CAP_LETTER:
			case SMALL_LETTER:
			case LATIN_WORD:
			case GREEK_WORD:
			case SYMBOLS_NUMBERS:
				enterOuterAlt(_localctx, 1);
				{
				setState(270); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						setState(270);
						_errHandler.sync(this);
						switch ( getInterpreter().adaptivePredict(_input,31,_ctx) ) {
						case 1:
							{
							setState(265);
							syllable();
							}
							break;
						case 2:
							{
							setState(266);
							match(LATIN_WORD);
							}
							break;
						case 3:
							{
							setState(267);
							match(GREEK_WORD);
							}
							break;
						case 4:
							{
							setState(268);
							match(SYMBOLS_NUMBERS);
							}
							break;
						case 5:
							{
							setState(269);
							capWord();
							}
							break;
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(272); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,32,_ctx);
				} while ( _alt!=2 && _alt!= ATN.INVALID_ALT_NUMBER );
				}
				break;
			case LEFT_PARENTHESIS:
				enterOuterAlt(_localctx, 2);
				{
				setState(274);
				match(LEFT_PARENTHESIS);
				setState(281); 
				_errHandler.sync(this);
				_la = _input.LA(1);
				do {
					{
					setState(281);
					_errHandler.sync(this);
					switch ( getInterpreter().adaptivePredict(_input,33,_ctx) ) {
					case 1:
						{
						setState(275);
						syllable();
						}
						break;
					case 2:
						{
						setState(276);
						capWord();
						}
						break;
					case 3:
						{
						setState(277);
						match(LATIN_WORD);
						}
						break;
					case 4:
						{
						setState(278);
						match(GREEK_WORD);
						}
						break;
					case 5:
						{
						setState(279);
						match(SYMBOLS_NUMBERS);
						}
						break;
					case 6:
						{
						setState(280);
						text();
						}
						break;
					}
					}
					setState(283); 
					_errHandler.sync(this);
					_la = _input.LA(1);
				} while ( ((((_la - 197)) & ~0x3f) == 0 && ((1L << (_la - 197)) & ((1L << (LEFT_PARENTHESIS - 197)) | (1L << (CAP_LETTER - 197)) | (1L << (SMALL_LETTER - 197)) | (1L << (LATIN_WORD - 197)) | (1L << (GREEK_WORD - 197)) | (1L << (SYMBOLS_NUMBERS - 197)))) != 0) );
				setState(285);
				match(RIGHT_PARENTHESIS);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class CapWordContext extends ParserRuleContext {
		public List<TerminalNode> CAP_LETTER() { return getTokens(ByzParser.CAP_LETTER); }
		public TerminalNode CAP_LETTER(int i) {
			return getToken(ByzParser.CAP_LETTER, i);
		}
		public CapWordContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_capWord; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterCapWord(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitCapWord(this);
		}
	}

	public final CapWordContext capWord() throws RecognitionException {
		CapWordContext _localctx = new CapWordContext(_ctx, getState());
		enterRule(_localctx, 30, RULE_capWord);
		try {
			int _alt;
			enterOuterAlt(_localctx, 1);
			{
			setState(288);
			match(CAP_LETTER);
			setState(290); 
			_errHandler.sync(this);
			_alt = 1;
			do {
				switch (_alt) {
				case 1:
					{
					{
					setState(289);
					match(CAP_LETTER);
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				setState(292); 
				_errHandler.sync(this);
				_alt = getInterpreter().adaptivePredict(_input,36,_ctx);
			} while ( _alt!=2 && _alt!= ATN.INVALID_ALT_NUMBER );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class SyllableContext extends ParserRuleContext {
		public TerminalNode CAP_LETTER() { return getToken(ByzParser.CAP_LETTER, 0); }
		public List<TerminalNode> SMALL_LETTER() { return getTokens(ByzParser.SMALL_LETTER); }
		public TerminalNode SMALL_LETTER(int i) {
			return getToken(ByzParser.SMALL_LETTER, i);
		}
		public SyllableContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_syllable; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterSyllable(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitSyllable(this);
		}
	}

	public final SyllableContext syllable() throws RecognitionException {
		SyllableContext _localctx = new SyllableContext(_ctx, getState());
		enterRule(_localctx, 32, RULE_syllable);
		int _la;
		try {
			int _alt;
			setState(303);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,39,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(295);
				_errHandler.sync(this);
				_la = _input.LA(1);
				if (_la==CAP_LETTER) {
					{
					setState(294);
					match(CAP_LETTER);
					}
				}

				setState(298); 
				_errHandler.sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						setState(297);
						match(SMALL_LETTER);
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					setState(300); 
					_errHandler.sync(this);
					_alt = getInterpreter().adaptivePredict(_input,38,_ctx);
				} while ( _alt!=2 && _alt!= ATN.INVALID_ALT_NUMBER );
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(302);
				match(CAP_LETTER);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class GorgotitaContext extends ParserRuleContext {
		public GorgonContext gorgon() {
			return getRuleContext(GorgonContext.class,0);
		}
		public GorgonParestigmenoAristeraContext gorgonParestigmenoAristera() {
			return getRuleContext(GorgonParestigmenoAristeraContext.class,0);
		}
		public GorgonParestigmenoDexiaContext gorgonParestigmenoDexia() {
			return getRuleContext(GorgonParestigmenoDexiaContext.class,0);
		}
		public DigorgonContext digorgon() {
			return getRuleContext(DigorgonContext.class,0);
		}
		public DigorgonParestigmenoAristeraContext digorgonParestigmenoAristera() {
			return getRuleContext(DigorgonParestigmenoAristeraContext.class,0);
		}
		public DigorgonParestigmenoDexiaContext digorgonParestigmenoDexia() {
			return getRuleContext(DigorgonParestigmenoDexiaContext.class,0);
		}
		public TrigorgonContext trigorgon() {
			return getRuleContext(TrigorgonContext.class,0);
		}
		public TrigorgonParestigmenoAristeraKatoContext trigorgonParestigmenoAristeraKato() {
			return getRuleContext(TrigorgonParestigmenoAristeraKatoContext.class,0);
		}
		public TrigorgonParestigmenoAristeraPanoContext trigorgonParestigmenoAristeraPano() {
			return getRuleContext(TrigorgonParestigmenoAristeraPanoContext.class,0);
		}
		public TrigorgonParestigmenoDexiaContext trigorgonParestigmenoDexia() {
			return getRuleContext(TrigorgonParestigmenoDexiaContext.class,0);
		}
		public TerminalNode ARGON() { return getToken(ByzParser.ARGON, 0); }
		public TerminalNode IMIDIARGON() { return getToken(ByzParser.IMIDIARGON, 0); }
		public TerminalNode DIARGON() { return getToken(ByzParser.DIARGON, 0); }
		public GorgotitaContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_gorgotita; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterGorgotita(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitGorgotita(this);
		}
	}

	public final GorgotitaContext gorgotita() throws RecognitionException {
		GorgotitaContext _localctx = new GorgotitaContext(_ctx, getState());
		enterRule(_localctx, 34, RULE_gorgotita);
		try {
			setState(318);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case GORGON_NEO_ANO:
			case GORGON_NEO_KATO:
			case GORGON_USED_ON_KENTIMATA_ABOVE_OLIGON:
			case GORGON_USED_ON_YPORROI:
			case GORGON_USED_ON_L116_YPORROI:
			case GORGON_ANO_STA_DEXIA:
			case GORGON_KATO:
			case GORGON_KATO_STA_DEXIA:
				enterOuterAlt(_localctx, 1);
				{
				setState(305);
				gorgon();
				}
				break;
			case GORGON_PARESTIGMENON_ARISTERA:
			case GORGON_LEFT_DOT_USED_ON_YPORROI:
			case GORGON_LEFT_DOT_USED_ON_L116_YPORROI:
			case GORGON_PARESTIGMENON_ARISTERA_STA_DEXIA:
				enterOuterAlt(_localctx, 2);
				{
				setState(306);
				gorgonParestigmenoAristera();
				}
				break;
			case GORGON_PARESTIGMENON_DEXIA:
			case GORGON_RIGHT_DOT_USED_ON_YPORROI:
			case GORGON_PARESTIGMENON_DEXIA_STA_DEXIA:
				enterOuterAlt(_localctx, 3);
				{
				setState(307);
				gorgonParestigmenoDexia();
				}
				break;
			case DIGORGON:
			case DIGORGON_USED_ON_KENTIMATA_ABOVE_OLIGON:
			case DIGORGON_USED_ON_YPORROI:
			case DIGORGON_USED_ON_L116_YPORROI:
			case DIGORGON_STA_DEXIA:
				enterOuterAlt(_localctx, 4);
				{
				setState(308);
				digorgon();
				}
				break;
			case DIGORGON_PARESTIGMENON_ARISTERA_KATO:
			case DIGORGON_PARESTIGMENON_ARISTERA_ANO:
			case DIGORGON_LEFT_DOT_USED_ON_YPORROI:
			case DIGORGON_PARESTIGMENON_ARISTERA_KATO_STA_DEXIA:
			case DIGORGON_PARESTIGMENON_ARISTERA_ANO_STA_DEXIA:
				enterOuterAlt(_localctx, 5);
				{
				setState(309);
				digorgonParestigmenoAristera();
				}
				break;
			case DIGORGON_PARESTIGMENON_DEXIA:
			case DIGORGON_PARESTIGMENON_DEXIA_STA_DEXIA:
				enterOuterAlt(_localctx, 6);
				{
				setState(310);
				digorgonParestigmenoDexia();
				}
				break;
			case TRIGORGON:
			case TRIGORGON_USED_ON_YPORROI:
			case TRIGORGON_USED_ON_L116_YPORROI:
			case TRIGORGON_STA_DEXIA:
				enterOuterAlt(_localctx, 7);
				{
				setState(311);
				trigorgon();
				}
				break;
			case TRIGORGON_LEFT_DOT_USED_ON_YPORROI:
			case TRIGORGON_PARESTIGMENON_ARISTERA_KATO:
			case TRIGORGON_PARESTIGMENON_ARISTERA_KATO_STA_DEXIA:
				enterOuterAlt(_localctx, 8);
				{
				setState(312);
				trigorgonParestigmenoAristeraKato();
				}
				break;
			case TRIGORGON_PARESTIGMENON_ARISTERA_ANO:
			case TRIGORGON_PARESTIGMENON_ARISTERA_ANO_STA_DEXIA:
				enterOuterAlt(_localctx, 9);
				{
				setState(313);
				trigorgonParestigmenoAristeraPano();
				}
				break;
			case TRIGORGON_PARESTIGMENON_DEXIA:
			case TRIGORGON_PARESTIGMENON_DEXIA_STA_DEXIA:
				enterOuterAlt(_localctx, 10);
				{
				setState(314);
				trigorgonParestigmenoDexia();
				}
				break;
			case ARGON:
				enterOuterAlt(_localctx, 11);
				{
				setState(315);
				match(ARGON);
				}
				break;
			case IMIDIARGON:
				enterOuterAlt(_localctx, 12);
				{
				setState(316);
				match(IMIDIARGON);
				}
				break;
			case DIARGON:
				enterOuterAlt(_localctx, 13);
				{
				setState(317);
				match(DIARGON);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class GorgonContext extends ParserRuleContext {
		public TerminalNode GORGON_NEO_ANO() { return getToken(ByzParser.GORGON_NEO_ANO, 0); }
		public TerminalNode GORGON_NEO_KATO() { return getToken(ByzParser.GORGON_NEO_KATO, 0); }
		public TerminalNode GORGON_USED_ON_KENTIMATA_ABOVE_OLIGON() { return getToken(ByzParser.GORGON_USED_ON_KENTIMATA_ABOVE_OLIGON, 0); }
		public TerminalNode GORGON_USED_ON_YPORROI() { return getToken(ByzParser.GORGON_USED_ON_YPORROI, 0); }
		public TerminalNode GORGON_USED_ON_L116_YPORROI() { return getToken(ByzParser.GORGON_USED_ON_L116_YPORROI, 0); }
		public TerminalNode GORGON_ANO_STA_DEXIA() { return getToken(ByzParser.GORGON_ANO_STA_DEXIA, 0); }
		public TerminalNode GORGON_KATO() { return getToken(ByzParser.GORGON_KATO, 0); }
		public TerminalNode GORGON_KATO_STA_DEXIA() { return getToken(ByzParser.GORGON_KATO_STA_DEXIA, 0); }
		public GorgonContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_gorgon; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterGorgon(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitGorgon(this);
		}
	}

	public final GorgonContext gorgon() throws RecognitionException {
		GorgonContext _localctx = new GorgonContext(_ctx, getState());
		enterRule(_localctx, 36, RULE_gorgon);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(320);
			_la = _input.LA(1);
			if ( !(((((_la - 205)) & ~0x3f) == 0 && ((1L << (_la - 205)) & ((1L << (GORGON_NEO_ANO - 205)) | (1L << (GORGON_NEO_KATO - 205)) | (1L << (GORGON_USED_ON_KENTIMATA_ABOVE_OLIGON - 205)) | (1L << (GORGON_USED_ON_YPORROI - 205)) | (1L << (GORGON_USED_ON_L116_YPORROI - 205)) | (1L << (GORGON_ANO_STA_DEXIA - 205)) | (1L << (GORGON_KATO - 205)) | (1L << (GORGON_KATO_STA_DEXIA - 205)))) != 0)) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class GorgonParestigmenoAristeraContext extends ParserRuleContext {
		public TerminalNode GORGON_PARESTIGMENON_ARISTERA() { return getToken(ByzParser.GORGON_PARESTIGMENON_ARISTERA, 0); }
		public TerminalNode GORGON_LEFT_DOT_USED_ON_L116_YPORROI() { return getToken(ByzParser.GORGON_LEFT_DOT_USED_ON_L116_YPORROI, 0); }
		public TerminalNode GORGON_PARESTIGMENON_ARISTERA_STA_DEXIA() { return getToken(ByzParser.GORGON_PARESTIGMENON_ARISTERA_STA_DEXIA, 0); }
		public TerminalNode GORGON_LEFT_DOT_USED_ON_YPORROI() { return getToken(ByzParser.GORGON_LEFT_DOT_USED_ON_YPORROI, 0); }
		public GorgonParestigmenoAristeraContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_gorgonParestigmenoAristera; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterGorgonParestigmenoAristera(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitGorgonParestigmenoAristera(this);
		}
	}

	public final GorgonParestigmenoAristeraContext gorgonParestigmenoAristera() throws RecognitionException {
		GorgonParestigmenoAristeraContext _localctx = new GorgonParestigmenoAristeraContext(_ctx, getState());
		enterRule(_localctx, 38, RULE_gorgonParestigmenoAristera);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(322);
			_la = _input.LA(1);
			if ( !(((((_la - 206)) & ~0x3f) == 0 && ((1L << (_la - 206)) & ((1L << (GORGON_PARESTIGMENON_ARISTERA - 206)) | (1L << (GORGON_LEFT_DOT_USED_ON_YPORROI - 206)) | (1L << (GORGON_LEFT_DOT_USED_ON_L116_YPORROI - 206)) | (1L << (GORGON_PARESTIGMENON_ARISTERA_STA_DEXIA - 206)))) != 0)) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class GorgonParestigmenoDexiaContext extends ParserRuleContext {
		public TerminalNode GORGON_PARESTIGMENON_DEXIA() { return getToken(ByzParser.GORGON_PARESTIGMENON_DEXIA, 0); }
		public TerminalNode GORGON_RIGHT_DOT_USED_ON_YPORROI() { return getToken(ByzParser.GORGON_RIGHT_DOT_USED_ON_YPORROI, 0); }
		public TerminalNode GORGON_PARESTIGMENON_DEXIA_STA_DEXIA() { return getToken(ByzParser.GORGON_PARESTIGMENON_DEXIA_STA_DEXIA, 0); }
		public GorgonParestigmenoDexiaContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_gorgonParestigmenoDexia; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterGorgonParestigmenoDexia(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitGorgonParestigmenoDexia(this);
		}
	}

	public final GorgonParestigmenoDexiaContext gorgonParestigmenoDexia() throws RecognitionException {
		GorgonParestigmenoDexiaContext _localctx = new GorgonParestigmenoDexiaContext(_ctx, getState());
		enterRule(_localctx, 40, RULE_gorgonParestigmenoDexia);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(324);
			_la = _input.LA(1);
			if ( !(((((_la - 207)) & ~0x3f) == 0 && ((1L << (_la - 207)) & ((1L << (GORGON_PARESTIGMENON_DEXIA - 207)) | (1L << (GORGON_RIGHT_DOT_USED_ON_YPORROI - 207)) | (1L << (GORGON_PARESTIGMENON_DEXIA_STA_DEXIA - 207)))) != 0)) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class DigorgonContext extends ParserRuleContext {
		public TerminalNode DIGORGON() { return getToken(ByzParser.DIGORGON, 0); }
		public TerminalNode DIGORGON_USED_ON_KENTIMATA_ABOVE_OLIGON() { return getToken(ByzParser.DIGORGON_USED_ON_KENTIMATA_ABOVE_OLIGON, 0); }
		public TerminalNode DIGORGON_USED_ON_YPORROI() { return getToken(ByzParser.DIGORGON_USED_ON_YPORROI, 0); }
		public TerminalNode DIGORGON_USED_ON_L116_YPORROI() { return getToken(ByzParser.DIGORGON_USED_ON_L116_YPORROI, 0); }
		public TerminalNode DIGORGON_STA_DEXIA() { return getToken(ByzParser.DIGORGON_STA_DEXIA, 0); }
		public DigorgonContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_digorgon; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterDigorgon(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitDigorgon(this);
		}
	}

	public final DigorgonContext digorgon() throws RecognitionException {
		DigorgonContext _localctx = new DigorgonContext(_ctx, getState());
		enterRule(_localctx, 42, RULE_digorgon);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(326);
			_la = _input.LA(1);
			if ( !(((((_la - 208)) & ~0x3f) == 0 && ((1L << (_la - 208)) & ((1L << (DIGORGON - 208)) | (1L << (DIGORGON_USED_ON_KENTIMATA_ABOVE_OLIGON - 208)) | (1L << (DIGORGON_USED_ON_YPORROI - 208)) | (1L << (DIGORGON_USED_ON_L116_YPORROI - 208)) | (1L << (DIGORGON_STA_DEXIA - 208)))) != 0)) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class DigorgonParestigmenoAristeraContext extends ParserRuleContext {
		public TerminalNode DIGORGON_PARESTIGMENON_ARISTERA_KATO() { return getToken(ByzParser.DIGORGON_PARESTIGMENON_ARISTERA_KATO, 0); }
		public TerminalNode DIGORGON_PARESTIGMENON_ARISTERA_ANO() { return getToken(ByzParser.DIGORGON_PARESTIGMENON_ARISTERA_ANO, 0); }
		public TerminalNode DIGORGON_LEFT_DOT_USED_ON_YPORROI() { return getToken(ByzParser.DIGORGON_LEFT_DOT_USED_ON_YPORROI, 0); }
		public TerminalNode DIGORGON_PARESTIGMENON_ARISTERA_KATO_STA_DEXIA() { return getToken(ByzParser.DIGORGON_PARESTIGMENON_ARISTERA_KATO_STA_DEXIA, 0); }
		public TerminalNode DIGORGON_PARESTIGMENON_ARISTERA_ANO_STA_DEXIA() { return getToken(ByzParser.DIGORGON_PARESTIGMENON_ARISTERA_ANO_STA_DEXIA, 0); }
		public DigorgonParestigmenoAristeraContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_digorgonParestigmenoAristera; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterDigorgonParestigmenoAristera(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitDigorgonParestigmenoAristera(this);
		}
	}

	public final DigorgonParestigmenoAristeraContext digorgonParestigmenoAristera() throws RecognitionException {
		DigorgonParestigmenoAristeraContext _localctx = new DigorgonParestigmenoAristeraContext(_ctx, getState());
		enterRule(_localctx, 44, RULE_digorgonParestigmenoAristera);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(328);
			_la = _input.LA(1);
			if ( !(((((_la - 209)) & ~0x3f) == 0 && ((1L << (_la - 209)) & ((1L << (DIGORGON_PARESTIGMENON_ARISTERA_KATO - 209)) | (1L << (DIGORGON_PARESTIGMENON_ARISTERA_ANO - 209)) | (1L << (DIGORGON_LEFT_DOT_USED_ON_YPORROI - 209)) | (1L << (DIGORGON_PARESTIGMENON_ARISTERA_KATO_STA_DEXIA - 209)) | (1L << (DIGORGON_PARESTIGMENON_ARISTERA_ANO_STA_DEXIA - 209)))) != 0)) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class DigorgonParestigmenoDexiaContext extends ParserRuleContext {
		public TerminalNode DIGORGON_PARESTIGMENON_DEXIA() { return getToken(ByzParser.DIGORGON_PARESTIGMENON_DEXIA, 0); }
		public TerminalNode DIGORGON_PARESTIGMENON_DEXIA_STA_DEXIA() { return getToken(ByzParser.DIGORGON_PARESTIGMENON_DEXIA_STA_DEXIA, 0); }
		public DigorgonParestigmenoDexiaContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_digorgonParestigmenoDexia; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterDigorgonParestigmenoDexia(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitDigorgonParestigmenoDexia(this);
		}
	}

	public final DigorgonParestigmenoDexiaContext digorgonParestigmenoDexia() throws RecognitionException {
		DigorgonParestigmenoDexiaContext _localctx = new DigorgonParestigmenoDexiaContext(_ctx, getState());
		enterRule(_localctx, 46, RULE_digorgonParestigmenoDexia);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(330);
			_la = _input.LA(1);
			if ( !(_la==DIGORGON_PARESTIGMENON_DEXIA || _la==DIGORGON_PARESTIGMENON_DEXIA_STA_DEXIA) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class TrigorgonContext extends ParserRuleContext {
		public TerminalNode TRIGORGON() { return getToken(ByzParser.TRIGORGON, 0); }
		public TerminalNode TRIGORGON_USED_ON_YPORROI() { return getToken(ByzParser.TRIGORGON_USED_ON_YPORROI, 0); }
		public TerminalNode TRIGORGON_USED_ON_L116_YPORROI() { return getToken(ByzParser.TRIGORGON_USED_ON_L116_YPORROI, 0); }
		public TerminalNode TRIGORGON_STA_DEXIA() { return getToken(ByzParser.TRIGORGON_STA_DEXIA, 0); }
		public TrigorgonContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_trigorgon; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterTrigorgon(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitTrigorgon(this);
		}
	}

	public final TrigorgonContext trigorgon() throws RecognitionException {
		TrigorgonContext _localctx = new TrigorgonContext(_ctx, getState());
		enterRule(_localctx, 48, RULE_trigorgon);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(332);
			_la = _input.LA(1);
			if ( !(((((_la - 212)) & ~0x3f) == 0 && ((1L << (_la - 212)) & ((1L << (TRIGORGON - 212)) | (1L << (TRIGORGON_USED_ON_YPORROI - 212)) | (1L << (TRIGORGON_USED_ON_L116_YPORROI - 212)) | (1L << (TRIGORGON_STA_DEXIA - 212)))) != 0)) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class TrigorgonParestigmenoAristeraKatoContext extends ParserRuleContext {
		public TerminalNode TRIGORGON_LEFT_DOT_USED_ON_YPORROI() { return getToken(ByzParser.TRIGORGON_LEFT_DOT_USED_ON_YPORROI, 0); }
		public TerminalNode TRIGORGON_PARESTIGMENON_ARISTERA_KATO() { return getToken(ByzParser.TRIGORGON_PARESTIGMENON_ARISTERA_KATO, 0); }
		public TerminalNode TRIGORGON_PARESTIGMENON_ARISTERA_KATO_STA_DEXIA() { return getToken(ByzParser.TRIGORGON_PARESTIGMENON_ARISTERA_KATO_STA_DEXIA, 0); }
		public TrigorgonParestigmenoAristeraKatoContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_trigorgonParestigmenoAristeraKato; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterTrigorgonParestigmenoAristeraKato(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitTrigorgonParestigmenoAristeraKato(this);
		}
	}

	public final TrigorgonParestigmenoAristeraKatoContext trigorgonParestigmenoAristeraKato() throws RecognitionException {
		TrigorgonParestigmenoAristeraKatoContext _localctx = new TrigorgonParestigmenoAristeraKatoContext(_ctx, getState());
		enterRule(_localctx, 50, RULE_trigorgonParestigmenoAristeraKato);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(334);
			_la = _input.LA(1);
			if ( !(((((_la - 225)) & ~0x3f) == 0 && ((1L << (_la - 225)) & ((1L << (TRIGORGON_LEFT_DOT_USED_ON_YPORROI - 225)) | (1L << (TRIGORGON_PARESTIGMENON_ARISTERA_KATO - 225)) | (1L << (TRIGORGON_PARESTIGMENON_ARISTERA_KATO_STA_DEXIA - 225)))) != 0)) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class TrigorgonParestigmenoAristeraPanoContext extends ParserRuleContext {
		public TerminalNode TRIGORGON_PARESTIGMENON_ARISTERA_ANO() { return getToken(ByzParser.TRIGORGON_PARESTIGMENON_ARISTERA_ANO, 0); }
		public TerminalNode TRIGORGON_PARESTIGMENON_ARISTERA_ANO_STA_DEXIA() { return getToken(ByzParser.TRIGORGON_PARESTIGMENON_ARISTERA_ANO_STA_DEXIA, 0); }
		public TrigorgonParestigmenoAristeraPanoContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_trigorgonParestigmenoAristeraPano; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterTrigorgonParestigmenoAristeraPano(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitTrigorgonParestigmenoAristeraPano(this);
		}
	}

	public final TrigorgonParestigmenoAristeraPanoContext trigorgonParestigmenoAristeraPano() throws RecognitionException {
		TrigorgonParestigmenoAristeraPanoContext _localctx = new TrigorgonParestigmenoAristeraPanoContext(_ctx, getState());
		enterRule(_localctx, 52, RULE_trigorgonParestigmenoAristeraPano);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(336);
			_la = _input.LA(1);
			if ( !(_la==TRIGORGON_PARESTIGMENON_ARISTERA_ANO || _la==TRIGORGON_PARESTIGMENON_ARISTERA_ANO_STA_DEXIA) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class TrigorgonParestigmenoDexiaContext extends ParserRuleContext {
		public TerminalNode TRIGORGON_PARESTIGMENON_DEXIA() { return getToken(ByzParser.TRIGORGON_PARESTIGMENON_DEXIA, 0); }
		public TerminalNode TRIGORGON_PARESTIGMENON_DEXIA_STA_DEXIA() { return getToken(ByzParser.TRIGORGON_PARESTIGMENON_DEXIA_STA_DEXIA, 0); }
		public TrigorgonParestigmenoDexiaContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_trigorgonParestigmenoDexia; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterTrigorgonParestigmenoDexia(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitTrigorgonParestigmenoDexia(this);
		}
	}

	public final TrigorgonParestigmenoDexiaContext trigorgonParestigmenoDexia() throws RecognitionException {
		TrigorgonParestigmenoDexiaContext _localctx = new TrigorgonParestigmenoDexiaContext(_ctx, getState());
		enterRule(_localctx, 54, RULE_trigorgonParestigmenoDexia);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(338);
			_la = _input.LA(1);
			if ( !(_la==TRIGORGON_PARESTIGMENON_DEXIA || _la==TRIGORGON_PARESTIGMENON_DEXIA_STA_DEXIA) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ArgiaContext extends ParserRuleContext {
		public KlasmaContext klasma() {
			return getRuleContext(KlasmaContext.class,0);
		}
		public ApliContext apli() {
			return getRuleContext(ApliContext.class,0);
		}
		public DipliContext dipli() {
			return getRuleContext(DipliContext.class,0);
		}
		public TripliContext tripli() {
			return getRuleContext(TripliContext.class,0);
		}
		public ArgiaContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_argia; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterArgia(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitArgia(this);
		}
	}

	public final ArgiaContext argia() throws RecognitionException {
		ArgiaContext _localctx = new ArgiaContext(_ctx, getState());
		enterRule(_localctx, 56, RULE_argia);
		try {
			setState(344);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case KLASMA_ANO:
			case KLASMA_KATO:
			case KLASMA_ANO_STA_DEXIA:
			case KLASMA_ANO_STA_ARISTERA:
				enterOuterAlt(_localctx, 1);
				{
				setState(340);
				klasma();
				}
				break;
			case APLI:
			case APLI_STA_DEXIA:
				enterOuterAlt(_localctx, 2);
				{
				setState(341);
				apli();
				}
				break;
			case DIPLI:
			case DIPLI_STA_DEXIA:
				enterOuterAlt(_localctx, 3);
				{
				setState(342);
				dipli();
				}
				break;
			case TRIPLI:
			case TRIPLI_STA_DEXIA:
				enterOuterAlt(_localctx, 4);
				{
				setState(343);
				tripli();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class KlasmaContext extends ParserRuleContext {
		public TerminalNode KLASMA_ANO() { return getToken(ByzParser.KLASMA_ANO, 0); }
		public TerminalNode KLASMA_KATO() { return getToken(ByzParser.KLASMA_KATO, 0); }
		public TerminalNode KLASMA_ANO_STA_DEXIA() { return getToken(ByzParser.KLASMA_ANO_STA_DEXIA, 0); }
		public TerminalNode KLASMA_ANO_STA_ARISTERA() { return getToken(ByzParser.KLASMA_ANO_STA_ARISTERA, 0); }
		public KlasmaContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_klasma; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterKlasma(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitKlasma(this);
		}
	}

	public final KlasmaContext klasma() throws RecognitionException {
		KlasmaContext _localctx = new KlasmaContext(_ctx, getState());
		enterRule(_localctx, 58, RULE_klasma);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(346);
			_la = _input.LA(1);
			if ( !(((((_la - 246)) & ~0x3f) == 0 && ((1L << (_la - 246)) & ((1L << (KLASMA_ANO - 246)) | (1L << (KLASMA_KATO - 246)) | (1L << (KLASMA_ANO_STA_DEXIA - 246)) | (1L << (KLASMA_ANO_STA_ARISTERA - 246)))) != 0)) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ApliContext extends ParserRuleContext {
		public TerminalNode APLI() { return getToken(ByzParser.APLI, 0); }
		public TerminalNode APLI_STA_DEXIA() { return getToken(ByzParser.APLI_STA_DEXIA, 0); }
		public ApliContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_apli; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterApli(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitApli(this);
		}
	}

	public final ApliContext apli() throws RecognitionException {
		ApliContext _localctx = new ApliContext(_ctx, getState());
		enterRule(_localctx, 60, RULE_apli);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(348);
			_la = _input.LA(1);
			if ( !(_la==APLI || _la==APLI_STA_DEXIA) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class DipliContext extends ParserRuleContext {
		public TerminalNode DIPLI() { return getToken(ByzParser.DIPLI, 0); }
		public TerminalNode DIPLI_STA_DEXIA() { return getToken(ByzParser.DIPLI_STA_DEXIA, 0); }
		public DipliContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_dipli; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterDipli(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitDipli(this);
		}
	}

	public final DipliContext dipli() throws RecognitionException {
		DipliContext _localctx = new DipliContext(_ctx, getState());
		enterRule(_localctx, 62, RULE_dipli);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(350);
			_la = _input.LA(1);
			if ( !(_la==DIPLI || _la==DIPLI_STA_DEXIA) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class TripliContext extends ParserRuleContext {
		public TerminalNode TRIPLI() { return getToken(ByzParser.TRIPLI, 0); }
		public TerminalNode TRIPLI_STA_DEXIA() { return getToken(ByzParser.TRIPLI_STA_DEXIA, 0); }
		public TripliContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_tripli; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterTripli(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitTripli(this);
		}
	}

	public final TripliContext tripli() throws RecognitionException {
		TripliContext _localctx = new TripliContext(_ctx, getState());
		enterRule(_localctx, 64, RULE_tripli);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(352);
			_la = _input.LA(1);
			if ( !(_la==TRIPLI || _la==TRIPLI_STA_DEXIA) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class FthoraContext extends ParserRuleContext {
		public YfesiContext yfesi() {
			return getRuleContext(YfesiContext.class,0);
		}
		public DiesiContext diesi() {
			return getRuleContext(DiesiContext.class,0);
		}
		public FthoraDiatonikiContext fthoraDiatoniki() {
			return getRuleContext(FthoraDiatonikiContext.class,0);
		}
		public FthoraChromatikiContext fthoraChromatiki() {
			return getRuleContext(FthoraChromatikiContext.class,0);
		}
		public GenikiContext geniki() {
			return getRuleContext(GenikiContext.class,0);
		}
		public ChroaContext chroa() {
			return getRuleContext(ChroaContext.class,0);
		}
		public FthoraContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_fthora; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterFthora(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitFthora(this);
		}
	}

	public final FthoraContext fthora() throws RecognitionException {
		FthoraContext _localctx = new FthoraContext(_ctx, getState());
		enterRule(_localctx, 66, RULE_fthora);
		try {
			setState(360);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case YFESIS_APLI_DYO_DODEKATA:
			case YFESIS_MONOGRAMMOS_TESSERA_DODEKATA:
			case YFESIS_DIGRAMMOS_EX_DODEKATA:
			case YFESIS_TRIGRAMMOS_OKTO_DODEKATA:
			case YFESIS_APLI_DYO_DODEKATA_DEXIA:
			case YFESIS_MONOGRAMMOS_TESSERA_DODEKATA_DEXIA:
			case YFESIS_DIGRAMMOS_EX_DODEKATA_DEXIA:
				enterOuterAlt(_localctx, 1);
				{
				setState(354);
				yfesi();
				}
				break;
			case DIESIS_APLI_DYO_DODEKATA:
			case DIESIS_MONOGRAMMOS_TESSERA_DODEKATA:
			case DIESIS_DIGRAMMOS_EX_DODEKATA:
			case DIESIS_TRIGRAMMOS_OKTO_DODEKATA:
			case DIESIS_APLI_DYO_DODEKATA_DEXIA:
			case DIESIS_MONOGRAMMOS_TESSERA_DODEKATA_DEXIA:
			case DIESIS_DIGRAMMOS_EX_DODEKATA_DEXIA:
				enterOuterAlt(_localctx, 2);
				{
				setState(355);
				diesi();
				}
				break;
			case ENARXIS_KAI_FTHORA_VOU:
			case FTHORA_DIATONIKI_PA:
			case FTHORA_DIATONIKI_NANA:
			case FTHORA_DIATONIKI_DI:
			case FTHORA_DIATONIKI_KE:
			case FTHORA_DIATONIKI_ZO:
			case FTHORA_DIATONIKI_NI_KATO:
			case FTHORA_DIATONIKI_NI_ANO:
				enterOuterAlt(_localctx, 3);
				{
				setState(356);
				fthoraDiatoniki();
				}
				break;
			case FTHORA_MALAKON_CHROMA_DIFONIAS:
			case FTHORA_MALAKON_CHROMA_MONOFONIAS:
			case FHTORA_SKLIRON_CHROMA_VASIS:
			case FTHORA_NENANO:
				enterOuterAlt(_localctx, 4);
				{
				setState(357);
				fthoraChromatiki();
				}
				break;
			case GENIKI_DIESIS:
			case GENIKI_YFESIS:
				enterOuterAlt(_localctx, 5);
				{
				setState(358);
				geniki();
				}
				break;
			case FTHORA_NAOS_ICHOS:
			case CHROA_ZYGOS:
			case CHROA_KLITON:
			case CHROA_SPATHI:
			case FTHORA_I_YFESIS_TETARTIMORION:
				enterOuterAlt(_localctx, 6);
				{
				setState(359);
				chroa();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class YfesiContext extends ParserRuleContext {
		public YfesiApliContext yfesiApli() {
			return getRuleContext(YfesiApliContext.class,0);
		}
		public YfesiMonogrammosContext yfesiMonogrammos() {
			return getRuleContext(YfesiMonogrammosContext.class,0);
		}
		public YfesiDigrammosContext yfesiDigrammos() {
			return getRuleContext(YfesiDigrammosContext.class,0);
		}
		public TerminalNode YFESIS_TRIGRAMMOS_OKTO_DODEKATA() { return getToken(ByzParser.YFESIS_TRIGRAMMOS_OKTO_DODEKATA, 0); }
		public YfesiContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_yfesi; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterYfesi(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitYfesi(this);
		}
	}

	public final YfesiContext yfesi() throws RecognitionException {
		YfesiContext _localctx = new YfesiContext(_ctx, getState());
		enterRule(_localctx, 68, RULE_yfesi);
		try {
			setState(366);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case YFESIS_APLI_DYO_DODEKATA:
			case YFESIS_APLI_DYO_DODEKATA_DEXIA:
				enterOuterAlt(_localctx, 1);
				{
				setState(362);
				yfesiApli();
				}
				break;
			case YFESIS_MONOGRAMMOS_TESSERA_DODEKATA:
			case YFESIS_MONOGRAMMOS_TESSERA_DODEKATA_DEXIA:
				enterOuterAlt(_localctx, 2);
				{
				setState(363);
				yfesiMonogrammos();
				}
				break;
			case YFESIS_DIGRAMMOS_EX_DODEKATA:
			case YFESIS_DIGRAMMOS_EX_DODEKATA_DEXIA:
				enterOuterAlt(_localctx, 3);
				{
				setState(364);
				yfesiDigrammos();
				}
				break;
			case YFESIS_TRIGRAMMOS_OKTO_DODEKATA:
				enterOuterAlt(_localctx, 4);
				{
				setState(365);
				match(YFESIS_TRIGRAMMOS_OKTO_DODEKATA);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class YfesiApliContext extends ParserRuleContext {
		public TerminalNode YFESIS_APLI_DYO_DODEKATA() { return getToken(ByzParser.YFESIS_APLI_DYO_DODEKATA, 0); }
		public TerminalNode YFESIS_APLI_DYO_DODEKATA_DEXIA() { return getToken(ByzParser.YFESIS_APLI_DYO_DODEKATA_DEXIA, 0); }
		public YfesiApliContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_yfesiApli; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterYfesiApli(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitYfesiApli(this);
		}
	}

	public final YfesiApliContext yfesiApli() throws RecognitionException {
		YfesiApliContext _localctx = new YfesiApliContext(_ctx, getState());
		enterRule(_localctx, 70, RULE_yfesiApli);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(368);
			_la = _input.LA(1);
			if ( !(_la==YFESIS_APLI_DYO_DODEKATA || _la==YFESIS_APLI_DYO_DODEKATA_DEXIA) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class YfesiMonogrammosContext extends ParserRuleContext {
		public TerminalNode YFESIS_MONOGRAMMOS_TESSERA_DODEKATA() { return getToken(ByzParser.YFESIS_MONOGRAMMOS_TESSERA_DODEKATA, 0); }
		public TerminalNode YFESIS_MONOGRAMMOS_TESSERA_DODEKATA_DEXIA() { return getToken(ByzParser.YFESIS_MONOGRAMMOS_TESSERA_DODEKATA_DEXIA, 0); }
		public YfesiMonogrammosContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_yfesiMonogrammos; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterYfesiMonogrammos(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitYfesiMonogrammos(this);
		}
	}

	public final YfesiMonogrammosContext yfesiMonogrammos() throws RecognitionException {
		YfesiMonogrammosContext _localctx = new YfesiMonogrammosContext(_ctx, getState());
		enterRule(_localctx, 72, RULE_yfesiMonogrammos);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(370);
			_la = _input.LA(1);
			if ( !(_la==YFESIS_MONOGRAMMOS_TESSERA_DODEKATA || _la==YFESIS_MONOGRAMMOS_TESSERA_DODEKATA_DEXIA) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class YfesiDigrammosContext extends ParserRuleContext {
		public TerminalNode YFESIS_DIGRAMMOS_EX_DODEKATA() { return getToken(ByzParser.YFESIS_DIGRAMMOS_EX_DODEKATA, 0); }
		public TerminalNode YFESIS_DIGRAMMOS_EX_DODEKATA_DEXIA() { return getToken(ByzParser.YFESIS_DIGRAMMOS_EX_DODEKATA_DEXIA, 0); }
		public YfesiDigrammosContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_yfesiDigrammos; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterYfesiDigrammos(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitYfesiDigrammos(this);
		}
	}

	public final YfesiDigrammosContext yfesiDigrammos() throws RecognitionException {
		YfesiDigrammosContext _localctx = new YfesiDigrammosContext(_ctx, getState());
		enterRule(_localctx, 74, RULE_yfesiDigrammos);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(372);
			_la = _input.LA(1);
			if ( !(_la==YFESIS_DIGRAMMOS_EX_DODEKATA || _la==YFESIS_DIGRAMMOS_EX_DODEKATA_DEXIA) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class DiesiContext extends ParserRuleContext {
		public DiesiApliContext diesiApli() {
			return getRuleContext(DiesiApliContext.class,0);
		}
		public DiesiMonogrammosContext diesiMonogrammos() {
			return getRuleContext(DiesiMonogrammosContext.class,0);
		}
		public DiesiDigrammosContext diesiDigrammos() {
			return getRuleContext(DiesiDigrammosContext.class,0);
		}
		public TerminalNode DIESIS_TRIGRAMMOS_OKTO_DODEKATA() { return getToken(ByzParser.DIESIS_TRIGRAMMOS_OKTO_DODEKATA, 0); }
		public DiesiContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_diesi; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterDiesi(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitDiesi(this);
		}
	}

	public final DiesiContext diesi() throws RecognitionException {
		DiesiContext _localctx = new DiesiContext(_ctx, getState());
		enterRule(_localctx, 76, RULE_diesi);
		try {
			setState(378);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case DIESIS_APLI_DYO_DODEKATA:
			case DIESIS_APLI_DYO_DODEKATA_DEXIA:
				enterOuterAlt(_localctx, 1);
				{
				setState(374);
				diesiApli();
				}
				break;
			case DIESIS_MONOGRAMMOS_TESSERA_DODEKATA:
			case DIESIS_MONOGRAMMOS_TESSERA_DODEKATA_DEXIA:
				enterOuterAlt(_localctx, 2);
				{
				setState(375);
				diesiMonogrammos();
				}
				break;
			case DIESIS_DIGRAMMOS_EX_DODEKATA:
			case DIESIS_DIGRAMMOS_EX_DODEKATA_DEXIA:
				enterOuterAlt(_localctx, 3);
				{
				setState(376);
				diesiDigrammos();
				}
				break;
			case DIESIS_TRIGRAMMOS_OKTO_DODEKATA:
				enterOuterAlt(_localctx, 4);
				{
				setState(377);
				match(DIESIS_TRIGRAMMOS_OKTO_DODEKATA);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class DiesiApliContext extends ParserRuleContext {
		public TerminalNode DIESIS_APLI_DYO_DODEKATA() { return getToken(ByzParser.DIESIS_APLI_DYO_DODEKATA, 0); }
		public TerminalNode DIESIS_APLI_DYO_DODEKATA_DEXIA() { return getToken(ByzParser.DIESIS_APLI_DYO_DODEKATA_DEXIA, 0); }
		public DiesiApliContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_diesiApli; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterDiesiApli(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitDiesiApli(this);
		}
	}

	public final DiesiApliContext diesiApli() throws RecognitionException {
		DiesiApliContext _localctx = new DiesiApliContext(_ctx, getState());
		enterRule(_localctx, 78, RULE_diesiApli);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(380);
			_la = _input.LA(1);
			if ( !(_la==DIESIS_APLI_DYO_DODEKATA || _la==DIESIS_APLI_DYO_DODEKATA_DEXIA) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class DiesiMonogrammosContext extends ParserRuleContext {
		public TerminalNode DIESIS_MONOGRAMMOS_TESSERA_DODEKATA() { return getToken(ByzParser.DIESIS_MONOGRAMMOS_TESSERA_DODEKATA, 0); }
		public TerminalNode DIESIS_MONOGRAMMOS_TESSERA_DODEKATA_DEXIA() { return getToken(ByzParser.DIESIS_MONOGRAMMOS_TESSERA_DODEKATA_DEXIA, 0); }
		public DiesiMonogrammosContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_diesiMonogrammos; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterDiesiMonogrammos(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitDiesiMonogrammos(this);
		}
	}

	public final DiesiMonogrammosContext diesiMonogrammos() throws RecognitionException {
		DiesiMonogrammosContext _localctx = new DiesiMonogrammosContext(_ctx, getState());
		enterRule(_localctx, 80, RULE_diesiMonogrammos);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(382);
			_la = _input.LA(1);
			if ( !(_la==DIESIS_MONOGRAMMOS_TESSERA_DODEKATA || _la==DIESIS_MONOGRAMMOS_TESSERA_DODEKATA_DEXIA) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class DiesiDigrammosContext extends ParserRuleContext {
		public TerminalNode DIESIS_DIGRAMMOS_EX_DODEKATA() { return getToken(ByzParser.DIESIS_DIGRAMMOS_EX_DODEKATA, 0); }
		public TerminalNode DIESIS_DIGRAMMOS_EX_DODEKATA_DEXIA() { return getToken(ByzParser.DIESIS_DIGRAMMOS_EX_DODEKATA_DEXIA, 0); }
		public DiesiDigrammosContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_diesiDigrammos; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterDiesiDigrammos(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitDiesiDigrammos(this);
		}
	}

	public final DiesiDigrammosContext diesiDigrammos() throws RecognitionException {
		DiesiDigrammosContext _localctx = new DiesiDigrammosContext(_ctx, getState());
		enterRule(_localctx, 82, RULE_diesiDigrammos);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(384);
			_la = _input.LA(1);
			if ( !(_la==DIESIS_DIGRAMMOS_EX_DODEKATA || _la==DIESIS_DIGRAMMOS_EX_DODEKATA_DEXIA) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class FthoraDiatonikiContext extends ParserRuleContext {
		public TerminalNode FTHORA_DIATONIKI_NI_KATO() { return getToken(ByzParser.FTHORA_DIATONIKI_NI_KATO, 0); }
		public TerminalNode FTHORA_DIATONIKI_PA() { return getToken(ByzParser.FTHORA_DIATONIKI_PA, 0); }
		public TerminalNode FTHORA_DIATONIKI_DI() { return getToken(ByzParser.FTHORA_DIATONIKI_DI, 0); }
		public TerminalNode FTHORA_DIATONIKI_KE() { return getToken(ByzParser.FTHORA_DIATONIKI_KE, 0); }
		public TerminalNode FTHORA_DIATONIKI_NI_ANO() { return getToken(ByzParser.FTHORA_DIATONIKI_NI_ANO, 0); }
		public TerminalNode ENARXIS_KAI_FTHORA_VOU() { return getToken(ByzParser.ENARXIS_KAI_FTHORA_VOU, 0); }
		public TerminalNode FTHORA_DIATONIKI_ZO() { return getToken(ByzParser.FTHORA_DIATONIKI_ZO, 0); }
		public TerminalNode FTHORA_DIATONIKI_NANA() { return getToken(ByzParser.FTHORA_DIATONIKI_NANA, 0); }
		public FthoraDiatonikiContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_fthoraDiatoniki; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterFthoraDiatoniki(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitFthoraDiatoniki(this);
		}
	}

	public final FthoraDiatonikiContext fthoraDiatoniki() throws RecognitionException {
		FthoraDiatonikiContext _localctx = new FthoraDiatonikiContext(_ctx, getState());
		enterRule(_localctx, 84, RULE_fthoraDiatoniki);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(386);
			_la = _input.LA(1);
			if ( !(((((_la - 269)) & ~0x3f) == 0 && ((1L << (_la - 269)) & ((1L << (ENARXIS_KAI_FTHORA_VOU - 269)) | (1L << (FTHORA_DIATONIKI_PA - 269)) | (1L << (FTHORA_DIATONIKI_NANA - 269)) | (1L << (FTHORA_DIATONIKI_DI - 269)) | (1L << (FTHORA_DIATONIKI_KE - 269)) | (1L << (FTHORA_DIATONIKI_ZO - 269)) | (1L << (FTHORA_DIATONIKI_NI_KATO - 269)) | (1L << (FTHORA_DIATONIKI_NI_ANO - 269)))) != 0)) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class FthoraChromatikiContext extends ParserRuleContext {
		public TerminalNode FHTORA_SKLIRON_CHROMA_VASIS() { return getToken(ByzParser.FHTORA_SKLIRON_CHROMA_VASIS, 0); }
		public TerminalNode FTHORA_MALAKON_CHROMA_DIFONIAS() { return getToken(ByzParser.FTHORA_MALAKON_CHROMA_DIFONIAS, 0); }
		public TerminalNode FTHORA_MALAKON_CHROMA_MONOFONIAS() { return getToken(ByzParser.FTHORA_MALAKON_CHROMA_MONOFONIAS, 0); }
		public TerminalNode FTHORA_NENANO() { return getToken(ByzParser.FTHORA_NENANO, 0); }
		public FthoraChromatikiContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_fthoraChromatiki; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterFthoraChromatiki(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitFthoraChromatiki(this);
		}
	}

	public final FthoraChromatikiContext fthoraChromatiki() throws RecognitionException {
		FthoraChromatikiContext _localctx = new FthoraChromatikiContext(_ctx, getState());
		enterRule(_localctx, 86, RULE_fthoraChromatiki);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(388);
			_la = _input.LA(1);
			if ( !(((((_la - 282)) & ~0x3f) == 0 && ((1L << (_la - 282)) & ((1L << (FTHORA_MALAKON_CHROMA_DIFONIAS - 282)) | (1L << (FTHORA_MALAKON_CHROMA_MONOFONIAS - 282)) | (1L << (FHTORA_SKLIRON_CHROMA_VASIS - 282)) | (1L << (FTHORA_NENANO - 282)))) != 0)) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class GenikiContext extends ParserRuleContext {
		public TerminalNode GENIKI_YFESIS() { return getToken(ByzParser.GENIKI_YFESIS, 0); }
		public TerminalNode GENIKI_DIESIS() { return getToken(ByzParser.GENIKI_DIESIS, 0); }
		public GenikiContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_geniki; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterGeniki(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitGeniki(this);
		}
	}

	public final GenikiContext geniki() throws RecognitionException {
		GenikiContext _localctx = new GenikiContext(_ctx, getState());
		enterRule(_localctx, 88, RULE_geniki);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(390);
			_la = _input.LA(1);
			if ( !(_la==GENIKI_DIESIS || _la==GENIKI_YFESIS) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ChroaContext extends ParserRuleContext {
		public TerminalNode CHROA_ZYGOS() { return getToken(ByzParser.CHROA_ZYGOS, 0); }
		public TerminalNode FTHORA_I_YFESIS_TETARTIMORION() { return getToken(ByzParser.FTHORA_I_YFESIS_TETARTIMORION, 0); }
		public TerminalNode CHROA_KLITON() { return getToken(ByzParser.CHROA_KLITON, 0); }
		public TerminalNode CHROA_SPATHI() { return getToken(ByzParser.CHROA_SPATHI, 0); }
		public TerminalNode FTHORA_NAOS_ICHOS() { return getToken(ByzParser.FTHORA_NAOS_ICHOS, 0); }
		public ChroaContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_chroa; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterChroa(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitChroa(this);
		}
	}

	public final ChroaContext chroa() throws RecognitionException {
		ChroaContext _localctx = new ChroaContext(_ctx, getState());
		enterRule(_localctx, 90, RULE_chroa);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(392);
			_la = _input.LA(1);
			if ( !(((((_la - 275)) & ~0x3f) == 0 && ((1L << (_la - 275)) & ((1L << (FTHORA_NAOS_ICHOS - 275)) | (1L << (CHROA_ZYGOS - 275)) | (1L << (CHROA_KLITON - 275)) | (1L << (CHROA_SPATHI - 275)) | (1L << (FTHORA_I_YFESIS_TETARTIMORION - 275)))) != 0)) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class QCharContext extends ParserRuleContext {
		public KentimaToTheRightOfOligonContext kentimaToTheRightOfOligon() {
			return getRuleContext(KentimaToTheRightOfOligonContext.class,0);
		}
		public TerminalNode OLIGON_NEO() { return getToken(ByzParser.OLIGON_NEO, 0); }
		public TerminalNode PETASTI() { return getToken(ByzParser.PETASTI, 0); }
		public TerminalNode KENTIMATA_NEO_MESO() { return getToken(ByzParser.KENTIMATA_NEO_MESO, 0); }
		public TerminalNode KENTIMA_NEO_MESO() { return getToken(ByzParser.KENTIMA_NEO_MESO, 0); }
		public TerminalNode OLIGON_OVER_PETASTI() { return getToken(ByzParser.OLIGON_OVER_PETASTI, 0); }
		public TerminalNode KENTIMA_UNDER_OLIGON() { return getToken(ByzParser.KENTIMA_UNDER_OLIGON, 0); }
		public TerminalNode OLIGON_ABOVE_KENTIMATA() { return getToken(ByzParser.OLIGON_ABOVE_KENTIMATA, 0); }
		public TerminalNode KENTIMATA_ABOVE_OLIGON() { return getToken(ByzParser.KENTIMATA_ABOVE_OLIGON, 0); }
		public TerminalNode ANTIKENOMA_UNDER_KENTIMA_UNDER_OLIGON() { return getToken(ByzParser.ANTIKENOMA_UNDER_KENTIMA_UNDER_OLIGON, 0); }
		public TerminalNode KENTIMA_OVER_OLIGON() { return getToken(ByzParser.KENTIMA_OVER_OLIGON, 0); }
		public TerminalNode KENTIMA_OVER_PETASTI() { return getToken(ByzParser.KENTIMA_OVER_PETASTI, 0); }
		public TerminalNode YPSILI_AT_RIGHT_END_OF_OLIGON() { return getToken(ByzParser.YPSILI_AT_RIGHT_END_OF_OLIGON, 0); }
		public TerminalNode YPSILI_AT_RIGHT_END_OF_PETASTI() { return getToken(ByzParser.YPSILI_AT_RIGHT_END_OF_PETASTI, 0); }
		public TerminalNode YPSILI_AT_LEFT_END_OF_OLIGON() { return getToken(ByzParser.YPSILI_AT_LEFT_END_OF_OLIGON, 0); }
		public TerminalNode YPSILI_AT_LEFT_END_OF_PETASTI() { return getToken(ByzParser.YPSILI_AT_LEFT_END_OF_PETASTI, 0); }
		public TerminalNode YPSILI_AT_RIGHT_END_OF_OLIGON_AND_KENTIMATA_AT_LEFT() { return getToken(ByzParser.YPSILI_AT_RIGHT_END_OF_OLIGON_AND_KENTIMATA_AT_LEFT, 0); }
		public TerminalNode YPSILI_AT_LEFT_END_OF_OLIGON_AND_KENTIMATA_AT_RIGHT() { return getToken(ByzParser.YPSILI_AT_LEFT_END_OF_OLIGON_AND_KENTIMATA_AT_RIGHT, 0); }
		public TerminalNode YPSILI_NEXT_TO_KENTIMA_OVER_OLIGON() { return getToken(ByzParser.YPSILI_NEXT_TO_KENTIMA_OVER_OLIGON, 0); }
		public TerminalNode YPSILI_NEXT_TO_KENTIMA_OVER_PETASTI() { return getToken(ByzParser.YPSILI_NEXT_TO_KENTIMA_OVER_PETASTI, 0); }
		public TerminalNode YPSILI_OVER_KENTIMA_OVER_OLIGON() { return getToken(ByzParser.YPSILI_OVER_KENTIMA_OVER_OLIGON, 0); }
		public TerminalNode YPSILI_OVER_KENTIMA_OVER_PETASTI() { return getToken(ByzParser.YPSILI_OVER_KENTIMA_OVER_PETASTI, 0); }
		public TerminalNode TWO_IPSILES_OVER_OLIGON() { return getToken(ByzParser.TWO_IPSILES_OVER_OLIGON, 0); }
		public TerminalNode TWO_IPSILES_OVER_PETASTI() { return getToken(ByzParser.TWO_IPSILES_OVER_PETASTI, 0); }
		public TerminalNode TWO_IPSILES_OVER_KETNIMATA_OVER_OLIGON() { return getToken(ByzParser.TWO_IPSILES_OVER_KETNIMATA_OVER_OLIGON, 0); }
		public TerminalNode TWO_IPSILES_OVER_KETNIMATA_OVER_PETASTI() { return getToken(ByzParser.TWO_IPSILES_OVER_KETNIMATA_OVER_PETASTI, 0); }
		public TerminalNode YPSILI_OVER_KENTIMA_OVER_OLIGON_AND_YPSILI_TO_LEFT() { return getToken(ByzParser.YPSILI_OVER_KENTIMA_OVER_OLIGON_AND_YPSILI_TO_LEFT, 0); }
		public TerminalNode YPSILI_OVER_KENTIMA_OVER_PETASTI_AND_YPSILI_RIGHT() { return getToken(ByzParser.YPSILI_OVER_KENTIMA_OVER_PETASTI_AND_YPSILI_RIGHT, 0); }
		public TerminalNode THREE_YPSILES_OVER_OLIGON() { return getToken(ByzParser.THREE_YPSILES_OVER_OLIGON, 0); }
		public TerminalNode THREE_YPSILES_OVER_PETASTI() { return getToken(ByzParser.THREE_YPSILES_OVER_PETASTI, 0); }
		public TerminalNode THREE_YPSILES_OVER_OLIGON_KENTIMATA_IN_MIDDLE() { return getToken(ByzParser.THREE_YPSILES_OVER_OLIGON_KENTIMATA_IN_MIDDLE, 0); }
		public TerminalNode THREE_YPSILES_OVER_PETASTI_KENTIMATA_IN_MIDDLE() { return getToken(ByzParser.THREE_YPSILES_OVER_PETASTI_KENTIMATA_IN_MIDDLE, 0); }
		public TerminalNode THREE_YPSILES_OVER_OLIGON_KENTIMA_IN_MIDDLE() { return getToken(ByzParser.THREE_YPSILES_OVER_OLIGON_KENTIMA_IN_MIDDLE, 0); }
		public TerminalNode APOSTROFOS_NEO() { return getToken(ByzParser.APOSTROFOS_NEO, 0); }
		public TerminalNode CONTINUOUS_ELAFRON() { return getToken(ByzParser.CONTINUOUS_ELAFRON, 0); }
		public TerminalNode ELAFRON() { return getToken(ByzParser.ELAFRON, 0); }
		public TerminalNode ELAPHRON_OVER_APOSTROPHOS() { return getToken(ByzParser.ELAPHRON_OVER_APOSTROPHOS, 0); }
		public TerminalNode CHAMILI() { return getToken(ByzParser.CHAMILI, 0); }
		public TerminalNode HAMILI_OVER_APOSTROPHOS() { return getToken(ByzParser.HAMILI_OVER_APOSTROPHOS, 0); }
		public TerminalNode HAMILI_OVER_ELAPHRON() { return getToken(ByzParser.HAMILI_OVER_ELAPHRON, 0); }
		public TerminalNode HAMILI_OVER_ELAPHRON_OVER_APOSTROPHOS() { return getToken(ByzParser.HAMILI_OVER_ELAPHRON_OVER_APOSTROPHOS, 0); }
		public TerminalNode APOSTROPHOS_OVER_PETASTI() { return getToken(ByzParser.APOSTROPHOS_OVER_PETASTI, 0); }
		public TerminalNode CONTINUOUS_ELAFRON_OVER_PETASTI() { return getToken(ByzParser.CONTINUOUS_ELAFRON_OVER_PETASTI, 0); }
		public TerminalNode ELAPHRON_OVER_PETASTI() { return getToken(ByzParser.ELAPHRON_OVER_PETASTI, 0); }
		public TerminalNode ELAPHRON_OVER_APOSTROPHOS_OVER_PETASTI() { return getToken(ByzParser.ELAPHRON_OVER_APOSTROPHOS_OVER_PETASTI, 0); }
		public TerminalNode TWO_APOSTROPHOI_IN_A_ROW() { return getToken(ByzParser.TWO_APOSTROPHOI_IN_A_ROW, 0); }
		public TerminalNode APOSTROPHOS_OVER_OLIGON() { return getToken(ByzParser.APOSTROPHOS_OVER_OLIGON, 0); }
		public TerminalNode ELAPHRON_OVER_OLIGON() { return getToken(ByzParser.ELAPHRON_OVER_OLIGON, 0); }
		public TerminalNode ELAPHRON_OVER_APOSTROPHOS_OVER_ISON() { return getToken(ByzParser.ELAPHRON_OVER_APOSTROPHOS_OVER_ISON, 0); }
		public TerminalNode HAMILI_OVER_OLIGON() { return getToken(ByzParser.HAMILI_OVER_OLIGON, 0); }
		public TerminalNode HAMILI_OVER_HAMILI() { return getToken(ByzParser.HAMILI_OVER_HAMILI, 0); }
		public TerminalNode HAMILI_OVER_PETASTI() { return getToken(ByzParser.HAMILI_OVER_PETASTI, 0); }
		public TerminalNode HAMILI_OVER_APOSTROPHOS_OVER_PETASTI() { return getToken(ByzParser.HAMILI_OVER_APOSTROPHOS_OVER_PETASTI, 0); }
		public TerminalNode HAMILI_OVER_ELAPHRON_OVER_PETASTI() { return getToken(ByzParser.HAMILI_OVER_ELAPHRON_OVER_PETASTI, 0); }
		public TerminalNode HAMILI_OVER_ELAPHRON_OVER_APOSTROPHOS_OVER_PETASTI() { return getToken(ByzParser.HAMILI_OVER_ELAPHRON_OVER_APOSTROPHOS_OVER_PETASTI, 0); }
		public TerminalNode HAMILI_OVER_HAMILI_OVER_PETASTI() { return getToken(ByzParser.HAMILI_OVER_HAMILI_OVER_PETASTI, 0); }
		public TerminalNode HAMILI_OVER_HAMILI_OVER_APOSTROPHOS() { return getToken(ByzParser.HAMILI_OVER_HAMILI_OVER_APOSTROPHOS, 0); }
		public TerminalNode HAMILI_OVER_HAMILI_OVER_APOSTROPHOS_OVER_PETASTI() { return getToken(ByzParser.HAMILI_OVER_HAMILI_OVER_APOSTROPHOS_OVER_PETASTI, 0); }
		public TerminalNode HAMILI_OVER_HAMILI_OVER_ELAPHRON() { return getToken(ByzParser.HAMILI_OVER_HAMILI_OVER_ELAPHRON, 0); }
		public TerminalNode HAMILI_OVER_HAMILI_OVER_ELAPHRON_OVER_APOSTROPHOS() { return getToken(ByzParser.HAMILI_OVER_HAMILI_OVER_ELAPHRON_OVER_APOSTROPHOS, 0); }
		public TerminalNode HAMILI_OVER_HAMILI_OVER_HAMILI() { return getToken(ByzParser.HAMILI_OVER_HAMILI_OVER_HAMILI, 0); }
		public TerminalNode ISON_NEO() { return getToken(ByzParser.ISON_NEO, 0); }
		public TerminalNode ISON_OVER_PETASTI() { return getToken(ByzParser.ISON_OVER_PETASTI, 0); }
		public TerminalNode ISON_OVER_OLIGON() { return getToken(ByzParser.ISON_OVER_OLIGON, 0); }
		public TerminalNode APOSTROPHOS_UNDER_ISON() { return getToken(ByzParser.APOSTROPHOS_UNDER_ISON, 0); }
		public TerminalNode APOSTROPHOS_AND_KENTIMATA_OVER_OLIGON() { return getToken(ByzParser.APOSTROPHOS_AND_KENTIMATA_OVER_OLIGON, 0); }
		public TerminalNode ISON_AND_KENTIMATA_OVER_OLIGON() { return getToken(ByzParser.ISON_AND_KENTIMATA_OVER_OLIGON, 0); }
		public TerminalNode ELAPHRON_AND_KENTIMATA_OVER_OLIGON() { return getToken(ByzParser.ELAPHRON_AND_KENTIMATA_OVER_OLIGON, 0); }
		public TerminalNode CONTINUOUS_ELAFRON_AND_KENTIMATA_OVER_OLIGON() { return getToken(ByzParser.CONTINUOUS_ELAFRON_AND_KENTIMATA_OVER_OLIGON, 0); }
		public TerminalNode ELAPHRON_OVER_APOSTROPHOS_AND_KENTIMATA_OVER_OLIGON() { return getToken(ByzParser.ELAPHRON_OVER_APOSTROPHOS_AND_KENTIMATA_OVER_OLIGON, 0); }
		public TerminalNode HAMILI_AND_KENTIMATA_OVER_OLIGON() { return getToken(ByzParser.HAMILI_AND_KENTIMATA_OVER_OLIGON, 0); }
		public YporroiContext yporroi() {
			return getRuleContext(YporroiContext.class,0);
		}
		public QCharContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_qChar; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterQChar(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitQChar(this);
		}
	}

	public final QCharContext qChar() throws RecognitionException {
		QCharContext _localctx = new QCharContext(_ctx, getState());
		enterRule(_localctx, 92, RULE_qChar);
		try {
			setState(466);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,45,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(394);
				kentimaToTheRightOfOligon();
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(395);
				match(OLIGON_NEO);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(396);
				match(PETASTI);
				}
				break;
			case 4:
				enterOuterAlt(_localctx, 4);
				{
				setState(397);
				match(KENTIMATA_NEO_MESO);
				}
				break;
			case 5:
				enterOuterAlt(_localctx, 5);
				{
				setState(398);
				match(KENTIMA_NEO_MESO);
				}
				break;
			case 6:
				enterOuterAlt(_localctx, 6);
				{
				setState(399);
				match(OLIGON_OVER_PETASTI);
				}
				break;
			case 7:
				enterOuterAlt(_localctx, 7);
				{
				setState(400);
				match(KENTIMA_UNDER_OLIGON);
				}
				break;
			case 8:
				enterOuterAlt(_localctx, 8);
				{
				setState(401);
				match(OLIGON_ABOVE_KENTIMATA);
				}
				break;
			case 9:
				enterOuterAlt(_localctx, 9);
				{
				setState(402);
				match(KENTIMATA_ABOVE_OLIGON);
				}
				break;
			case 10:
				enterOuterAlt(_localctx, 10);
				{
				setState(403);
				match(ANTIKENOMA_UNDER_KENTIMA_UNDER_OLIGON);
				}
				break;
			case 11:
				enterOuterAlt(_localctx, 11);
				{
				setState(404);
				match(KENTIMA_OVER_OLIGON);
				}
				break;
			case 12:
				enterOuterAlt(_localctx, 12);
				{
				setState(405);
				match(KENTIMA_OVER_PETASTI);
				}
				break;
			case 13:
				enterOuterAlt(_localctx, 13);
				{
				setState(406);
				match(YPSILI_AT_RIGHT_END_OF_OLIGON);
				}
				break;
			case 14:
				enterOuterAlt(_localctx, 14);
				{
				setState(407);
				match(YPSILI_AT_RIGHT_END_OF_PETASTI);
				}
				break;
			case 15:
				enterOuterAlt(_localctx, 15);
				{
				setState(408);
				match(YPSILI_AT_LEFT_END_OF_OLIGON);
				}
				break;
			case 16:
				enterOuterAlt(_localctx, 16);
				{
				setState(409);
				match(YPSILI_AT_LEFT_END_OF_PETASTI);
				}
				break;
			case 17:
				enterOuterAlt(_localctx, 17);
				{
				setState(410);
				match(YPSILI_AT_RIGHT_END_OF_OLIGON_AND_KENTIMATA_AT_LEFT);
				}
				break;
			case 18:
				enterOuterAlt(_localctx, 18);
				{
				setState(411);
				match(YPSILI_AT_LEFT_END_OF_OLIGON_AND_KENTIMATA_AT_RIGHT);
				}
				break;
			case 19:
				enterOuterAlt(_localctx, 19);
				{
				setState(412);
				match(YPSILI_NEXT_TO_KENTIMA_OVER_OLIGON);
				}
				break;
			case 20:
				enterOuterAlt(_localctx, 20);
				{
				setState(413);
				match(YPSILI_NEXT_TO_KENTIMA_OVER_PETASTI);
				}
				break;
			case 21:
				enterOuterAlt(_localctx, 21);
				{
				setState(414);
				match(YPSILI_OVER_KENTIMA_OVER_OLIGON);
				}
				break;
			case 22:
				enterOuterAlt(_localctx, 22);
				{
				setState(415);
				match(YPSILI_OVER_KENTIMA_OVER_PETASTI);
				}
				break;
			case 23:
				enterOuterAlt(_localctx, 23);
				{
				setState(416);
				match(TWO_IPSILES_OVER_OLIGON);
				}
				break;
			case 24:
				enterOuterAlt(_localctx, 24);
				{
				setState(417);
				match(TWO_IPSILES_OVER_PETASTI);
				}
				break;
			case 25:
				enterOuterAlt(_localctx, 25);
				{
				setState(418);
				match(TWO_IPSILES_OVER_KETNIMATA_OVER_OLIGON);
				}
				break;
			case 26:
				enterOuterAlt(_localctx, 26);
				{
				setState(419);
				match(TWO_IPSILES_OVER_KETNIMATA_OVER_PETASTI);
				}
				break;
			case 27:
				enterOuterAlt(_localctx, 27);
				{
				setState(420);
				match(YPSILI_OVER_KENTIMA_OVER_OLIGON_AND_YPSILI_TO_LEFT);
				}
				break;
			case 28:
				enterOuterAlt(_localctx, 28);
				{
				setState(421);
				match(YPSILI_OVER_KENTIMA_OVER_PETASTI_AND_YPSILI_RIGHT);
				}
				break;
			case 29:
				enterOuterAlt(_localctx, 29);
				{
				setState(422);
				match(THREE_YPSILES_OVER_OLIGON);
				}
				break;
			case 30:
				enterOuterAlt(_localctx, 30);
				{
				setState(423);
				match(THREE_YPSILES_OVER_PETASTI);
				}
				break;
			case 31:
				enterOuterAlt(_localctx, 31);
				{
				setState(424);
				match(THREE_YPSILES_OVER_OLIGON_KENTIMATA_IN_MIDDLE);
				}
				break;
			case 32:
				enterOuterAlt(_localctx, 32);
				{
				setState(425);
				match(THREE_YPSILES_OVER_PETASTI_KENTIMATA_IN_MIDDLE);
				}
				break;
			case 33:
				enterOuterAlt(_localctx, 33);
				{
				setState(426);
				match(THREE_YPSILES_OVER_OLIGON_KENTIMA_IN_MIDDLE);
				}
				break;
			case 34:
				enterOuterAlt(_localctx, 34);
				{
				setState(427);
				match(APOSTROFOS_NEO);
				}
				break;
			case 35:
				enterOuterAlt(_localctx, 35);
				{
				setState(428);
				match(CONTINUOUS_ELAFRON);
				}
				break;
			case 36:
				enterOuterAlt(_localctx, 36);
				{
				setState(429);
				match(ELAFRON);
				}
				break;
			case 37:
				enterOuterAlt(_localctx, 37);
				{
				setState(430);
				match(ELAPHRON_OVER_APOSTROPHOS);
				}
				break;
			case 38:
				enterOuterAlt(_localctx, 38);
				{
				setState(431);
				match(CHAMILI);
				}
				break;
			case 39:
				enterOuterAlt(_localctx, 39);
				{
				setState(432);
				match(HAMILI_OVER_APOSTROPHOS);
				}
				break;
			case 40:
				enterOuterAlt(_localctx, 40);
				{
				setState(433);
				match(HAMILI_OVER_ELAPHRON);
				}
				break;
			case 41:
				enterOuterAlt(_localctx, 41);
				{
				setState(434);
				match(HAMILI_OVER_ELAPHRON_OVER_APOSTROPHOS);
				}
				break;
			case 42:
				enterOuterAlt(_localctx, 42);
				{
				setState(435);
				match(APOSTROPHOS_OVER_PETASTI);
				}
				break;
			case 43:
				enterOuterAlt(_localctx, 43);
				{
				setState(436);
				match(CONTINUOUS_ELAFRON_OVER_PETASTI);
				}
				break;
			case 44:
				enterOuterAlt(_localctx, 44);
				{
				setState(437);
				match(ELAPHRON_OVER_PETASTI);
				}
				break;
			case 45:
				enterOuterAlt(_localctx, 45);
				{
				setState(438);
				match(ELAPHRON_OVER_APOSTROPHOS_OVER_PETASTI);
				}
				break;
			case 46:
				enterOuterAlt(_localctx, 46);
				{
				setState(439);
				match(TWO_APOSTROPHOI_IN_A_ROW);
				}
				break;
			case 47:
				enterOuterAlt(_localctx, 47);
				{
				setState(440);
				match(APOSTROPHOS_OVER_OLIGON);
				}
				break;
			case 48:
				enterOuterAlt(_localctx, 48);
				{
				setState(441);
				match(ELAPHRON_OVER_OLIGON);
				}
				break;
			case 49:
				enterOuterAlt(_localctx, 49);
				{
				setState(442);
				match(ELAPHRON_OVER_APOSTROPHOS_OVER_ISON);
				}
				break;
			case 50:
				enterOuterAlt(_localctx, 50);
				{
				setState(443);
				match(HAMILI_OVER_OLIGON);
				}
				break;
			case 51:
				enterOuterAlt(_localctx, 51);
				{
				setState(444);
				match(HAMILI_OVER_HAMILI);
				}
				break;
			case 52:
				enterOuterAlt(_localctx, 52);
				{
				setState(445);
				match(HAMILI_OVER_PETASTI);
				}
				break;
			case 53:
				enterOuterAlt(_localctx, 53);
				{
				setState(446);
				match(HAMILI_OVER_APOSTROPHOS_OVER_PETASTI);
				}
				break;
			case 54:
				enterOuterAlt(_localctx, 54);
				{
				setState(447);
				match(HAMILI_OVER_ELAPHRON_OVER_PETASTI);
				}
				break;
			case 55:
				enterOuterAlt(_localctx, 55);
				{
				setState(448);
				match(HAMILI_OVER_ELAPHRON_OVER_APOSTROPHOS_OVER_PETASTI);
				}
				break;
			case 56:
				enterOuterAlt(_localctx, 56);
				{
				setState(449);
				match(HAMILI_OVER_HAMILI_OVER_PETASTI);
				}
				break;
			case 57:
				enterOuterAlt(_localctx, 57);
				{
				setState(450);
				match(HAMILI_OVER_HAMILI_OVER_APOSTROPHOS);
				}
				break;
			case 58:
				enterOuterAlt(_localctx, 58);
				{
				setState(451);
				match(HAMILI_OVER_HAMILI_OVER_APOSTROPHOS_OVER_PETASTI);
				}
				break;
			case 59:
				enterOuterAlt(_localctx, 59);
				{
				setState(452);
				match(HAMILI_OVER_HAMILI_OVER_ELAPHRON);
				}
				break;
			case 60:
				enterOuterAlt(_localctx, 60);
				{
				setState(453);
				match(HAMILI_OVER_HAMILI_OVER_ELAPHRON_OVER_APOSTROPHOS);
				}
				break;
			case 61:
				enterOuterAlt(_localctx, 61);
				{
				setState(454);
				match(HAMILI_OVER_HAMILI_OVER_HAMILI);
				}
				break;
			case 62:
				enterOuterAlt(_localctx, 62);
				{
				setState(455);
				match(ISON_NEO);
				}
				break;
			case 63:
				enterOuterAlt(_localctx, 63);
				{
				setState(456);
				match(ISON_OVER_PETASTI);
				}
				break;
			case 64:
				enterOuterAlt(_localctx, 64);
				{
				setState(457);
				match(ISON_OVER_OLIGON);
				}
				break;
			case 65:
				enterOuterAlt(_localctx, 65);
				{
				setState(458);
				match(APOSTROPHOS_UNDER_ISON);
				}
				break;
			case 66:
				enterOuterAlt(_localctx, 66);
				{
				setState(459);
				match(APOSTROPHOS_AND_KENTIMATA_OVER_OLIGON);
				}
				break;
			case 67:
				enterOuterAlt(_localctx, 67);
				{
				setState(460);
				match(ISON_AND_KENTIMATA_OVER_OLIGON);
				}
				break;
			case 68:
				enterOuterAlt(_localctx, 68);
				{
				setState(461);
				match(ELAPHRON_AND_KENTIMATA_OVER_OLIGON);
				}
				break;
			case 69:
				enterOuterAlt(_localctx, 69);
				{
				setState(462);
				match(CONTINUOUS_ELAFRON_AND_KENTIMATA_OVER_OLIGON);
				}
				break;
			case 70:
				enterOuterAlt(_localctx, 70);
				{
				setState(463);
				match(ELAPHRON_OVER_APOSTROPHOS_AND_KENTIMATA_OVER_OLIGON);
				}
				break;
			case 71:
				enterOuterAlt(_localctx, 71);
				{
				setState(464);
				match(HAMILI_AND_KENTIMATA_OVER_OLIGON);
				}
				break;
			case 72:
				enterOuterAlt(_localctx, 72);
				{
				setState(465);
				yporroi();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class KentimaToTheRightOfOligonContext extends ParserRuleContext {
		public TerminalNode OLIGON_NEO() { return getToken(ByzParser.OLIGON_NEO, 0); }
		public TerminalNode KENTIMA_NEO_MESO() { return getToken(ByzParser.KENTIMA_NEO_MESO, 0); }
		public TerminalNode KENTIMA_TO_THE_RIGHT_OF_OLIGON() { return getToken(ByzParser.KENTIMA_TO_THE_RIGHT_OF_OLIGON, 0); }
		public KentimaToTheRightOfOligonContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_kentimaToTheRightOfOligon; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterKentimaToTheRightOfOligon(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitKentimaToTheRightOfOligon(this);
		}
	}

	public final KentimaToTheRightOfOligonContext kentimaToTheRightOfOligon() throws RecognitionException {
		KentimaToTheRightOfOligonContext _localctx = new KentimaToTheRightOfOligonContext(_ctx, getState());
		enterRule(_localctx, 94, RULE_kentimaToTheRightOfOligon);
		try {
			setState(471);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case OLIGON_NEO:
				enterOuterAlt(_localctx, 1);
				{
				setState(468);
				match(OLIGON_NEO);
				setState(469);
				match(KENTIMA_NEO_MESO);
				}
				break;
			case KENTIMA_TO_THE_RIGHT_OF_OLIGON:
				enterOuterAlt(_localctx, 2);
				{
				setState(470);
				match(KENTIMA_TO_THE_RIGHT_OF_OLIGON);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class YporroiContext extends ParserRuleContext {
		public TerminalNode YPORROI() { return getToken(ByzParser.YPORROI, 0); }
		public TerminalNode YPORROI_OVER_OLIGON() { return getToken(ByzParser.YPORROI_OVER_OLIGON, 0); }
		public TerminalNode YPORROI_OVER_PETASTI() { return getToken(ByzParser.YPORROI_OVER_PETASTI, 0); }
		public TerminalNode YPORROI_AND_KENTIMATA_OVER_OLIGON() { return getToken(ByzParser.YPORROI_AND_KENTIMATA_OVER_OLIGON, 0); }
		public YporroiContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_yporroi; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).enterYporroi(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ByzListener ) ((ByzListener)listener).exitYporroi(this);
		}
	}

	public final YporroiContext yporroi() throws RecognitionException {
		YporroiContext _localctx = new YporroiContext(_ctx, getState());
		enterRule(_localctx, 96, RULE_yporroi);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(473);
			_la = _input.LA(1);
			if ( !(((((_la - 320)) & ~0x3f) == 0 && ((1L << (_la - 320)) & ((1L << (YPORROI - 320)) | (1L << (YPORROI_OVER_OLIGON - 320)) | (1L << (YPORROI_OVER_PETASTI - 320)))) != 0) || _la==YPORROI_AND_KENTIMATA_OVER_OLIGON) ) {
			_errHandler.recoverInline(this);
			}
			else {
				if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
				_errHandler.reportMatch(this);
				consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\3\u018d\u01de\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\3\2\5\2f\n\2\3\2"+
		"\6\2i\n\2\r\2\16\2j\3\3\3\3\5\3o\n\3\3\3\7\3r\n\3\f\3\16\3u\13\3\3\3\5"+
		"\3x\n\3\3\4\7\4{\n\4\f\4\16\4~\13\4\3\4\7\4\u0081\n\4\f\4\16\4\u0084\13"+
		"\4\3\4\5\4\u0087\n\4\3\4\3\4\6\4\u008b\n\4\r\4\16\4\u008c\3\5\3\5\3\5"+
		"\3\6\3\6\3\7\3\7\7\7\u0096\n\7\f\7\16\7\u0099\13\7\3\7\5\7\u009c\n\7\3"+
		"\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\7\b\u00a7\n\b\f\b\16\b\u00aa\13\b\3"+
		"\b\3\b\3\t\3\t\5\t\u00b0\n\t\3\n\3\n\3\13\5\13\u00b5\n\13\3\13\3\13\5"+
		"\13\u00b9\n\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\5\13\u00c2\n\13\3\f"+
		"\3\f\3\f\5\f\u00c7\n\f\3\f\3\f\5\f\u00cb\n\f\3\f\3\f\3\f\3\f\3\f\5\f\u00d2"+
		"\n\f\3\f\3\f\5\f\u00d6\n\f\3\f\3\f\3\f\5\f\u00db\n\f\3\f\3\f\3\f\3\f\5"+
		"\f\u00e1\n\f\3\f\3\f\3\f\5\f\u00e6\n\f\3\r\5\r\u00e9\n\r\3\r\5\r\u00ec"+
		"\n\r\3\r\3\r\5\r\u00f0\n\r\3\r\7\r\u00f3\n\r\f\r\16\r\u00f6\13\r\3\r\7"+
		"\r\u00f9\n\r\f\r\16\r\u00fc\13\r\3\r\5\r\u00ff\n\r\3\16\3\16\3\16\3\16"+
		"\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\6\20\u0111"+
		"\n\20\r\20\16\20\u0112\3\20\3\20\3\20\3\20\3\20\3\20\3\20\6\20\u011c\n"+
		"\20\r\20\16\20\u011d\3\20\5\20\u0121\n\20\3\21\3\21\6\21\u0125\n\21\r"+
		"\21\16\21\u0126\3\22\5\22\u012a\n\22\3\22\6\22\u012d\n\22\r\22\16\22\u012e"+
		"\3\22\5\22\u0132\n\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23"+
		"\3\23\3\23\3\23\5\23\u0141\n\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27"+
		"\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36"+
		"\3\36\3\36\5\36\u015b\n\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3#\3#\3"+
		"#\3#\5#\u016b\n#\3$\3$\3$\3$\5$\u0171\n$\3%\3%\3&\3&\3\'\3\'\3(\3(\3("+
		"\3(\5(\u017d\n(\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3/\3/\3\60\3\60\3"+
		"\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3"+
		"\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3"+
		"\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3"+
		"\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3"+
		"\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\5"+
		"\60\u01d5\n\60\3\61\3\61\3\61\5\61\u01da\n\61\3\62\3\62\3\62\2\2\63\2"+
		"\4\6\b\n\f\16\20\22\24\26\30\32\34\36 \"$&(*,.\60\62\64\668:<>@BDFHJL"+
		"NPRTVXZ\\^`b\2\37\3\2\u00fe\u0100\4\2fl\u0099\u009b\5\288::==\4\2\u009d"+
		"\u009e\u00a0\u00a0\7\2\u00cf\u00cf\u00da\u00db\u00dd\u00dd\u00e4\u00e4"+
		"\u00e8\u00ea\6\2\u00d0\u00d0\u00de\u00de\u00e7\u00e7\u00eb\u00eb\5\2\u00d1"+
		"\u00d1\u00df\u00df\u00ec\u00ec\7\2\u00d2\u00d2\u00dc\u00dc\u00e0\u00e0"+
		"\u00e5\u00e5\u00ed\u00ed\5\2\u00d3\u00d4\u00e1\u00e1\u00ee\u00ef\4\2\u00d5"+
		"\u00d5\u00f0\u00f0\6\2\u00d6\u00d6\u00e2\u00e2\u00e6\u00e6\u00f1\u00f1"+
		"\4\2\u00e3\u00e3\u00f2\u00f3\3\2\u00f4\u00f5\3\2\u00f6\u00f7\4\2\u00f8"+
		"\u00f8\u0103\u0105\4\2\u00fe\u00fe\u0106\u0106\4\2\u00ff\u00ff\u0107\u0107"+
		"\4\2\u0100\u0100\u0108\u0108\4\2\u012d\u012d\u0136\u0136\4\2\u012e\u012e"+
		"\u0137\u0137\4\2\u012f\u012f\u0138\u0138\4\2\u0129\u0129\u0133\u0133\4"+
		"\2\u012a\u012a\u0134\u0134\4\2\u012b\u012b\u0135\u0135\6\2\u010f\u010f"+
		"\u0113\u0114\u0116\u0116\u0118\u011b\4\2\u011c\u011e\u0120\u0120\3\2\u0131"+
		"\u0132\4\2\u0115\u0115\u0121\u0124\5\2\u0142\u0142\u0176\u0177\u018c\u018c"+
		"\2\u024d\2e\3\2\2\2\4l\3\2\2\2\6|\3\2\2\2\b\u008e\3\2\2\2\n\u0091\3\2"+
		"\2\2\f\u0093\3\2\2\2\16\u009d\3\2\2\2\20\u00af\3\2\2\2\22\u00b1\3\2\2"+
		"\2\24\u00c1\3\2\2\2\26\u00e5\3\2\2\2\30\u00e8\3\2\2\2\32\u0100\3\2\2\2"+
		"\34\u0105\3\2\2\2\36\u0120\3\2\2\2 \u0122\3\2\2\2\"\u0131\3\2\2\2$\u0140"+
		"\3\2\2\2&\u0142\3\2\2\2(\u0144\3\2\2\2*\u0146\3\2\2\2,\u0148\3\2\2\2."+
		"\u014a\3\2\2\2\60\u014c\3\2\2\2\62\u014e\3\2\2\2\64\u0150\3\2\2\2\66\u0152"+
		"\3\2\2\28\u0154\3\2\2\2:\u015a\3\2\2\2<\u015c\3\2\2\2>\u015e\3\2\2\2@"+
		"\u0160\3\2\2\2B\u0162\3\2\2\2D\u016a\3\2\2\2F\u0170\3\2\2\2H\u0172\3\2"+
		"\2\2J\u0174\3\2\2\2L\u0176\3\2\2\2N\u017c\3\2\2\2P\u017e\3\2\2\2R\u0180"+
		"\3\2\2\2T\u0182\3\2\2\2V\u0184\3\2\2\2X\u0186\3\2\2\2Z\u0188\3\2\2\2\\"+
		"\u018a\3\2\2\2^\u01d4\3\2\2\2`\u01d9\3\2\2\2b\u01db\3\2\2\2df\5\30\r\2"+
		"ed\3\2\2\2ef\3\2\2\2fh\3\2\2\2gi\5\4\3\2hg\3\2\2\2ij\3\2\2\2jh\3\2\2\2"+
		"jk\3\2\2\2k\3\3\2\2\2ln\5^\60\2mo\5\"\22\2nm\3\2\2\2no\3\2\2\2os\3\2\2"+
		"\2pr\5\20\t\2qp\3\2\2\2ru\3\2\2\2sq\3\2\2\2st\3\2\2\2tw\3\2\2\2us\3\2"+
		"\2\2vx\5\n\6\2wv\3\2\2\2wx\3\2\2\2x\5\3\2\2\2y{\5\36\20\2zy\3\2\2\2{~"+
		"\3\2\2\2|z\3\2\2\2|}\3\2\2\2}\u0082\3\2\2\2~|\3\2\2\2\177\u0081\5\b\5"+
		"\2\u0080\177\3\2\2\2\u0081\u0084\3\2\2\2\u0082\u0080\3\2\2\2\u0082\u0083"+
		"\3\2\2\2\u0083\u0086\3\2\2\2\u0084\u0082\3\2\2\2\u0085\u0087\5\30\r\2"+
		"\u0086\u0085\3\2\2\2\u0086\u0087\3\2\2\2\u0087\u008a\3\2\2\2\u0088\u008b"+
		"\5\36\20\2\u0089\u008b\5\16\b\2\u008a\u0088\3\2\2\2\u008a\u0089\3\2\2"+
		"\2\u008b\u008c\3\2\2\2\u008c\u008a\3\2\2\2\u008c\u008d\3\2\2\2\u008d\7"+
		"\3\2\2\2\u008e\u008f\7\u00c7\2\2\u008f\u0090\7\u00c8\2\2\u0090\t\3\2\2"+
		"\2\u0091\u0092\5D#\2\u0092\13\3\2\2\2\u0093\u0097\7*\2\2\u0094\u0096\t"+
		"\2\2\2\u0095\u0094\3\2\2\2\u0096\u0099\3\2\2\2\u0097\u0095\3\2\2\2\u0097"+
		"\u0098\3\2\2\2\u0098\u009b\3\2\2\2\u0099\u0097\3\2\2\2\u009a\u009c\5$"+
		"\23\2\u009b\u009a\3\2\2\2\u009b\u009c\3\2\2\2\u009c\r\3\2\2\2\u009d\u00a8"+
		"\7\u00c7\2\2\u009e\u00a7\5 \21\2\u009f\u00a7\5\"\22\2\u00a0\u00a7\5\20"+
		"\t\2\u00a1\u00a7\5^\60\2\u00a2\u00a7\5\n\6\2\u00a3\u00a7\5\26\f\2\u00a4"+
		"\u00a7\7\u00c6\2\2\u00a5\u00a7\5\f\7\2\u00a6\u009e\3\2\2\2\u00a6\u009f"+
		"\3\2\2\2\u00a6\u00a0\3\2\2\2\u00a6\u00a1\3\2\2\2\u00a6\u00a2\3\2\2\2\u00a6"+
		"\u00a3\3\2\2\2\u00a6\u00a4\3\2\2\2\u00a6\u00a5\3\2\2\2\u00a7\u00aa\3\2"+
		"\2\2\u00a8\u00a6\3\2\2\2\u00a8\u00a9\3\2\2\2\u00a9\u00ab\3\2\2\2\u00aa"+
		"\u00a8\3\2\2\2\u00ab\u00ac\7\u00c8\2\2\u00ac\17\3\2\2\2\u00ad\u00b0\5"+
		"$\23\2\u00ae\u00b0\5:\36\2\u00af\u00ad\3\2\2\2\u00af\u00ae\3\2\2\2\u00b0"+
		"\21\3\2\2\2\u00b1\u00b2\t\3\2\2\u00b2\23\3\2\2\2\u00b3\u00b5\7B\2\2\u00b4"+
		"\u00b3\3\2\2\2\u00b4\u00b5\3\2\2\2\u00b5\u00b6\3\2\2\2\u00b6\u00c2\t\4"+
		"\2\2\u00b7\u00b9\7B\2\2\u00b8\u00b7\3\2\2\2\u00b8\u00b9\3\2\2\2\u00b9"+
		"\u00ba\3\2\2\2\u00ba\u00c2\t\5\2\2\u00bb\u00c2\7?\2\2\u00bc\u00c2\7<\2"+
		"\2\u00bd\u00c2\7F\2\2\u00be\u00c2\7\u009c\2\2\u00bf\u00c2\7\u009f\2\2"+
		"\u00c0\u00c2\7\u00a1\2\2\u00c1\u00b4\3\2\2\2\u00c1\u00b8\3\2\2\2\u00c1"+
		"\u00bb\3\2\2\2\u00c1\u00bc\3\2\2\2\u00c1\u00bd\3\2\2\2\u00c1\u00be\3\2"+
		"\2\2\u00c1\u00bf\3\2\2\2\u00c1\u00c0\3\2\2\2\u00c2\25\3\2\2\2\u00c3\u00c4"+
		"\5\22\n\2\u00c4\u00c6\5\24\13\2\u00c5\u00c7\7\u0098\2\2\u00c6\u00c5\3"+
		"\2\2\2\u00c6\u00c7\3\2\2\2\u00c7\u00e6\3\2\2\2\u00c8\u00ca\5\22\n\2\u00c9"+
		"\u00cb\7\u0098\2\2\u00ca\u00c9\3\2\2\2\u00ca\u00cb\3\2\2\2\u00cb\u00cc"+
		"\3\2\2\2\u00cc\u00cd\5\24\13\2\u00cd\u00e6\3\2\2\2\u00ce\u00cf\5\24\13"+
		"\2\u00cf\u00d1\5\22\n\2\u00d0\u00d2\7\u0098\2\2\u00d1\u00d0\3\2\2\2\u00d1"+
		"\u00d2\3\2\2\2\u00d2\u00e6\3\2\2\2\u00d3\u00d5\5\24\13\2\u00d4\u00d6\7"+
		"\u0098\2\2\u00d5\u00d4\3\2\2\2\u00d5\u00d6\3\2\2\2\u00d6\u00d7\3\2\2\2"+
		"\u00d7\u00d8\5\22\n\2\u00d8\u00e6\3\2\2\2\u00d9\u00db\7\u0098\2\2\u00da"+
		"\u00d9\3\2\2\2\u00da\u00db\3\2\2\2\u00db\u00dc\3\2\2\2\u00dc\u00dd\5\22"+
		"\n\2\u00dd\u00de\5\24\13\2\u00de\u00e6\3\2\2\2\u00df\u00e1\7\u0098\2\2"+
		"\u00e0\u00df\3\2\2\2\u00e0\u00e1\3\2\2\2\u00e1\u00e2\3\2\2\2\u00e2\u00e3"+
		"\5\24\13\2\u00e3\u00e4\5\22\n\2\u00e4\u00e6\3\2\2\2\u00e5\u00c3\3\2\2"+
		"\2\u00e5\u00c8\3\2\2\2\u00e5\u00ce\3\2\2\2\u00e5\u00d3\3\2\2\2\u00e5\u00da"+
		"\3\2\2\2\u00e5\u00e0\3\2\2\2\u00e6\27\3\2\2\2\u00e7\u00e9\7\u00c7\2\2"+
		"\u00e8\u00e7\3\2\2\2\u00e8\u00e9\3\2\2\2\u00e9\u00eb\3\2\2\2\u00ea\u00ec"+
		"\5\36\20\2\u00eb\u00ea\3\2\2\2\u00eb\u00ec\3\2\2\2\u00ec\u00ef\3\2\2\2"+
		"\u00ed\u00f0\5\32\16\2\u00ee\u00f0\5\34\17\2\u00ef\u00ed\3\2\2\2\u00ef"+
		"\u00ee\3\2\2\2\u00f0\u00f4\3\2\2\2\u00f1\u00f3\5\"\22\2\u00f2\u00f1\3"+
		"\2\2\2\u00f3\u00f6\3\2\2\2\u00f4\u00f2\3\2\2\2\u00f4\u00f5\3\2\2\2\u00f5"+
		"\u00fa\3\2\2\2\u00f6\u00f4\3\2\2\2\u00f7\u00f9\7\u00c6\2\2\u00f8\u00f7"+
		"\3\2\2\2\u00f9\u00fc\3\2\2\2\u00fa\u00f8\3\2\2\2\u00fa\u00fb\3\2\2\2\u00fb"+
		"\u00fe\3\2\2\2\u00fc\u00fa\3\2\2\2\u00fd\u00ff\7\u00c8\2\2\u00fe\u00fd"+
		"\3\2\2\2\u00fe\u00ff\3\2\2\2\u00ff\31\3\2\2\2\u0100\u0101\7\u00a2\2\2"+
		"\u0101\u0102\7@\2\2\u0102\u0103\7\u00b0\2\2\u0103\u0104\7\u00a8\2\2\u0104"+
		"\33\3\2\2\2\u0105\u0106\7\u00a2\2\2\u0106\u0107\7\u00b1\2\2\u0107\u0108"+
		"\7C\2\2\u0108\u0109\7\u00a9\2\2\u0109\u010a\7\u0113\2\2\u010a\35\3\2\2"+
		"\2\u010b\u0111\5\"\22\2\u010c\u0111\7\u00cb\2\2\u010d\u0111\7\u00cc\2"+
		"\2\u010e\u0111\7\u00cd\2\2\u010f\u0111\5 \21\2\u0110\u010b\3\2\2\2\u0110"+
		"\u010c\3\2\2\2\u0110\u010d\3\2\2\2\u0110\u010e\3\2\2\2\u0110\u010f\3\2"+
		"\2\2\u0111\u0112\3\2\2\2\u0112\u0110\3\2\2\2\u0112\u0113\3\2\2\2\u0113"+
		"\u0121\3\2\2\2\u0114\u011b\7\u00c7\2\2\u0115\u011c\5\"\22\2\u0116\u011c"+
		"\5 \21\2\u0117\u011c\7\u00cb\2\2\u0118\u011c\7\u00cc\2\2\u0119\u011c\7"+
		"\u00cd\2\2\u011a\u011c\5\36\20\2\u011b\u0115\3\2\2\2\u011b\u0116\3\2\2"+
		"\2\u011b\u0117\3\2\2\2\u011b\u0118\3\2\2\2\u011b\u0119\3\2\2\2\u011b\u011a"+
		"\3\2\2\2\u011c\u011d\3\2\2\2\u011d\u011b\3\2\2\2\u011d\u011e\3\2\2\2\u011e"+
		"\u011f\3\2\2\2\u011f\u0121\7\u00c8\2\2\u0120\u0110\3\2\2\2\u0120\u0114"+
		"\3\2\2\2\u0121\37\3\2\2\2\u0122\u0124\7\u00c9\2\2\u0123\u0125\7\u00c9"+
		"\2\2\u0124\u0123\3\2\2\2\u0125\u0126\3\2\2\2\u0126\u0124\3\2\2\2\u0126"+
		"\u0127\3\2\2\2\u0127!\3\2\2\2\u0128\u012a\7\u00c9\2\2\u0129\u0128\3\2"+
		"\2\2\u0129\u012a\3\2\2\2\u012a\u012c\3\2\2\2\u012b\u012d\7\u00ca\2\2\u012c"+
		"\u012b\3\2\2\2\u012d\u012e\3\2\2\2\u012e\u012c\3\2\2\2\u012e\u012f\3\2"+
		"\2\2\u012f\u0132\3\2\2\2\u0130\u0132\7\u00c9\2\2\u0131\u0129\3\2\2\2\u0131"+
		"\u0130\3\2\2\2\u0132#\3\2\2\2\u0133\u0141\5&\24\2\u0134\u0141\5(\25\2"+
		"\u0135\u0141\5*\26\2\u0136\u0141\5,\27\2\u0137\u0141\5.\30\2\u0138\u0141"+
		"\5\60\31\2\u0139\u0141\5\62\32\2\u013a\u0141\5\64\33\2\u013b\u0141\5\66"+
		"\34\2\u013c\u0141\58\35\2\u013d\u0141\7\u00d7\2\2\u013e\u0141\7\u00d8"+
		"\2\2\u013f\u0141\7\u00d9\2\2\u0140\u0133\3\2\2\2\u0140\u0134\3\2\2\2\u0140"+
		"\u0135\3\2\2\2\u0140\u0136\3\2\2\2\u0140\u0137\3\2\2\2\u0140\u0138\3\2"+
		"\2\2\u0140\u0139\3\2\2\2\u0140\u013a\3\2\2\2\u0140\u013b\3\2\2\2\u0140"+
		"\u013c\3\2\2\2\u0140\u013d\3\2\2\2\u0140\u013e\3\2\2\2\u0140\u013f\3\2"+
		"\2\2\u0141%\3\2\2\2\u0142\u0143\t\6\2\2\u0143\'\3\2\2\2\u0144\u0145\t"+
		"\7\2\2\u0145)\3\2\2\2\u0146\u0147\t\b\2\2\u0147+\3\2\2\2\u0148\u0149\t"+
		"\t\2\2\u0149-\3\2\2\2\u014a\u014b\t\n\2\2\u014b/\3\2\2\2\u014c\u014d\t"+
		"\13\2\2\u014d\61\3\2\2\2\u014e\u014f\t\f\2\2\u014f\63\3\2\2\2\u0150\u0151"+
		"\t\r\2\2\u0151\65\3\2\2\2\u0152\u0153\t\16\2\2\u0153\67\3\2\2\2\u0154"+
		"\u0155\t\17\2\2\u01559\3\2\2\2\u0156\u015b\5<\37\2\u0157\u015b\5> \2\u0158"+
		"\u015b\5@!\2\u0159\u015b\5B\"\2\u015a\u0156\3\2\2\2\u015a\u0157\3\2\2"+
		"\2\u015a\u0158\3\2\2\2\u015a\u0159\3\2\2\2\u015b;\3\2\2\2\u015c\u015d"+
		"\t\20\2\2\u015d=\3\2\2\2\u015e\u015f\t\21\2\2\u015f?\3\2\2\2\u0160\u0161"+
		"\t\22\2\2\u0161A\3\2\2\2\u0162\u0163\t\23\2\2\u0163C\3\2\2\2\u0164\u016b"+
		"\5F$\2\u0165\u016b\5N(\2\u0166\u016b\5V,\2\u0167\u016b\5X-\2\u0168\u016b"+
		"\5Z.\2\u0169\u016b\5\\/\2\u016a\u0164\3\2\2\2\u016a\u0165\3\2\2\2\u016a"+
		"\u0166\3\2\2\2\u016a\u0167\3\2\2\2\u016a\u0168\3\2\2\2\u016a\u0169\3\2"+
		"\2\2\u016bE\3\2\2\2\u016c\u0171\5H%\2\u016d\u0171\5J&\2\u016e\u0171\5"+
		"L\'\2\u016f\u0171\7\u0130\2\2\u0170\u016c\3\2\2\2\u0170\u016d\3\2\2\2"+
		"\u0170\u016e\3\2\2\2\u0170\u016f\3\2\2\2\u0171G\3\2\2\2\u0172\u0173\t"+
		"\24\2\2\u0173I\3\2\2\2\u0174\u0175\t\25\2\2\u0175K\3\2\2\2\u0176\u0177"+
		"\t\26\2\2\u0177M\3\2\2\2\u0178\u017d\5P)\2\u0179\u017d\5R*\2\u017a\u017d"+
		"\5T+\2\u017b\u017d\7\u012c\2\2\u017c\u0178\3\2\2\2\u017c\u0179\3\2\2\2"+
		"\u017c\u017a\3\2\2\2\u017c\u017b\3\2\2\2\u017dO\3\2\2\2\u017e\u017f\t"+
		"\27\2\2\u017fQ\3\2\2\2\u0180\u0181\t\30\2\2\u0181S\3\2\2\2\u0182\u0183"+
		"\t\31\2\2\u0183U\3\2\2\2\u0184\u0185\t\32\2\2\u0185W\3\2\2\2\u0186\u0187"+
		"\t\33\2\2\u0187Y\3\2\2\2\u0188\u0189\t\34\2\2\u0189[\3\2\2\2\u018a\u018b"+
		"\t\35\2\2\u018b]\3\2\2\2\u018c\u01d5\5`\61\2\u018d\u01d5\7\u013a\2\2\u018e"+
		"\u01d5\7\u013c\2\2\u018f\u01d5\7\u0146\2\2\u0190\u01d5\7\u0147\2\2\u0191"+
		"\u01d5\7\u014a\2\2\u0192\u01d5\7\u014b\2\2\u0193\u01d5\7\u014c\2\2\u0194"+
		"\u01d5\7\u014d\2\2\u0195\u01d5\7\u014e\2\2\u0196\u01d5\7\u0151\2\2\u0197"+
		"\u01d5\7\u0152\2\2\u0198\u01d5\7\u0153\2\2\u0199\u01d5\7\u0154\2\2\u019a"+
		"\u01d5\7\u0155\2\2\u019b\u01d5\7\u0156\2\2\u019c\u01d5\7\u0157\2\2\u019d"+
		"\u01d5\7\u0158\2\2\u019e\u01d5\7\u0159\2\2\u019f\u01d5\7\u015a\2\2\u01a0"+
		"\u01d5\7\u015b\2\2\u01a1\u01d5\7\u015c\2\2\u01a2\u01d5\7\u015d\2\2\u01a3"+
		"\u01d5\7\u015e\2\2\u01a4\u01d5\7\u015f\2\2\u01a5\u01d5\7\u0160\2\2\u01a6"+
		"\u01d5\7\u0161\2\2\u01a7\u01d5\7\u0162\2\2\u01a8\u01d5\7\u0163\2\2\u01a9"+
		"\u01d5\7\u0164\2\2\u01aa\u01d5\7\u0165\2\2\u01ab\u01d5\7\u0166\2\2\u01ac"+
		"\u01d5\7\u0167\2\2\u01ad\u01d5\7\u0140\2\2\u01ae\u01d5\7\u0168\2\2\u01af"+
		"\u01d5\7\u0144\2\2\u01b0\u01d5\7\u0169\2\2\u01b1\u01d5\7\u0145\2\2\u01b2"+
		"\u01d5\7\u016a\2\2\u01b3\u01d5\7\u016b\2\2\u01b4\u01d5\7\u016c\2\2\u01b5"+
		"\u01d5\7\u016d\2\2\u01b6\u01d5\7\u016e\2\2\u01b7\u01d5\7\u016f\2\2\u01b8"+
		"\u01d5\7\u0170\2\2\u01b9\u01d5\7\u0171\2\2\u01ba\u01d5\7\u0172\2\2\u01bb"+
		"\u01d5\7\u0173\2\2\u01bc\u01d5\7\u0174\2\2\u01bd\u01d5\7\u0175\2\2\u01be"+
		"\u01d5\7\u0178\2\2\u01bf\u01d5\7\u0179\2\2\u01c0\u01d5\7\u017a\2\2\u01c1"+
		"\u01d5\7\u017b\2\2\u01c2\u01d5\7\u017c\2\2\u01c3\u01d5\7\u017d\2\2\u01c4"+
		"\u01d5\7\u017e\2\2\u01c5\u01d5\7\u017f\2\2\u01c6\u01d5\7\u0180\2\2\u01c7"+
		"\u01d5\7\u0181\2\2\u01c8\u01d5\7\u0182\2\2\u01c9\u01d5\7\u0139\2\2\u01ca"+
		"\u01d5\7\u0183\2\2\u01cb\u01d5\7\u0184\2\2\u01cc\u01d5\7\u0185\2\2\u01cd"+
		"\u01d5\7\u0186\2\2\u01ce\u01d5\7\u0187\2\2\u01cf\u01d5\7\u0188\2\2\u01d0"+
		"\u01d5\7\u0189\2\2\u01d1\u01d5\7\u018a\2\2\u01d2\u01d5\7\u018b\2\2\u01d3"+
		"\u01d5\5b\62\2\u01d4\u018c\3\2\2\2\u01d4\u018d\3\2\2\2\u01d4\u018e\3\2"+
		"\2\2\u01d4\u018f\3\2\2\2\u01d4\u0190\3\2\2\2\u01d4\u0191\3\2\2\2\u01d4"+
		"\u0192\3\2\2\2\u01d4\u0193\3\2\2\2\u01d4\u0194\3\2\2\2\u01d4\u0195\3\2"+
		"\2\2\u01d4\u0196\3\2\2\2\u01d4\u0197\3\2\2\2\u01d4\u0198\3\2\2\2\u01d4"+
		"\u0199\3\2\2\2\u01d4\u019a\3\2\2\2\u01d4\u019b\3\2\2\2\u01d4\u019c\3\2"+
		"\2\2\u01d4\u019d\3\2\2\2\u01d4\u019e\3\2\2\2\u01d4\u019f\3\2\2\2\u01d4"+
		"\u01a0\3\2\2\2\u01d4\u01a1\3\2\2\2\u01d4\u01a2\3\2\2\2\u01d4\u01a3\3\2"+
		"\2\2\u01d4\u01a4\3\2\2\2\u01d4\u01a5\3\2\2\2\u01d4\u01a6\3\2\2\2\u01d4"+
		"\u01a7\3\2\2\2\u01d4\u01a8\3\2\2\2\u01d4\u01a9\3\2\2\2\u01d4\u01aa\3\2"+
		"\2\2\u01d4\u01ab\3\2\2\2\u01d4\u01ac\3\2\2\2\u01d4\u01ad\3\2\2\2\u01d4"+
		"\u01ae\3\2\2\2\u01d4\u01af\3\2\2\2\u01d4\u01b0\3\2\2\2\u01d4\u01b1\3\2"+
		"\2\2\u01d4\u01b2\3\2\2\2\u01d4\u01b3\3\2\2\2\u01d4\u01b4\3\2\2\2\u01d4"+
		"\u01b5\3\2\2\2\u01d4\u01b6\3\2\2\2\u01d4\u01b7\3\2\2\2\u01d4\u01b8\3\2"+
		"\2\2\u01d4\u01b9\3\2\2\2\u01d4\u01ba\3\2\2\2\u01d4\u01bb\3\2\2\2\u01d4"+
		"\u01bc\3\2\2\2\u01d4\u01bd\3\2\2\2\u01d4\u01be\3\2\2\2\u01d4\u01bf\3\2"+
		"\2\2\u01d4\u01c0\3\2\2\2\u01d4\u01c1\3\2\2\2\u01d4\u01c2\3\2\2\2\u01d4"+
		"\u01c3\3\2\2\2\u01d4\u01c4\3\2\2\2\u01d4\u01c5\3\2\2\2\u01d4\u01c6\3\2"+
		"\2\2\u01d4\u01c7\3\2\2\2\u01d4\u01c8\3\2\2\2\u01d4\u01c9\3\2\2\2\u01d4"+
		"\u01ca\3\2\2\2\u01d4\u01cb\3\2\2\2\u01d4\u01cc\3\2\2\2\u01d4\u01cd\3\2"+
		"\2\2\u01d4\u01ce\3\2\2\2\u01d4\u01cf\3\2\2\2\u01d4\u01d0\3\2\2\2\u01d4"+
		"\u01d1\3\2\2\2\u01d4\u01d2\3\2\2\2\u01d4\u01d3\3\2\2\2\u01d5_\3\2\2\2"+
		"\u01d6\u01d7\7\u013a\2\2\u01d7\u01da\7\u0147\2\2\u01d8\u01da\7\u018d\2"+
		"\2\u01d9\u01d6\3\2\2\2\u01d9\u01d8\3\2\2\2\u01daa\3\2\2\2\u01db\u01dc"+
		"\t\36\2\2\u01dcc\3\2\2\2\61ejnsw|\u0082\u0086\u008a\u008c\u0097\u009b"+
		"\u00a6\u00a8\u00af\u00b4\u00b8\u00c1\u00c6\u00ca\u00d1\u00d5\u00da\u00e0"+
		"\u00e5\u00e8\u00eb\u00ef\u00f4\u00fa\u00fe\u0110\u0112\u011b\u011d\u0120"+
		"\u0126\u0129\u012e\u0131\u0140\u015a\u016a\u0170\u017c\u01d4\u01d9";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}